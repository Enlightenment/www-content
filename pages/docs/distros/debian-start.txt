~~Title: Debian~~
===== Debian =====

Enlightenment and EFL Debian official packages are outdated.

Two ways are possible : install from the sources, or install from the debian experimental repository. 

To start Enlightenment, see the run-time requirements below.

==== Install from the sources ====

In this part, the installation for Debian is done from sources like in the [[/docs-efl-start|Get EFL installed]] tutorial.

The following part provides a script and shows how to install Enlightenment and Terminology with their dependencies on Debian. The script below can be easily adapted for Elementary.

Please note that procedure will provide a very minimal system. On a fresh minimal debian system, the whole system size is 2.4G disk used, but it will do nothing except... enlightenment !

Start by creating a new directory to work in:

<code bash>
#create a directory
mkdir enlight
cd enlight
</code>

== Dependencies ==

Make sure all the dependencies are installed:

<code bash>
sudo apt update
sudo apt install \
        make gcc bison flex gawk subversion automake autoconf doxygen\
        check autotools-dev autoconf-archive autopoint libtool gettext \
        libpam0g-dev libfreetype6-dev libpng12-dev zlib1g-dev  libjpeg-dev\
        libdbus-1-dev luajit libluajit-5.1-dev libx11-dev libxcursor-dev\
        libxrender-dev libxrandr-dev libxfixes-dev libxdamage-dev\
        libxcomposite-dev libxss-dev libxp-dev libxext-dev libxinerama-dev \
        libxkbfile-dev libxtst-dev libxcb1-dev libxcb-shape0-dev\
        libxcb-keysyms1-dev libpulse-dev libsndfile1-dev  libudev-dev\
        libblkid-dev libmount-dev libgstreamer1.0-dev libtiff5-dev libgif-dev\
        curl libssl-dev libspectre-dev libpoppler-dev librsvg2-dev\
        libraw-dev libxinerama-dev git libfribidi-dev libcogl-gles2-dev\
        libbullet-dev libgstreamer-plugins-base1.0-dev libvlc-dev \
        libpoppler-cpp-dev libsystemd-dev
</code>

<note>
If you do not want systemd support, you will have to provide to ''autogen.sh'' or ''configure'': <code>--disable-systemd</code>
</note>

== Enlightenment and EFL build script ==

Copy the source code of the shell script below in a file called ''build_enlight.sh''.

<code bash>
#!/bin/bash

set -e
# Target directory
PREFIX="/usr/local"

# List of the needed packages
# To adapt to your needs
PROJECTS="efl enlightenment"

# Download url
SITE=" https://git.enlightenment.org/core/"
OPT="--prefix=$PREFIX"

PKG_CONFIG_PATH="$PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH"
PATH="$PREFIX/bin:$PATH"
LD_LIBRARY_PATH="$PREFIX/lib:$LD_LIBRARY_PATH"
LOG="installe.log"
rm -f $LOG      # Delete precedent log file
touch $LOG      # Create a log file
date >> $LOG    # Add current date

# Download and compile each module
for PROJ in $PROJECTS; do
    # Cloning
    if [ ! -d $PROJ ]; then
        git clone $SITE$PROJ.git $PROJ
    fi
    # Go building and installing
    cd $PROJ*
    make clean distclean || true
    ./autogen.sh $OPT
    make
    sudo make install
    cd ..
    sudo ldconfig
    echo $PROJ" is installed" >> $LOG
done

#Optionnal Terminology
git clone https://git.enlightenment.org/apps/terminology.git
cd terminology
./autogen.sh $OPT
make
sudo make all install
cd ..
sudo ldconfig
</code>

This script clones the repositories, builds and installs the EFL libraries, then builds and installs Terminology.

Set the script executable:

<code bash>
chmod ug+x build_enlight.sh
</code>

Then, execute the script to compile and install enlightenment. 

It is not mandatory, but if you want to use a display manager such as gdm, kdm or liqhtdm :
<code bash>
sudo ln -s /usr/local/share/xsessions/enlightenment.desktop /usr/share/xsessions/
</code>

==== From debian experimental repository ====

Edit /etc/apt/sources.list to add an entry :
<code>
deb http://httpredir.debian.org/debian experimental main
</code>
Then install enlightenment with :
<code>
apt-get update
apt-get -t experimental install enlightenment
</code>
And terminology :
<code>
apt-get -t experimental install terminology
</code>

For upgrade see [[https://wiki.debian.org/DebianExperimental|debian experimental]].

==== Run-time requirements ====
A minimum run-time environment requires :
<code bash>
apt install dbus-x11 xinit xorg
</code>
and creating ./.xinitrc :
<code>
exec enlightenment_start
</code>
It may be necessary to make it executable.

Then run on an X terminal: 
<code>
startx
</code>

These run-time requirements may be provided - or not - by a display manger. In this case, you can reboot and choose Enlightenment as a window manager.

== Test ==
This procedure has been tested in February 2017 on jessie 8.7.1 and on stretch (potential problems on stretch).
