<title>Elm.Layout_Part_Alias_Description</title>
===== Signature =====

<code>
struct Elm.Layout_Part_Alias_Description {
    alias: string;
    real_part: string;
}
</code>

===== C signature =====

<code c>
typedef struct _Elm_Layout_Part_Alias_Description {
    const char *alias;
    const char *real_part;
} Elm_Layout_Part_Alias_Description;
</code>

===== Description =====

%%Elementary Layout-based widgets may declare part proxies, i.e., aliases for real theme part names to expose to the API calls: - elm_layout_text_set() - elm_layout_text_get() - elm_layout_content_set() - elm_layout_content_get() - elm_layout_content_unset() and their equivalents. This list must be set on the "_smart_set_user()" function of inheriting widgets, so that part aliasing is handled automatically for them.%%

{{page>:docs:efl:user:struct:elm:layout_part_alias_description:description&nodate&nolink&nouser}}

===== Fields =====

{{page>:docs:efl:user:struct:elm:layout_part_alias_description:fields&nodate&nolink&nouser}}

  * **alias** - %%Alternate name for a given (real) part. Calls receiving this string as a part name will be translated to the string at Elm.Layout_Part_Proxies_Description::real_part%%
  * **real_part** - %%Target part name for the alias set on Elm.Layout_Part_Proxies_Description::real_part. An example of usage would be "default" on that field, with "elm.content.swallow" on this one%%

