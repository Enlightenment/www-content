<title>Elm.Gen.Item.Class</title>
===== Signature =====

<code>
struct Elm.Gen.Item.Class {
    version: int;
    refcount: uint;
    delete_me: bool;
    item_style: string;
    decorate_item_style: string;
    decorate_all_item_style: string;
    func: Elm.Gen.Item.Class.Functions;
}
</code>

===== C signature =====

<code c>
typedef struct _Elm_Gen_Item_Class {
    int version;
    unsigned int refcount;
    Eina_Bool delete_me;
    const char *item_style;
    const char *decorate_item_style;
    const char *decorate_all_item_style;
    Elm_Gen_Item_Class_Functions func;
} Elm_Gen_Item_Class;
</code>

===== Description =====

%%Gengrid or Genlist item class definition.%%

{{page>:docs:efl:user:struct:elm:gen:item:class:description&nodate&nolink&nouser}}

===== Fields =====

{{page>:docs:efl:user:struct:elm:gen:item:class:fields&nodate&nolink&nouser}}

  * **version** - %%Set by elementary if you alloc an item class using elm_genlist/gengrid_item_class_new(), or if you set your own class (must be const) then set it to ELM_GENLIST/GENGRID_ITEM_CLASS_VERSION.%%
  * **refcount** - %%Set it to 0 if you use your own const class, or its managed for you by class ref/unref calls.%%
  * **delete_me** - %%Leave this alone - set it to 0 if you have a const class of your own.%%
  * **item_style** - %%Name of the visual style to use for this item. If you don't know use "default".%%
  * **decorate_item_style** - %%Style used if item is set to a decorate mode. see elm_genlist_item_decorate_mode_set() or NULL if you don't care. currently it's used only in genlist.%%
  * **decorate_all_item_style** - %%Style to use when in edit mode, or NULL if you don't care. Currently it's used only in genlist.%%
  * **func** - %%Set of callbacks%%

