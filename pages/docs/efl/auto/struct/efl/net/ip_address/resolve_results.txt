<title>Efl.Net.Ip_Address.Resolve_Results</title>
===== Signature =====

<code>
struct Efl.Net.Ip_Address.Resolve_Results {
    request_address: string;
    canonical_name: string;
    results: array<Efl.Net.Ip_Address>;
}
</code>

===== C signature =====

<code c>
typedef struct _Efl_Net_Ip_Address_Resolve_Results {
    const char *request_address;
    const char *canonical_name;
    Eina_Array *results;
} Efl_Net_Ip_Address_Resolve_Results;
</code>

===== Description =====

%%The results of %%[[:docs:efl:auto:class:efl:net:ip_address:method:resolve|Efl.Net.Ip_Address.resolve]]%% call.%%

%%This structure is created by %%[[:docs:efl:auto:class:efl:net:ip_address:method:resolve|Efl.Net.Ip_Address.resolve]]%%.%%

//Since 1.19//

{{page>:docs:efl:user:struct:efl:net:ip_address:resolve_results:description&nodate&nolink&nouser}}

===== Fields =====

{{page>:docs:efl:user:struct:efl:net:ip_address:resolve_results:fields&nodate&nolink&nouser}}

  * **request_address** - %%The 'address' argument given to Efl.Net.Ip_Address.resolve%%
  * **canonical_name** - %%The canonical name, if it was requested in flags%%
  * **results** - %%The resolved objects. Do not modify this array, but you can keep reference to elements using efl_ref() and efl_unref()%%

