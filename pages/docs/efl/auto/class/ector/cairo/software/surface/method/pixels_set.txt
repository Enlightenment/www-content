<title>Ector.Cairo.Software.Surface.pixels_set</title>
//Overridden from [[:docs:efl:auto:mixin:ector:buffer:method:pixels_set|Ector.Buffer.pixels_set]].//===== Signature =====

<code>
pixels_set @pure_virtual {
    params {
        @in pixels: void_ptr;
        @in width: int;
        @in height: int;
        @in stride: int;
        @in cspace: Efl.Gfx.Colorspace;
        @in writable: bool;
        @in l: ubyte;
        @in r: ubyte;
        @in t: ubyte;
        @in b: ubyte;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool ector_buffer_pixels_set(Eo *obj, void *pixels, int width, int height, int stride, Efl_Gfx_Colorspace cspace, Eina_Bool writable, unsigned char l, unsigned char r, unsigned char t, unsigned char b);
</code>

===== Parameters =====

  * **pixels** //(in)// - %%If %%''null''%%, allocates an empty buffer%%
  * **width** //(in)// - %%Buffer width%%
  * **height** //(in)// - %%Buffer height%%
  * **stride** //(in)// - %%Can be 0%%
  * **cspace** //(in)// - %%Buffer colorspace%%
  * **writable** //(in)// - %%Buffer is writable%%
  * **l** //(in)// - %%Left border pixels, usually 0 or 1%%
  * **r** //(in)// - %%Right border pixels, usually 0 or 1%%
  * **t** //(in)// - %%Top border pixels, usually 0 or 1%%
  * **b** //(in)// - %%Bottom border pixels, usually 0 or 1%%

===== Description =====

%%Set the source pixels for this buffer, or allocate a new memory region%%

//Since 1.17//
{{page>:docs:efl:user:class:ector:cairo:software:surface:method:pixels_set:description&nodate&nolink&nouser}}

===== Implemented by =====

  * [[:docs:efl:auto:mixin:ector:buffer:method:pixels_set|Ector.Buffer.pixels_set]]
  * [[:docs:efl:auto:mixin:ector:software:buffer:base:method:pixels_set|Ector.Software.Buffer.Base.pixels_set]]
  * **Ector.Cairo.Software.Surface.pixels_set**

