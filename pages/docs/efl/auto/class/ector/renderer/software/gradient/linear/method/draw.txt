<title>Ector.Renderer.Software.Gradient.Linear.draw</title>
//Overridden from [[:docs:efl:auto:class:ector:renderer:method:draw|Ector.Renderer.draw]].//===== Signature =====

<code>
draw @pure_virtual {
    params {
        @in op: Efl.Gfx.Render_Op;
        @in clips: array<ptr(Eina.Rectangle)>;
        @in mul_col: uint;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool ector_renderer_draw(Eo *obj, Efl_Gfx_Render_Op op, Eina_Array *clips, unsigned int mul_col);
</code>

===== Parameters =====

  * **op** //(in)// - %%Renderer operation%%
  * **clips** //(in)// - %%Array of %%[[:docs:efl:auto:struct:eina:rectangle|Eina.Rectangle]]%% clip%%
  * **mul_col** //(in)// - %%Premultiplied color%%

===== Description =====

%%Actual draw operation%%
{{page>:docs:efl:user:class:ector:renderer:software:gradient:linear:method:draw:description&nodate&nolink&nouser}}

===== Implemented by =====

  * [[:docs:efl:auto:class:ector:renderer:method:draw|Ector.Renderer.draw]]
  * **Ector.Renderer.Software.Gradient.Linear.draw**
  * [[:docs:efl:auto:class:ector:renderer:software:shape:method:draw|Ector.Renderer.Software.Shape.draw]]
  * [[:docs:efl:auto:class:ector:renderer:software:gradient:radial:method:draw|Ector.Renderer.Software.Gradient.Radial.draw]]
  * [[:docs:efl:auto:class:ector:renderer:gl:method:draw|Ector.Renderer.GL.draw]]
  * [[:docs:efl:auto:class:ector:renderer:gl:shape:method:draw|Ector.Renderer.GL.Shape.draw]]
  * [[:docs:efl:auto:class:ector:renderer:gl:gradient:linear:method:draw|Ector.Renderer.GL.Gradient.Linear.draw]]
  * [[:docs:efl:auto:class:ector:renderer:gl:gradient:radial:method:draw|Ector.Renderer.GL.Gradient.Radial.draw]]
  * [[:docs:efl:auto:class:ector:renderer:cairo:method:draw|Ector.Renderer.Cairo.draw]]
  * [[:docs:efl:auto:class:ector:renderer:cairo:shape:method:draw|Ector.Renderer.Cairo.Shape.draw]]
  * [[:docs:efl:auto:class:ector:renderer:cairo:gradient:linear:method:draw|Ector.Renderer.Cairo.Gradient.Linear.draw]]
  * [[:docs:efl:auto:class:ector:renderer:cairo:gradient:radial:method:draw|Ector.Renderer.Cairo.Gradient.Radial.draw]]

