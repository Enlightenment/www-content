<title>Elm.List.item_insert_before</title>
===== Signature =====

<code>
Elm.List.item_insert_before {
    params {
        @in before: Elm.Widget.Item;
        @in label: string;
        @in icon: Efl.Canvas.Object @optional;
        @in end: Efl.Canvas.Object @optional;
        @in func: Evas_Smart_Cb @optional;
        @in data: const(void_ptr) @optional;
    }
    return: Elm.Widget.Item;
}
</code>

===== C signature =====

<code c>
Elm_Widget_Item *elm_obj_list_item_insert_before(Eo *obj, Elm_Widget_Item *before, const char *label, Efl_Canvas_Object *icon, Efl_Canvas_Object *end, Evas_Smart_Cb func, const void *data);
</code>

===== Parameters =====

  * **before** //(in)// - %%The list item to insert before.%%
  * **label** //(in)// - %%The label of the list item.%%
  * **icon** //(in)// - %%The icon object to use for the left side of the item. An icon can be any Evas object, but usually it is an icon created with elm_icon_add().%%
  * **end** //(in)// - %%The icon object to use for the right side of the item. An icon can be any Evas object.%%
  * **func** //(in)// - %%The function to call when the item is clicked.%%
  * **data** //(in)// - %%The data to associate with the item for related callbacks.%%

===== Description =====

%%Insert a new item into the list object before item %%''before''%%.%%

%%A new item will be created and added to the list. Its position in this list will be just before item %%''before''%%.%%

%%Items created with this method can be deleted with elm_object_item_del().%%

%%Associated %%''data''%% can be properly freed when item is deleted if a callback function is set with elm_object_item_del_cb_set().%%

%%If a function is passed as argument, it will be called every time this item is selected, i.e., the user clicks over an unselected item. If always select is enabled it will call this function every time user clicks over an item (already selected or not). If such function isn't needed, just passing %%''NULL''%% as %%''func''%% is enough. The same should be done for %%''data''%%.%%

<note>
%%Remember that the label parameter is copied inside the list. So if an application dynamically allocated the label, the application should free the label after this call.%%
</note>
{{page>:docs:efl:user:class:elm:list:method:item_insert_before:description&nodate&nolink&nouser}}

