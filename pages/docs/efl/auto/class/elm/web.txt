<title>Elm.Web</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    elm_web [fillcolor = "black", label = "Elm.Web", color = "gray15", fontcolor = "white", style = "filled"]
    elm_widget [fillcolor = "gray15", label = "Elm.Widget", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_group [fillcolor = "gray15", label = "Efl.Canvas.Group", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_object [fillcolor = "gray15", label = "Efl.Canvas.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_stack [fillcolor = "gray15", label = "Efl.Gfx.Stack", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_animator [fillcolor = "gray15", label = "Efl.Animator", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_interface [fillcolor = "gray15", label = "Efl.Input.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_hint [fillcolor = "gray15", label = "Efl.Gfx.Size.Hint", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_map [fillcolor = "gray15", label = "Efl.Gfx.Map", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_loop_user [fillcolor = "gray15", label = "Efl.Loop_User", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    elm_interface_atspi_accessible [fillcolor = "gray15", label = "Elm.Interface.Atspi_Accessible", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    elm_interface_atspi_component [fillcolor = "gray15", label = "Elm.Interface.Atspi_Component", color = "deepskyblue", fontcolor = "white", style = "filled"]

    elm_web -> elm_widget
    elm_widget -> efl_canvas_group
    efl_canvas_group -> efl_canvas_object
    efl_canvas_object -> efl_object
    efl_canvas_object -> efl_gfx
    efl_canvas_object -> efl_gfx_stack
    efl_canvas_object -> efl_animator
    efl_canvas_object -> efl_input_interface
    efl_canvas_object -> efl_gfx_size_hint
    efl_canvas_object -> efl_gfx_map
    efl_gfx_map -> efl_interface
    efl_gfx_map -> efl_object
    efl_canvas_object -> efl_loop_user
    efl_loop_user -> efl_object
    elm_widget -> elm_interface_atspi_accessible
    elm_interface_atspi_accessible -> efl_interface
    elm_interface_atspi_accessible -> efl_object
    elm_widget -> elm_interface_atspi_component
}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:docs:efl:auto:class:elm:web|Elm.Web]] //(class)//**
    * [[:docs:efl:auto:class:elm:widget|Elm.Widget]] //(class)//
      * [[:docs:efl:auto:class:efl:canvas:group|Efl.Canvas.Group]] //(class)//
        * [[:docs:efl:auto:class:efl:canvas:object|Efl.Canvas.Object]] //(class)//
          * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
          * [[:docs:efl:auto:interface:efl:gfx|Efl.Gfx]] //(interface)//
          * [[:docs:efl:auto:interface:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
          * [[:docs:efl:auto:interface:efl:animator|Efl.Animator]] //(interface)//
          * [[:docs:efl:auto:interface:efl:input:interface|Efl.Input.Interface]] //(interface)//
          * [[:docs:efl:auto:interface:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] //(interface)//
          * [[:docs:efl:auto:mixin:efl:gfx:map|Efl.Gfx.Map]] //(mixin)//
            * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
            * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
          * [[:docs:efl:auto:class:efl:loop_user|Efl.Loop_User]] //(class)//
            * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
      * [[:docs:efl:auto:mixin:elm:interface:atspi_accessible|Elm.Interface.Atspi_Accessible]] //(mixin)//
        * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
        * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
      * [[:docs:efl:auto:mixin:elm:interface:atspi_component|Elm.Interface.Atspi_Component]] //(mixin)//

===== Description =====

%%Elementary web view class%%

{{page>:docs:efl:user:class:elm:web:description&nodate&nolink&nouser}}

===== Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:class:elm:web:method:back|back]] | %%Goes back one step in the browsing history.%% |
| [[:docs:efl:auto:class:elm:web:method:forward|forward]] | %%Goes forward one step in the browsing history.%% |
| [[:docs:efl:auto:class:elm:web:method:html_string_load|html_string_load]] | %%Loads the specified %%''html''%% string as the content of the web object.%% |
| [[:docs:efl:auto:class:elm:web:method:navigate_possible_get|navigate_possible_get]] | %%Queries whether it's possible to jump the given number of steps.%% |
| [[:docs:efl:auto:class:elm:web:method:navigate|navigate]] | %%Jumps the given number of steps in the browsing history.%% |
| [[:docs:efl:auto:class:elm:web:method:popup_destroy|popup_destroy]] | %%Dismisses an open dropdown popup%% |
| [[:docs:efl:auto:class:elm:web:method:region_bring_in|region_bring_in]] | %%Brings in the region to the visible area.%% |
| [[:docs:efl:auto:class:elm:web:method:region_show|region_show]] | %%Shows the given region in the web object.%% |
| [[:docs:efl:auto:class:elm:web:method:reload_full|reload_full]] | %%Requests a reload of the current document, avoiding any existing caches.%% |
| [[:docs:efl:auto:class:elm:web:method:reload|reload]] | %%Requests a reload of the current document in the object.%% |
| [[:docs:efl:auto:class:elm:web:method:stop|stop]] | %%Stops loading the current page.%% |
| [[:docs:efl:auto:class:elm:web:method:text_matches_mark|text_matches_mark]] | %%Marks matches of the given string in a document.%% |
| [[:docs:efl:auto:class:elm:web:method:text_matches_unmark_all|text_matches_unmark_all]] | %%Clears all marked matches in the document.%% |
| [[:docs:efl:auto:class:elm:web:method:text_search|text_search]] | %%Searches the given string in a document.%% |

===== Properties =====

^ Property name ^ Brief description ^
| [[:docs:efl:auto:class:elm:web:property:back_possible|back_possible]] //**(get)**// | %%Queries whether it's possible to go back in history.%% |
| [[:docs:efl:auto:class:elm:web:property:bg_color|bg_color]] //**(get, set)**// | No description supplied. |
| [[:docs:efl:auto:class:elm:web:property:console_message_hook|console_message_hook]] //**(set)**// | %%Sets the function to call when a console message is emitted from JS.%% |
| [[:docs:efl:auto:class:elm:web:property:dialog_alert_hook|dialog_alert_hook]] //**(set)**// | %%Sets the function to call when an alert dialog.%% |
| [[:docs:efl:auto:class:elm:web:property:dialog_confirm_hook|dialog_confirm_hook]] //**(set)**// | %%Sets the function to call when an confirm dialog.%% |
| [[:docs:efl:auto:class:elm:web:property:dialog_file_selector_hook|dialog_file_selector_hook]] //**(set)**// | %%Sets the function to call when an file selector dialog.%% |
| [[:docs:efl:auto:class:elm:web:property:dialog_prompt_hook|dialog_prompt_hook]] //**(set)**// | %%Sets the function to call when an prompt dialog.%% |
| [[:docs:efl:auto:class:elm:web:property:forward_possible|forward_possible]] //**(get)**// | %%Queries whether it's possible to go forward in history.%% |
| [[:docs:efl:auto:class:elm:web:property:history_enabled|history_enabled]] //**(get, set)**// | No description supplied. |
| [[:docs:efl:auto:class:elm:web:property:inwin_mode|inwin_mode]] //**(get, set)**// | No description supplied. |
| [[:docs:efl:auto:class:elm:web:property:load_progress|load_progress]] //**(get)**// | %%Get the overall loading progress of the page.%% |
| [[:docs:efl:auto:class:elm:web:property:popup_selected|popup_selected]] //**(set)**// | %%Tells the web object which index in the currently open popup was selected.%% |
| [[:docs:efl:auto:class:elm:web:property:selection|selection]] //**(get)**// | %%Get a copy of the currently selected text.%% |
| [[:docs:efl:auto:class:elm:web:property:tab_propagate|tab_propagate]] //**(get, set)**// | No description supplied. |
| [[:docs:efl:auto:class:elm:web:property:text_matches_highlight|text_matches_highlight]] //**(get, set)**// | No description supplied. |
| [[:docs:efl:auto:class:elm:web:property:title|title]] //**(get)**// | %%Get the current title.%% |
| [[:docs:efl:auto:class:elm:web:property:url|url]] //**(get, set)**// | No description supplied. |
| [[:docs:efl:auto:class:elm:web:property:useragent|useragent]] //**(get, set)**// | No description supplied. |
| [[:docs:efl:auto:class:elm:web:property:webkit_view|webkit_view]] //**(get)**// | %%Get internal ewk_view object from web object.%% |
| [[:docs:efl:auto:class:elm:web:property:window_create_hook|window_create_hook]] //**(set)**// | %%Sets the function to call when a new window is requested.%% |
| [[:docs:efl:auto:class:elm:web:property:zoom_mode|zoom_mode]] //**(get, set)**// | No description supplied. |
| [[:docs:efl:auto:class:elm:web:property:zoom|zoom]] //**(get, set)**// | No description supplied. |

===== Overridden Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:class:elm:web:method:constructor|constructor]] //[from [[:docs:efl:auto:class:efl:object|Efl.Object]]]// | No description supplied. |

===== Events =====

^ Event name ^ Brief description ^
| [[:docs:efl:auto:class:elm:web:event:uri_changed|uri,changed]] | %%Called when URI changed%% |
| [[:docs:efl:auto:class:elm:web:event:url_changed|url,changed]] | %%Called when URL changed%% |
| [[:docs:efl:auto:class:elm:web:event:windows_close_request|windows,close,request]] | %%Called when window closed event was received%% |
