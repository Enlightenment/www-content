<title>Elm.Multibuttonentry</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    elm_multibuttonentry [fillcolor = "black", label = "Elm.Multibuttonentry", color = "gray15", fontcolor = "white", style = "filled"]
    elm_layout [fillcolor = "gray15", label = "Elm.Layout", color = "gray15", fontcolor = "white", style = "filled"]
    elm_widget [fillcolor = "gray15", label = "Elm.Widget", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_group [fillcolor = "gray15", label = "Efl.Canvas.Group", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_object [fillcolor = "gray15", label = "Efl.Canvas.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_stack [fillcolor = "gray15", label = "Efl.Gfx.Stack", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_animator [fillcolor = "gray15", label = "Efl.Animator", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_interface [fillcolor = "gray15", label = "Efl.Input.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_hint [fillcolor = "gray15", label = "Efl.Gfx.Size.Hint", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_map [fillcolor = "gray15", label = "Efl.Gfx.Map", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    elm_interface_atspi_accessible [fillcolor = "gray15", label = "Elm.Interface.Atspi_Accessible", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    elm_interface_atspi_component [fillcolor = "gray15", label = "Elm.Interface.Atspi_Component", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_part [fillcolor = "gray15", label = "Efl.Part", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_container [fillcolor = "gray15", label = "Efl.Container", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_file [fillcolor = "gray15", label = "Efl.File", color = "cornflowerblue", fontcolor = "white", style = "filled"]

    elm_multibuttonentry -> elm_layout
    elm_layout -> elm_widget
    elm_widget -> efl_canvas_group
    efl_canvas_group -> efl_canvas_object
    efl_canvas_object -> efl_object
    efl_canvas_object -> efl_gfx
    efl_canvas_object -> efl_gfx_stack
    efl_canvas_object -> efl_animator
    efl_canvas_object -> efl_input_interface
    efl_canvas_object -> efl_gfx_size_hint
    efl_canvas_object -> efl_gfx_map
    efl_gfx_map -> efl_interface
    efl_gfx_map -> efl_object
    elm_widget -> elm_interface_atspi_accessible
    elm_interface_atspi_accessible -> efl_interface
    elm_interface_atspi_accessible -> efl_object
    elm_widget -> elm_interface_atspi_component
    elm_layout -> efl_part
    elm_layout -> efl_container
    efl_container -> efl_gfx
    elm_layout -> efl_file
}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:docs:efl:auto:class:elm:multibuttonentry|Elm.Multibuttonentry]] //(class)//**
    * [[:docs:efl:auto:class:elm:layout|Elm.Layout]] //(class)//
      * [[:docs:efl:auto:class:elm:widget|Elm.Widget]] //(class)//
        * [[:docs:efl:auto:class:efl:canvas:group|Efl.Canvas.Group]] //(class)//
          * [[:docs:efl:auto:class:efl:canvas:object|Efl.Canvas.Object]] //(class)//
            * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
            * [[:docs:efl:auto:interface:efl:gfx|Efl.Gfx]] //(interface)//
            * [[:docs:efl:auto:interface:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
            * [[:docs:efl:auto:interface:efl:animator|Efl.Animator]] //(interface)//
            * [[:docs:efl:auto:interface:efl:input:interface|Efl.Input.Interface]] //(interface)//
            * [[:docs:efl:auto:interface:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] //(interface)//
            * [[:docs:efl:auto:mixin:efl:gfx:map|Efl.Gfx.Map]] //(mixin)//
              * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
              * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
        * [[:docs:efl:auto:mixin:elm:interface:atspi_accessible|Elm.Interface.Atspi_Accessible]] //(mixin)//
          * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
          * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
        * [[:docs:efl:auto:mixin:elm:interface:atspi_component|Elm.Interface.Atspi_Component]] //(mixin)//
      * [[:docs:efl:auto:interface:efl:part|Efl.Part]] //(interface)//
      * [[:docs:efl:auto:interface:efl:container|Efl.Container]] //(interface)//
        * [[:docs:efl:auto:interface:efl:gfx|Efl.Gfx]] //(interface)//
      * [[:docs:efl:auto:interface:efl:file|Efl.File]] //(interface)//

===== Description =====

%%Elementary multibuttonentry class%%

{{page>:docs:efl:user:class:elm:multibuttonentry:description&nodate&nolink&nouser}}

===== Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:class:elm:multibuttonentry:method:clear|clear]] | %%Remove all items in the multibuttonentry.%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:method:item_append|item_append]] | %%Append a new item to the multibuttonentry%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:method:item_filter_append|item_filter_append]] | %%Append an item filter function for text inserted in the Multibuttonentry%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:method:item_filter_prepend|item_filter_prepend]] | %%Prepend a filter function for text inserted in the Multibuttonentry%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:method:item_filter_remove|item_filter_remove]] | %%Remove a filter from the list%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:method:item_insert_after|item_insert_after]] | %%Add a new item to the multibuttonentry after the indicated object%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:method:item_insert_before|item_insert_before]] | %%Add a new item to the multibuttonentry before the indicated object reference.%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:method:item_prepend|item_prepend]] | %%Prepend a new item to the multibuttonentry%% |

===== Properties =====

^ Property name ^ Brief description ^
| [[:docs:efl:auto:class:elm:multibuttonentry:property:editable|editable]] //(get, set)// | %%Control if the multibuttonentry is to be editable or not.%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:property:entry|entry]] //(get)// | %%Get the entry of the multibuttonentry object%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:property:expanded|expanded]] //(get, set)// | %%Control the multibuttonentry to expanded state.%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:property:first_item|first_item]] //(get)// | %%Get the first item in the multibuttonentry%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:property:format_function|format_function]] //(set)// | %%Set a function to format the string that will be used to display the hidden items counter.%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:property:items|items]] //(get)// | %%Get a list of items in the multibuttonentry%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:property:last_item|last_item]] //(get)// | %%Get the last item in the multibuttonentry%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:property:selected_item|selected_item]] //(get)// | %%Get the selected item in the multibuttonentry%% |

===== Events =====

^ Event name ^ Brief description ^
| [[:docs:efl:auto:class:elm:multibuttonentry:event:contracted|contracted]] | %%Called when contracted%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:event:expand_state_changed|expand,state,changed]] | %%Called when expanded state changed%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:event:expanded|expanded]] | %%Called when expanded%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:event:item_added|item,added]] | %%Called when item was added%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:event:item_clicked|item,clicked]] | %%Called when item was clicked%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:event:item_deleted|item,deleted]] | %%Called when item was deleted%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:event:item_longpressed|item,longpressed]] | %%Called when item got a longpress%% |
| [[:docs:efl:auto:class:elm:multibuttonentry:event:item_selected|item,selected]] | %%Called when item was selected%% |
