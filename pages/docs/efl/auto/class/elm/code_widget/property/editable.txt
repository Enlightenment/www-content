<title>Elm.Code_Widget.editable</title>
===== Signature =====

<code>
@property Elm.Code_Widget.editable {
    get {
        values {
            editable: bool;
        }
    }
    set {
        values {
            editable: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool elm_obj_code_widget_editable_get(const Eo *obj);
void elm_obj_code_widget_editable_set(Eo *obj, Eina_Bool editable);
</code>

===== Values =====

  * **editable** - %%The editable state of the widget%%
===== Description =====



{{page>:docs:efl:user:class:elm:code_widget:property:editable:description&nodate&nolink&nouser}}

==== Getter ====

%%Get the current editable state of this widget%%

%%returns EINA_TRUE if the widget is editable, EINA_FALSE otherwise. If this widget is not editable the underlying Elm_Code_File could still be manipulated by a different widget or the filesystem.%%

{{page>:docs:efl:user:class:elm:code_widget:property:editable:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Set whether this widget allows editing%%

%%If editable then the widget will allow user input to manipulate the underlying Elm_Code_File of this Elm_Code instance. Any other Elm_Code_Widget's connected to this Elm_Code will update to reflect the changes.%%{{page>:docs:efl:user:class:elm:code_widget:property:editable:getter_description&nodate&nolink&nouser}}


