<title>Elm.Entry.editable</title>
===== Signature =====

<code>
@property Elm.Entry.editable {
    get {
        values {
            editable: bool;
        }
    }
    set {
        values {
            editable: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool elm_obj_entry_editable_get(const Eo *obj);
void elm_obj_entry_editable_set(Eo *obj, Eina_Bool editable);
</code>

===== Values =====

  * **editable** - %%If %%''true''%%, user input will be inserted in the entry, if not, the entry is read-only and no user input is allowed.%%
===== Description =====



{{page>:docs:efl:user:class:elm:entry:property:editable:description&nodate&nolink&nouser}}

==== Getter ====

%%Get whether the entry is editable or not.%%

{{page>:docs:efl:user:class:elm:entry:property:editable:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Sets if the entry is to be editable or not.%%

%%By default, entries are editable and when focused, any text input by the user will be inserted at the current cursor position. But calling this function with %%''editable''%% as %%''false''%% will prevent the user from inputting text into the entry.%%

%%The only way to change the text of a non-editable entry is to use @ref elm_object_text_set, @ref elm_entry_entry_insert and other related functions.%%{{page>:docs:efl:user:class:elm:entry:property:editable:getter_description&nodate&nolink&nouser}}


