<title>Elm.Mapbuf.point_color_set</title>
===== Signature =====

<code>
point_color_set {
    params {
        @in idx: int;
        @in r: int;
        @in g: int;
        @in b: int;
        @in a: int;
    }
}
</code>

===== C signature =====

<code c>
void elm_private_mapbuf_point_color_set(Eo *obj, int idx, int r, int g, int b, int a);
</code>

===== Parameters =====

  * **idx** //(in)// - %%Index of point to change. Must be smaller than mapbuf size.%%
  * **r** //(in)// - %%Red (0 - 255)%%
  * **g** //(in)// - %%Green (0 - 255)%%
  * **b** //(in)// - %%Blue (0 - 255)%%
  * **a** //(in)// - %%Alpha (0 - 255)%%

===== Description =====

%%Set the color of a vertex in the mapbuf%%

%%This sets the color of the vertex in the mapbuf. Colors will be linearly interpolated between vertex points through the mapbuf. Color will multiply the "texture" pixels (like GL_MODULATE in OpenGL). The default color of a vertex in a mapbuf is white solid (255, 255, 255, 255) which means it will have no affect on modifying the texture pixels.%%

//Since 1.9//
{{page>:docs:efl:user:class:elm:mapbuf:method:point_color_set:description&nodate&nolink&nouser}}

===== Implemented by =====

  * **Elm.Mapbuf.point_color_set**

