<title>Elm.Prefs</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    elm_prefs [fillcolor = "black", label = "Elm.Prefs", color = "gray15", fontcolor = "white", style = "filled"]
    elm_widget [fillcolor = "gray15", label = "Elm.Widget", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_group [fillcolor = "gray15", label = "Efl.Canvas.Group", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_object [fillcolor = "gray15", label = "Efl.Canvas.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_stack [fillcolor = "gray15", label = "Efl.Gfx.Stack", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_animator [fillcolor = "gray15", label = "Efl.Animator", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_interface [fillcolor = "gray15", label = "Efl.Input.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_hint [fillcolor = "gray15", label = "Efl.Gfx.Size.Hint", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_map [fillcolor = "gray15", label = "Efl.Gfx.Map", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    elm_interface_atspi_accessible [fillcolor = "gray15", label = "Elm.Interface.Atspi_Accessible", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    elm_interface_atspi_component [fillcolor = "gray15", label = "Elm.Interface.Atspi_Component", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_file [fillcolor = "gray15", label = "Efl.File", color = "cornflowerblue", fontcolor = "white", style = "filled"]

    elm_prefs -> elm_widget
    elm_widget -> efl_canvas_group
    efl_canvas_group -> efl_canvas_object
    efl_canvas_object -> efl_object
    efl_canvas_object -> efl_gfx
    efl_canvas_object -> efl_gfx_stack
    efl_canvas_object -> efl_animator
    efl_canvas_object -> efl_input_interface
    efl_canvas_object -> efl_gfx_size_hint
    efl_canvas_object -> efl_gfx_map
    efl_gfx_map -> efl_interface
    efl_gfx_map -> efl_object
    elm_widget -> elm_interface_atspi_accessible
    elm_interface_atspi_accessible -> efl_interface
    elm_interface_atspi_accessible -> efl_object
    elm_widget -> elm_interface_atspi_component
    elm_prefs -> efl_file
}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:docs:efl:auto:class:elm:prefs|Elm.Prefs]] //(class)//**
    * [[:docs:efl:auto:class:elm:widget|Elm.Widget]] //(class)//
      * [[:docs:efl:auto:class:efl:canvas:group|Efl.Canvas.Group]] //(class)//
        * [[:docs:efl:auto:class:efl:canvas:object|Efl.Canvas.Object]] //(class)//
          * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
          * [[:docs:efl:auto:interface:efl:gfx|Efl.Gfx]] //(interface)//
          * [[:docs:efl:auto:interface:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
          * [[:docs:efl:auto:interface:efl:animator|Efl.Animator]] //(interface)//
          * [[:docs:efl:auto:interface:efl:input:interface|Efl.Input.Interface]] //(interface)//
          * [[:docs:efl:auto:interface:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] //(interface)//
          * [[:docs:efl:auto:mixin:efl:gfx:map|Efl.Gfx.Map]] //(mixin)//
            * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
            * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
      * [[:docs:efl:auto:mixin:elm:interface:atspi_accessible|Elm.Interface.Atspi_Accessible]] //(mixin)//
        * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
        * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
      * [[:docs:efl:auto:mixin:elm:interface:atspi_component|Elm.Interface.Atspi_Component]] //(mixin)//
    * [[:docs:efl:auto:interface:efl:file|Efl.File]] //(interface)//

===== Description =====

%%Elementary preferences class%%

{{page>:docs:efl:user:class:elm:prefs:description&nodate&nolink&nouser}}

===== Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:class:elm:prefs:method:item_disabled_get|item_disabled_get]] | %%Get whether the widget bound to a given prefs widget's item is disabled or not.%% |
| [[:docs:efl:auto:class:elm:prefs:method:item_disabled_set|item_disabled_set]] | %%Set whether the widget bound to a given prefs widget's item is disabled or not.%% |
| [[:docs:efl:auto:class:elm:prefs:method:item_editable_get|item_editable_get]] | %%Get whether the widget bound to a given prefs widget's item is editable or not.%% |
| [[:docs:efl:auto:class:elm:prefs:method:item_editable_set|item_editable_set]] | %%Set whether the widget bound to a given prefs widget's item is editable or not.%% |
| [[:docs:efl:auto:class:elm:prefs:method:item_object_get|item_object_get]] | %%Get the Elementary widget bound to a given prefs widget's item.%% |
| [[:docs:efl:auto:class:elm:prefs:method:item_swallow|item_swallow]] | %%"Swallows" an object into a SWALLOW item of a prefs widget.%% |
| [[:docs:efl:auto:class:elm:prefs:method:item_unswallow|item_unswallow]] | %%Unswallow an object from a SWALLOW item of a prefs widget.%% |
| [[:docs:efl:auto:class:elm:prefs:method:item_value_get|item_value_get]] | %%Get the value of a given prefs widget's item.%% |
| [[:docs:efl:auto:class:elm:prefs:method:item_value_set|item_value_set]] | %%Set the value on a given prefs widget's item.%% |
| [[:docs:efl:auto:class:elm:prefs:method:item_visible_get|item_visible_get]] | %%Get whether the widget bound to a given prefs widget's item is visible or not.%% |
| [[:docs:efl:auto:class:elm:prefs:method:item_visible_set|item_visible_set]] | %%Set whether the widget bound to given prefs widget's item should be visible or not.%% |
| [[:docs:efl:auto:class:elm:prefs:method:reset|reset]] | %%Reset the values of a given prefs widget to a previous state.%% |

===== Properties =====

^ Property name ^ Brief description ^
| [[:docs:efl:auto:class:elm:prefs:property:autosave|autosave]] //(get, set)// | %%Control whether a given prefs widget should save its values back (on the user data file, if set) automatically on every UI element changes.%% |
| [[:docs:efl:auto:class:elm:prefs:property:data|data]] //(get, set)// | %%Set user data for a given prefs widget%% |

===== Events =====

^ Event name ^ Brief description ^
| [[:docs:efl:auto:class:elm:prefs:event:action|action]] | %%Called when action was done%% |
| [[:docs:efl:auto:class:elm:prefs:event:item_changed|item,changed]] | %%Called when item changed%% |
| [[:docs:efl:auto:class:elm:prefs:event:page_changed|page,changed]] | %%Called when page changed%% |
| [[:docs:efl:auto:class:elm:prefs:event:page_loaded|page,loaded]] | %%Called when page got loaded%% |
| [[:docs:efl:auto:class:elm:prefs:event:page_reset|page,reset]] | %%Called when page was reset%% |
| [[:docs:efl:auto:class:elm:prefs:event:page_saved|page,saved]] | %%Called when page was saved%% |
