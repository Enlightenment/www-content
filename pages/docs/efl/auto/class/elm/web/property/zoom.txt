<title>Elm.Web.zoom</title>
===== Signature =====

<code>
@property Elm.Web.zoom @virtual_pure {
    get {
        values {
            zoom: double;
        }
    }
    set {
        values {
            zoom: double;
        }
    }
}
</code>

===== C signature =====

<code c>
double elm_obj_web_zoom_get(const Eo *obj);
void elm_obj_web_zoom_set(Eo *obj, double zoom);
</code>

===== Values =====

  * **zoom** - %%The zoom level to set.%%
===== Description =====



{{page>:docs:efl:user:class:elm:web:property:zoom:description&nodate&nolink&nouser}}

==== Getter ====

%%Get the current zoom level set on the web object%%

%%Note that this is the zoom level set on the web object and not that of the underlying Webkit one. In the .ELM_WEB_ZOOM_MODE_MANUAL mode, the two zoom levels should match, but for the other two modes the Webkit zoom is calculated internally to match the chosen mode without changing the zoom level set for the web object.%%

{{page>:docs:efl:user:class:elm:web:property:zoom:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Sets the zoom level of the web object.%%

%%Zoom level matches the Webkit API, so 1.0 means normal zoom, with higher values meaning zoom in and lower meaning zoom out. This function will only affect the zoom level if the mode set with %%[[:docs:efl:auto:class:elm:web:property:zoom_mode|Elm.Web.zoom_mode.set]]%% is .ELM_WEB_ZOOM_MODE_MANUAL.%%{{page>:docs:efl:user:class:elm:web:property:zoom:getter_description&nodate&nolink&nouser}}


