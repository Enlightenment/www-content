<title>Elm.Toolbar.Item.state</title>
===== Signature =====

<code>
@property Elm.Toolbar.Item.state {
    get {
        values {
            state: ptr(Elm.Toolbar.Item.State) @nullable;
        }
    }
    set {
        values {
            state: ptr(Elm.Toolbar.Item.State) @nullable;
        }
        return: bool;
    }
}
</code>

===== C signature =====

<code c>
Elm_Toolbar_Item_State *elm_obj_toolbar_item_state_get(const Eo *obj);
Eina_Bool elm_obj_toolbar_item_state_set(Eo *obj, Elm_Toolbar_Item_State *state);
</code>

===== Values =====

  * **state** - %%Item state%%
===== Description =====



{{page>:docs:efl:user:class:elm:toolbar:item:property:state:description&nodate&nolink&nouser}}

==== Getter ====

%%Get the current state of %%''it''%%.%%

{{page>:docs:efl:user:class:elm:toolbar:item:property:state:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Set %%''state''%% as the current state of %%''it''%%.%%

%%If %%''state''%% is %%''NULL''%%, it won't select any state and the default item's icon and label will be used. It's the behavior as @ref elm_toolbar_item_state_unset.%%{{page>:docs:efl:user:class:elm:toolbar:item:property:state:getter_description&nodate&nolink&nouser}}


