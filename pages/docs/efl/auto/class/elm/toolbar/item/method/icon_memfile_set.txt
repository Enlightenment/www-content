<title>Elm.Toolbar.Item.icon_memfile_set</title>
===== Signature =====

<code>
icon_memfile_set {
    params {
        @in img: const(void_ptr);
        @in size: size;
        @in format: string;
        @in key: string;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool elm_obj_toolbar_item_icon_memfile_set(Eo *obj, const void *img, size_t size, const char *format, const char *key);
</code>

===== Parameters =====

  * **img** //(in)// - %%The binary data that will be used as an image.%%
  * **size** //(in)// - %%The size of binary data %%''img''%%.%%
  * **format** //(in)// - %%Optional format of %%''img''%% to pass to the image loader.%%
  * **key** //(in)// - %%Optional key of %%''img''%% to pass to the image loader (eg. if %%''img''%% is an edje file).%%

===== Description =====

%%Set the icon associated with %%''item''%% to an image in a binary buffer.%%

%%The icon image set by this function can be changed by %%[[:docs:efl:auto:class:elm:toolbar:item:property:icon|Elm.Toolbar.Item.icon.set]]%%.%%
</note>
{{page>:docs:efl:user:class:elm:toolbar:item:method:icon_memfile_set:description&nodate&nolink&nouser}}

===== Implemented by =====

  * **Elm.Toolbar.Item.icon_memfile_set**

