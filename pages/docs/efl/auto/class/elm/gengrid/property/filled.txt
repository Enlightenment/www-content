<title>Elm.Gengrid.filled</title>
===== Signature =====

<code>
@property filled {
    get {
        values {
            fill: bool;
        }
    }
    set {
        values {
            fill: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool elm_obj_gengrid_filled_get(const Eo *obj);
void elm_obj_gengrid_filled_set(Eo *obj, Eina_Bool fill);
</code>

===== Values =====

  * **fill** - %%%%''true''%% if the grid is filled, %%''false''%% otherwise%%
===== Description =====



{{page>:docs:efl:user:class:elm:gengrid:property:filled:description&nodate&nolink&nouser}}

==== Getter ====

%%Get how the items grid's filled within a given gengrid widget%%

%%Use %%''null''%% pointers on the alignment values you're not interested in: they'll be ignored by the function.%%
</note>

{{page>:docs:efl:user:class:elm:gengrid:property:filled:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Set how the items grid's filled within a given gengrid widget%%

%%This sets the fill state of the whole grid of items of a gengrid within its given viewport. By default, this value is false, meaning that if the first line of items grid's isn't filled, the items are centered with the alignment.%%{{page>:docs:efl:user:class:elm:gengrid:property:filled:getter_description&nodate&nolink&nouser}}


===== Implemented by =====

  * **Elm.Gengrid.filled**

