<title>Elm.Gengrid.group_item_size</title>
===== Signature =====

<code>
@property Elm.Gengrid.group_item_size {
    get {
        values {
            w: Evas.Coord;
            h: Evas.Coord;
        }
    }
    set {
        values {
            w: Evas.Coord;
            h: Evas.Coord;
        }
    }
}
</code>

===== C signature =====

<code c>
void elm_obj_gengrid_group_item_size_get(const Eo *obj, Evas_Coord *w, Evas_Coord *h);
void elm_obj_gengrid_group_item_size_set(Eo *obj, Evas_Coord w, Evas_Coord h);
</code>

===== Values =====

  * **w** - %%The group items' width.%%
  * **h** - %%The group items' height.%%
===== Description =====



{{page>:docs:efl:user:class:elm:gengrid:property:group_item_size:description&nodate&nolink&nouser}}

==== Getter ====

%%Get the size set for the group items of a given gengrid widget.%%

<note>
%%Use %%''null''%% pointers on the size values you're not interested in: they'll be ignored by the function.%%
</note>

{{page>:docs:efl:user:class:elm:gengrid:property:group_item_size:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Set the size for the group items of a given gengrid widget.%%

%%A gengrid, after creation, has still no information on the size to give to each of its cells. So, you most probably will end up with squares one @ref Fingers "finger" wide, the default size. Use this function to force a custom size for you group items, making them as big as you wish.%%{{page>:docs:efl:user:class:elm:gengrid:property:group_item_size:getter_description&nodate&nolink&nouser}}


