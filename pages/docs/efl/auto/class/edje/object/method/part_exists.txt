<title>Edje.Object.part_exists</title>
===== Signature =====

<code>
part_exists @const {
    params {
        @in part: string;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool edje_obj_part_exists(const Eo *obj, const char *part);
</code>

===== Parameters =====

  * **part** //(in)// - %%The part's name to check for existence in obj's group%%

===== Description =====

%%Checks if a part exists in a given Edje object's group definition.%%

%%This function returns if a given part exists in the Edje group bound to this object (with %%[[:docs:efl:auto:interface:efl:file:property:file|Efl.File.file.set]]%%()).%%

%%This call is useful, for example, when one could expect or not a given GUI element, depending on the theme applied to the object.%%

%%%%[[:docs:efl:auto:interface:efl:part:method:part|Efl.Part.part]]%%() called on an Edje object will return %%''null''%% if it doesn't contain the given part.%%
</note>
{{page>:docs:efl:user:class:edje:object:method:part_exists:description&nodate&nolink&nouser}}

===== Implemented by =====

  * **Edje.Object.part_exists**

