<title>Efl.Input.Pointer.previous_position</title>
===== Signature =====

<code>
@property Efl.Input.Pointer.previous_position {
    get {
        values {
            x: int;
            y: int;
        }
    }
    set {
        values {
            x: int;
            y: int;
        }
    }
}
</code>

===== C signature =====

<code c>
void efl_input_pointer_previous_position_get(const Eo *obj, int *x, int *y);
void efl_input_pointer_previous_position_set(Eo *obj, int x, int y);
</code>

===== Values =====

  * **x** - %%X coordinate of the previous event%%
  * **y** - %%Y coordinate of the previous event%%
===== Description =====

%%Position of the previous event, valid for move events.%%

%%Relative to the window. May be equal to %%[[:docs:efl:auto:class:efl:input:pointer:property:position|Efl.Input.Pointer.position]]%% (by default).%%

%%This position, in integers, is an approximation of %%[[:docs:efl:auto:class:efl:input:pointer:property:value|Efl.Input.Pointer.value.get]]%%(%%''previous_x''%%), %%[[:docs:efl:auto:class:efl:input:pointer:property:value|Efl.Input.Pointer.value.get]]%%(%%''previous_y''%%). Use %%[[:docs:efl:auto:class:efl:input:pointer:property:previous_position|Efl.Input.Pointer.previous_position]]%% if you need simple pixel positions, but prefer the generic interface if you need precise coordinates.%%

//Since 1.18//{{page>:docs:efl:user:class:efl:input:pointer:property:previous_position:description&nodate&nolink&nouser}}


