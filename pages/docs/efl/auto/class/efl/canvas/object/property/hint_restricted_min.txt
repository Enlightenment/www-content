<title>Efl.Canvas.Object.hint_restricted_min</title>
//Overridden from [[:docs:efl:auto:interface:efl:gfx:size:hint:property:hint_restricted_min|Efl.Gfx.Size.Hint.hint_restricted_min]] **(get, set)**.//===== Signature =====

<code>
@property hint_restricted_min @pure_virtual {
    get {
        values {
            w: int;
            h: int;
        }
    }
    set @protected {
        values {
            w: int;
            h: int;
        }
    }
}
</code>

===== C signature =====

<code c>
void efl_gfx_size_hint_restricted_min_get(const Eo *obj, int *w, int *h);
void efl_gfx_size_hint_restricted_min_set(Eo *obj, int w, int h);
</code>

===== Values =====

  * **w** - %%Integer to use as the minimum width hint.%%
  * **h** - %%Integer to use as the minimum height hint.%%
===== Description =====

%%Internal hints for an object's minimum size.%%

%%This is not a size enforcement in any way, it's just a hint that should be used whenever appropriate.%%

%%Values 0 will be treated as unset hint components, when queried by managers.%%

%%This property is internal and meant for widget developers to define the absolute minimum size of the object. EFL itself sets this size internally, so any change to it from an application might be ignored. Use %%[[:docs:efl:auto:interface:efl:gfx:size:hint:property:hint_min|Efl.Gfx.Size.Hint.hint_min]]%% instead.%%
</note>{{page>:docs:efl:user:class:efl:canvas:object:property:hint_restricted_min:description&nodate&nolink&nouser}}


===== Implemented by =====

  * [[:docs:efl:auto:interface:efl:gfx:size:hint:property:hint_restricted_min|Efl.Gfx.Size.Hint.hint_restricted_min]]
  * **Efl.Canvas.Object.hint_restricted_min**

