<title>Efl.Canvas.Object.freeze_events</title>
===== Signature =====

<code>
@property Efl.Canvas.Object.freeze_events {
    get {
        values {
            freeze: bool;
        }
    }
    set {
        values {
            freeze: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_canvas_object_freeze_events_get(const Eo *obj);
void efl_canvas_object_freeze_events_set(Eo *obj, Eina_Bool freeze);
</code>

===== Values =====

  * **freeze** - %%Pass when %%''obj''%% is to freeze events (%%''true''%%) or not (%%''false''%%).%%
===== Description =====



{{page>:docs:efl:user:class:efl:canvas:object:property:freeze_events:description&nodate&nolink&nouser}}

==== Getter ====

%%Determine whether an object is set to freeze (discard) events.%%

//Since 1.1//

{{page>:docs:efl:user:class:efl:canvas:object:property:freeze_events:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Set whether an Evas object is to freeze (discard) events.%%

%%If %%''freeze''%% is %%''true''%%, it will make events on %%''obj''%% to be discarded. Unlike %%[[:docs:efl:auto:class:efl:canvas:object:property:pass_events|Efl.Canvas.Object.pass_events.set]]%%, events will not be passed to next lower object. This API can be used for blocking events while %%''obj''%% is on transiting.%%

%%If %%''freeze''%% is %%''false''%%, events will be processed on that object as normal.%%

<note warning>
%%If you block only key/mouse up events with this API, we won't guarantee the state of the object, that only had key/mouse down events, will be.%%
</note>

//Since 1.1//{{page>:docs:efl:user:class:efl:canvas:object:property:freeze_events:getter_description&nodate&nolink&nouser}}


