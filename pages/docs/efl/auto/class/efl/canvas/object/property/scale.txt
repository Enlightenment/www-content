<title>Efl.Canvas.Object.scale</title>
===== Signature =====

<code>
@property scale {
    get {
        values {
            scale: double;
        }
    }
    set {
        values {
            scale: double;
        }
    }
}
</code>

===== C signature =====

<code c>
double efl_canvas_object_scale_get(const Eo *obj);
void efl_canvas_object_scale_set(Eo *obj, double scale);
</code>

===== Values =====

  * **scale** - %%The scaling factor. 1.0 means no scaling, default size.%%
===== Description =====



{{page>:docs:efl:user:class:efl:canvas:object:property:scale:description&nodate&nolink&nouser}}

==== Getter ====

%%Retrieves the scaling factor for the given Evas object.%%

{{page>:docs:efl:user:class:efl:canvas:object:property:scale:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Sets the scaling factor for an Evas object. Does not affect all objects.%%

%%This will multiply the object's dimension by the given factor, thus altering its geometry (width and height). Useful when you want scalable UI elements, possibly at run time.%%

%%Only text and textblock objects have scaling change handlers. Other objects won't change visually on this call.%%
</note>{{page>:docs:efl:user:class:efl:canvas:object:property:scale:getter_description&nodate&nolink&nouser}}


===== Implemented by =====

  * **Efl.Canvas.Object.scale**

