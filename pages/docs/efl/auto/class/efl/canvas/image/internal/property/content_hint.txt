<title>Efl.Canvas.Image.Internal.content_hint</title>
//Overridden from [[:docs:efl:auto:interface:efl:image:property:content_hint|Efl.Image.content_hint]].//===== Signature =====

<code>
@property content_hint @pure_virtual {
    get {
        values {
            hint: Efl.Image.Content_Hint;
        }
    }
    set {
        values {
            hint: Efl.Image.Content_Hint;
        }
    }
}
</code>

===== C signature =====

<code c>
Efl_Image_Content_Hint efl_image_content_hint_get(const Eo *obj);
void efl_image_content_hint_set(Eo *obj, Efl_Image_Content_Hint hint);
</code>

===== Values =====

  * **hint** - %%Dynamic or static content hint, see %%[[:docs:efl:auto:enum:efl:image:content_hint|Efl.Image.Content_Hint]]%%%%
===== Description =====



{{page>:docs:efl:user:class:efl:canvas:image:internal:property:content_hint:description&nodate&nolink&nouser}}

==== Getter ====

%%Get the content hint setting of a given image object of the canvas.%%

%%This returns #EVAS_IMAGE_CONTENT_HINT_NONE on error.%%

{{page>:docs:efl:user:class:efl:canvas:image:internal:property:content_hint:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Set the content hint setting of a given image object of the canvas.%%

%%This function sets the content hint value of the given image of the canvas. For example, if you're on the GL engine and your driver implementation supports it, setting this hint to #EVAS_IMAGE_CONTENT_HINT_DYNAMIC will make it need zero copies at texture upload time, which is an "expensive" operation.%%{{page>:docs:efl:user:class:efl:canvas:image:internal:property:content_hint:getter_description&nodate&nolink&nouser}}


===== Implemented by =====

  * [[:docs:efl:auto:interface:efl:image:property:content_hint|Efl.Image.content_hint]]
  * **Efl.Canvas.Image.Internal.content_hint**

