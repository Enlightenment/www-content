<title>Efl.Canvas.Image.Internal.alpha</title>
//Overridden from [[:docs:efl:auto:interface:efl:gfx:buffer:property:alpha|Efl.Gfx.Buffer.alpha]].//===== Signature =====

<code>
@property alpha @pure_virtual {
    get {
        values {
            alpha: bool;
        }
    }
    set {
        values {
            alpha: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_gfx_buffer_alpha_get(const Eo *obj);
void efl_gfx_buffer_alpha_set(Eo *obj, Eina_Bool alpha);
</code>

===== Values =====

  * **alpha** - %%Whether to use alpha channel (%%''true''%%) data or not (%%''false''%%).%%
===== Description =====

%%Indicates whether the alpha channel should be used.%%

%%This does not indicate whether the image source file contains an alpha channel, only whether to respect it or discard it.%%

{{page>:docs:efl:user:class:efl:canvas:image:internal:property:alpha:description&nodate&nolink&nouser}}

==== Getter ====

%%Retrieve whether alpha channel data is used on this object.%%

{{page>:docs:efl:user:class:efl:canvas:image:internal:property:alpha:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Change alpha channel usage for this object.%%

%%This function sets a flag on an image object indicating whether or not to use alpha channel data. A value of %%''true''%% makes it use alpha channel data, and %%''false''%% makes it ignore that data. Note that this has nothing to do with an object's color as manipulated by %%[[:docs:efl:auto:interface:efl:gfx:property:color|Efl.Gfx.color.set]]%%.%%{{page>:docs:efl:user:class:efl:canvas:image:internal:property:alpha:getter_description&nodate&nolink&nouser}}


===== Implemented by =====

  * [[:docs:efl:auto:interface:efl:gfx:buffer:property:alpha|Efl.Gfx.Buffer.alpha]]
  * **Efl.Canvas.Image.Internal.alpha**

