<title>Efl.Canvas.Text</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_canvas_text [fillcolor = "black", label = "Efl.Canvas.Text", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_object [fillcolor = "gray15", label = "Efl.Canvas.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_stack [fillcolor = "gray15", label = "Efl.Gfx.Stack", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_animator [fillcolor = "gray15", label = "Efl.Animator", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_interface [fillcolor = "gray15", label = "Efl.Input.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_hint [fillcolor = "gray15", label = "Efl.Gfx.Size.Hint", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_map [fillcolor = "gray15", label = "Efl.Gfx.Map", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_text [fillcolor = "gray15", label = "Efl.Text", color = "cornflowerblue", fontcolor = "white", style = "filled"]

    efl_canvas_text -> efl_canvas_object
    efl_canvas_object -> efl_object
    efl_canvas_object -> efl_gfx
    efl_canvas_object -> efl_gfx_stack
    efl_canvas_object -> efl_animator
    efl_canvas_object -> efl_input_interface
    efl_canvas_object -> efl_gfx_size_hint
    efl_canvas_object -> efl_gfx_map
    efl_gfx_map -> efl_interface
    efl_gfx_map -> efl_object
    efl_canvas_text -> efl_text
}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:docs:efl:auto:class:efl:canvas:text|Efl.Canvas.Text]] //(class)//**
    * [[:docs:efl:auto:class:efl:canvas:object|Efl.Canvas.Object]] //(class)//
      * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
      * [[:docs:efl:auto:interface:efl:gfx|Efl.Gfx]] //(interface)//
      * [[:docs:efl:auto:interface:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
      * [[:docs:efl:auto:interface:efl:animator|Efl.Animator]] //(interface)//
      * [[:docs:efl:auto:interface:efl:input:interface|Efl.Input.Interface]] //(interface)//
      * [[:docs:efl:auto:interface:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] //(interface)//
      * [[:docs:efl:auto:mixin:efl:gfx:map|Efl.Gfx.Map]] //(mixin)//
        * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
        * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
    * [[:docs:efl:auto:interface:efl:text|Efl.Text]] //(interface)//

===== Description =====

%%Efl canvas text class%%

{{page>:docs:efl:user:class:efl:canvas:text:description&nodate&nolink&nouser}}

===== Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:class:efl:canvas:text:method:annotation_del|annotation_del]] | %%Deletes given annotation.%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:annotation_insert|annotation_insert]] | %%Inserts an annotation format in a specified range [%%''start''%%, %%''end''%% - 1].%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:annotation_positions_get|annotation_positions_get]] | %%Sets given cursors to the start and end positions of the annotation.%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:object_item_geometry_get|object_item_geometry_get]] | %%Queries a given object item for its geometry.%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:obstacle_add|obstacle_add]] | %%Add obstacle evas object %%''eo_obs''%% to be observed during layout of text.%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:obstacle_del|obstacle_del]] | %%Removes %%''eo_obs''%% from observation during text layout.%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:obstacles_update|obstacles_update]] | %%Triggers for relayout due to obstacles' state change.%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:range_annotations_get|range_annotations_get]] | %%Returns an iterator of all the handles in a range.%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:range_delete|range_delete]] | %%Deletes the range between given cursors.%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:range_geometry_get|range_geometry_get]] | %%Get the geometry of a range in the text.%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:range_simple_geometry_get|range_simple_geometry_get]] | %%Get the "simple" geometry of a range.%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:range_text_get|range_text_get]] | %%Returns the text in the range between %%''cur1''%% and %%''cur2''%%.%% |
| [[:docs:efl:auto:class:efl:canvas:text:method:visible_range_get|visible_range_get]] | %%Returns the currently visible range.%% |

===== Properties =====

^ Property name ^ Brief description ^
| [[:docs:efl:auto:class:efl:canvas:text:property:annotation|annotation]] //(get, set)// | %%A new format for %%''annotation''%%.%% |
| [[:docs:efl:auto:class:efl:canvas:text:property:bidi_delimiters|bidi_delimiters]] //(get, set)// | %%BiDi delimiters are used for in-paragraph separation of bidi segments. This is useful for example in recipients fields of e-mail clients where bidi oddities can occur when mixing RTL and LTR.%% |
| [[:docs:efl:auto:class:efl:canvas:text:property:cursor|cursor]] //(get)// | %%The object's main cursor.%% |
| [[:docs:efl:auto:class:efl:canvas:text:property:is_empty|is_empty]] //(get)// | %%Whether the object is empty (no text) or not%% |
| [[:docs:efl:auto:class:efl:canvas:text:property:legacy_newline|legacy_newline]] //(get, set)// | %%When %%''true''%%, newline character will behave as a paragraph separator.%% |
| [[:docs:efl:auto:class:efl:canvas:text:property:size_formatted|size_formatted]] //(get)// | %%The formatted width and height.%% |
| [[:docs:efl:auto:class:efl:canvas:text:property:size_native|size_native]] //(get)// | %%The native width and height.%% |
| [[:docs:efl:auto:class:efl:canvas:text:property:style_insets|style_insets]] //(get)// | %%Gets the left, right, top and bottom insets of the text.%% |
| [[:docs:efl:auto:class:efl:canvas:text:property:style|style]] //(get, set)// | %%The text style of the object.%% |

===== Events =====

^ Event name ^ Brief description ^
| [[:docs:efl:auto:class:efl:canvas:text:event:changed|changed]] | %%Called when the content (text or annotations) changed.%% |
