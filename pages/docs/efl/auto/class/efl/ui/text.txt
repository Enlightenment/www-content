<title>Efl.Ui.Text</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_ui_text [fillcolor = "black", label = "Efl.Ui.Text", color = "gray15", fontcolor = "white", style = "filled"]
    elm_layout [fillcolor = "gray15", label = "Elm.Layout", color = "gray15", fontcolor = "white", style = "filled"]
    elm_widget [fillcolor = "gray15", label = "Elm.Widget", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_group [fillcolor = "gray15", label = "Efl.Canvas.Group", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_object [fillcolor = "gray15", label = "Efl.Canvas.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_stack [fillcolor = "gray15", label = "Efl.Gfx.Stack", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_animator [fillcolor = "gray15", label = "Efl.Animator", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_interface [fillcolor = "gray15", label = "Efl.Input.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_hint [fillcolor = "gray15", label = "Efl.Gfx.Size.Hint", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_map [fillcolor = "gray15", label = "Efl.Gfx.Map", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    elm_interface_atspi_accessible [fillcolor = "gray15", label = "Elm.Interface.Atspi_Accessible", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    elm_interface_atspi_component [fillcolor = "gray15", label = "Elm.Interface.Atspi_Component", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_part [fillcolor = "gray15", label = "Efl.Part", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_container [fillcolor = "gray15", label = "Efl.Container", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_file [fillcolor = "gray15", label = "Efl.File", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    elm_interface_scrollable [fillcolor = "gray15", label = "Elm.Interface_Scrollable", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_ui_scrollable [fillcolor = "gray15", label = "Efl.Ui.Scrollable", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_canvas_group [fillcolor = "gray15", label = "Efl.Canvas.Group", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_object [fillcolor = "gray15", label = "Efl.Canvas.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_stack [fillcolor = "gray15", label = "Efl.Gfx.Stack", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_animator [fillcolor = "gray15", label = "Efl.Animator", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_interface [fillcolor = "gray15", label = "Efl.Input.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_hint [fillcolor = "gray15", label = "Efl.Gfx.Size.Hint", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_map [fillcolor = "gray15", label = "Efl.Gfx.Map", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_ui_clickable [fillcolor = "gray15", label = "Efl.Ui.Clickable", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    elm_interface_atspi_text [fillcolor = "gray15", label = "Elm.Interface.Atspi.Text", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    elm_interface_atspi_text_editable [fillcolor = "gray15", label = "Elm.Interface.Atspi.Text.Editable", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_file [fillcolor = "gray15", label = "Efl.File", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_ui_selectable [fillcolor = "gray15", label = "Efl.Ui.Selectable", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_ui_scrollable [fillcolor = "gray15", label = "Efl.Ui.Scrollable", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_ui_text_interactive [fillcolor = "gray15", label = "Efl.Ui.Text.Interactive", color = "cornflowerblue", fontcolor = "white", style = "filled"]

    efl_ui_text -> elm_layout
    elm_layout -> elm_widget
    elm_widget -> efl_canvas_group
    efl_canvas_group -> efl_canvas_object
    efl_canvas_object -> efl_object
    efl_canvas_object -> efl_gfx
    efl_canvas_object -> efl_gfx_stack
    efl_canvas_object -> efl_animator
    efl_canvas_object -> efl_input_interface
    efl_canvas_object -> efl_gfx_size_hint
    efl_canvas_object -> efl_gfx_map
    efl_gfx_map -> efl_interface
    efl_gfx_map -> efl_object
    elm_widget -> elm_interface_atspi_accessible
    elm_interface_atspi_accessible -> efl_interface
    elm_interface_atspi_accessible -> efl_object
    elm_widget -> elm_interface_atspi_component
    elm_layout -> efl_part
    elm_layout -> efl_container
    efl_container -> efl_gfx
    elm_layout -> efl_file
    efl_ui_text -> elm_interface_scrollable
    elm_interface_scrollable -> efl_ui_scrollable
    elm_interface_scrollable -> efl_canvas_group
    efl_canvas_group -> efl_canvas_object
    efl_canvas_object -> efl_object
    efl_canvas_object -> efl_gfx
    efl_canvas_object -> efl_gfx_stack
    efl_canvas_object -> efl_animator
    efl_canvas_object -> efl_input_interface
    efl_canvas_object -> efl_gfx_size_hint
    efl_canvas_object -> efl_gfx_map
    efl_gfx_map -> efl_interface
    efl_gfx_map -> efl_object
    efl_ui_text -> efl_ui_clickable
    efl_ui_text -> elm_interface_atspi_text
    efl_ui_text -> elm_interface_atspi_text_editable
    efl_ui_text -> efl_file
    efl_ui_text -> efl_ui_selectable
    efl_ui_text -> efl_ui_scrollable
    efl_ui_text -> efl_ui_text_interactive
}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:docs:efl:auto:class:efl:ui:text|Efl.Ui.Text]] //(class)//**
    * [[:docs:efl:auto:class:elm:layout|Elm.Layout]] //(class)//
      * [[:docs:efl:auto:class:elm:widget|Elm.Widget]] //(class)//
        * [[:docs:efl:auto:class:efl:canvas:group|Efl.Canvas.Group]] //(class)//
          * [[:docs:efl:auto:class:efl:canvas:object|Efl.Canvas.Object]] //(class)//
            * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
            * [[:docs:efl:auto:interface:efl:gfx|Efl.Gfx]] //(interface)//
            * [[:docs:efl:auto:interface:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
            * [[:docs:efl:auto:interface:efl:animator|Efl.Animator]] //(interface)//
            * [[:docs:efl:auto:interface:efl:input:interface|Efl.Input.Interface]] //(interface)//
            * [[:docs:efl:auto:interface:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] //(interface)//
            * [[:docs:efl:auto:mixin:efl:gfx:map|Efl.Gfx.Map]] //(mixin)//
              * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
              * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
        * [[:docs:efl:auto:mixin:elm:interface:atspi_accessible|Elm.Interface.Atspi_Accessible]] //(mixin)//
          * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
          * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
        * [[:docs:efl:auto:mixin:elm:interface:atspi_component|Elm.Interface.Atspi_Component]] //(mixin)//
      * [[:docs:efl:auto:interface:efl:part|Efl.Part]] //(interface)//
      * [[:docs:efl:auto:interface:efl:container|Efl.Container]] //(interface)//
        * [[:docs:efl:auto:interface:efl:gfx|Efl.Gfx]] //(interface)//
      * [[:docs:efl:auto:interface:efl:file|Efl.File]] //(interface)//
    * [[:docs:efl:auto:mixin:elm:interface_scrollable|Elm.Interface_Scrollable]] //(mixin)//
      * [[:docs:efl:auto:interface:efl:ui:scrollable|Efl.Ui.Scrollable]] //(interface)//
      * [[:docs:efl:auto:class:efl:canvas:group|Efl.Canvas.Group]] //(class)//
        * [[:docs:efl:auto:class:efl:canvas:object|Efl.Canvas.Object]] //(class)//
          * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
          * [[:docs:efl:auto:interface:efl:gfx|Efl.Gfx]] //(interface)//
          * [[:docs:efl:auto:interface:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
          * [[:docs:efl:auto:interface:efl:animator|Efl.Animator]] //(interface)//
          * [[:docs:efl:auto:interface:efl:input:interface|Efl.Input.Interface]] //(interface)//
          * [[:docs:efl:auto:interface:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] //(interface)//
          * [[:docs:efl:auto:mixin:efl:gfx:map|Efl.Gfx.Map]] //(mixin)//
            * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
            * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
    * [[:docs:efl:auto:interface:efl:ui:clickable|Efl.Ui.Clickable]] //(interface)//
    * [[:docs:efl:auto:interface:elm:interface:atspi:text|Elm.Interface.Atspi.Text]] //(interface)//
    * [[:docs:efl:auto:interface:elm:interface:atspi:text:editable|Elm.Interface.Atspi.Text.Editable]] //(interface)//
    * [[:docs:efl:auto:interface:efl:file|Efl.File]] //(interface)//
    * [[:docs:efl:auto:interface:efl:ui:selectable|Efl.Ui.Selectable]] //(interface)//
    * [[:docs:efl:auto:interface:efl:ui:scrollable|Efl.Ui.Scrollable]] //(interface)//
    * [[:docs:efl:auto:interface:efl:ui:text:interactive|Efl.Ui.Text.Interactive]] //(interface)//

===== Description =====

%%Efl UI text class%%

{{page>:docs:efl:user:class:efl:ui:text:description&nodate&nolink&nouser}}

===== Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:class:efl:ui:text:method:context_menu_clear|context_menu_clear]] | %%This clears and frees the items in a entry's contextual (longpress) menu.%% |
| [[:docs:efl:auto:class:efl:ui:text:method:context_menu_item_add|context_menu_item_add]] | %%This adds an item to the entry's contextual menu.%% |
| [[:docs:efl:auto:class:efl:ui:text:method:cursor_new|cursor_new]] | %%Creates and returns a new cursor for the text.%% |
| [[:docs:efl:auto:class:efl:ui:text:method:cursor_selection_end|cursor_selection_end]] | %%This ends a selection within the entry as though the user had just released the mouse button while making a selection.%% |
| [[:docs:efl:auto:class:efl:ui:text:method:imf_context_reset|imf_context_reset]] | %%Reset the input method context of the entry if needed.%% |
| [[:docs:efl:auto:class:efl:ui:text:method:input_panel_hide|input_panel_hide]] | %%Hide the input panel (virtual keyboard).%% |
| [[:docs:efl:auto:class:efl:ui:text:method:input_panel_imdata_get|input_panel_imdata_get]] | %%Get the specific data of the current input panel.%% |
| [[:docs:efl:auto:class:efl:ui:text:method:input_panel_imdata_set|input_panel_imdata_set]] | %%Set the input panel-specific data to deliver to the input panel.%% |
| [[:docs:efl:auto:class:efl:ui:text:method:input_panel_show|input_panel_show]] | %%Show the input panel (virtual keyboard) based on the input panel property of entry such as layout, autocapital types, and so on.%% |
| [[:docs:efl:auto:class:efl:ui:text:method:item_provider_append|item_provider_append]] | %%This appends a custom item provider to the list for that entry%% |
| [[:docs:efl:auto:class:efl:ui:text:method:item_provider_prepend|item_provider_prepend]] | %%This prepends a custom item provider to the list for that entry%% |
| [[:docs:efl:auto:class:efl:ui:text:method:item_provider_remove|item_provider_remove]] | %%This removes a custom item provider to the list for that entry%% |
| [[:docs:efl:auto:class:efl:ui:text:method:selection_copy|selection_copy]] | %%This executes a "copy" action on the selected text in the entry.%% |
| [[:docs:efl:auto:class:efl:ui:text:method:selection_cut|selection_cut]] | %%This executes a "cut" action on the selected text in the entry.%% |
| [[:docs:efl:auto:class:efl:ui:text:method:selection_paste|selection_paste]] | %%This executes a "paste" action in the entry.%% |

===== Properties =====

^ Property name ^ Brief description ^
| [[:docs:efl:auto:class:efl:ui:text:property:autocapital_type|autocapital_type]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:cnp_mode|cnp_mode]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:context_menu_disabled|context_menu_disabled]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:imf_context|imf_context]] //(get)// | %%Returns the input method context of the entry.%% |
| [[:docs:efl:auto:class:efl:ui:text:property:input_hint|input_hint]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:input_panel_enabled|input_panel_enabled]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:input_panel_language|input_panel_language]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:input_panel_layout_variation|input_panel_layout_variation]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:input_panel_layout|input_panel_layout]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:input_panel_return_key_autoenabled|input_panel_return_key_autoenabled]] //(set)// | %%Set whether the return key on the input panel is disabled automatically when entry has no text.%% |
| [[:docs:efl:auto:class:efl:ui:text:property:input_panel_return_key_disabled|input_panel_return_key_disabled]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:input_panel_return_key_type|input_panel_return_key_type]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:input_panel_show_on_demand|input_panel_show_on_demand]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:password|password]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:prediction_allow|prediction_allow]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:scrollable|scrollable]] //(get, set)// | No description supplied. |
| [[:docs:efl:auto:class:efl:ui:text:property:selection_handler_disabled|selection_handler_disabled]] //(get, set)// | No description supplied. |

===== Events =====

^ Event name ^ Brief description ^
| [[:docs:efl:auto:class:efl:ui:text:event:aborted|aborted]] | %%Called when entry was aborted%% |
| [[:docs:efl:auto:class:efl:ui:text:event:activated|activated]] | %%Called when entry got activated%% |
| [[:docs:efl:auto:class:efl:ui:text:event:anchor_clicked|anchor,clicked]] | %%Called when anchor was clicked%% |
| [[:docs:efl:auto:class:efl:ui:text:event:anchor_down|anchor,down]] | %%Called on anchor down%% |
| [[:docs:efl:auto:class:efl:ui:text:event:anchor_hover_opened|anchor,hover,opened]] | %%Called when hover opened%% |
| [[:docs:efl:auto:class:efl:ui:text:event:anchor_in|anchor,in]] | %%Called on anchor in%% |
| [[:docs:efl:auto:class:efl:ui:text:event:anchor_out|anchor,out]] | %%Called on anchor out%% |
| [[:docs:efl:auto:class:efl:ui:text:event:anchor_up|anchor,up]] | %%called on anchor up%% |
| [[:docs:efl:auto:class:efl:ui:text:event:changed_user|changed,user]] | %%Called when object changed due to user interaction%% |
| [[:docs:efl:auto:class:efl:ui:text:event:changed|changed]] | %%Called when entry changed%% |
| [[:docs:efl:auto:class:efl:ui:text:event:context_open|context,open]] | %%Called when context menu was opened%% |
| [[:docs:efl:auto:class:efl:ui:text:event:cursor_changed_manual|cursor,changed,manual]] | %%Called on manual cursor change%% |
| [[:docs:efl:auto:class:efl:ui:text:event:cursor_changed|cursor,changed]] | %%Called on cursor changed%% |
| [[:docs:efl:auto:class:efl:ui:text:event:maxlength_reached|maxlength,reached]] | %%Called when maximum entry length has been reached%% |
| [[:docs:efl:auto:class:efl:ui:text:event:preedit_changed|preedit,changed]] | %%Called when entry preedit changed%% |
| [[:docs:efl:auto:class:efl:ui:text:event:press|press]] | %%Called when entry pressed%% |
| [[:docs:efl:auto:class:efl:ui:text:event:redo_request|redo,request]] | %%Called when redo was requested%% |
| [[:docs:efl:auto:class:efl:ui:text:event:rejected|rejected]] | %%Called when entry was rejected%% |
| [[:docs:efl:auto:class:efl:ui:text:event:text_set_done|text,set,done]] | %%Called when text set finished%% |
| [[:docs:efl:auto:class:efl:ui:text:event:undo_request|undo,request]] | %%Called when undo was requested%% |
| [[:docs:efl:auto:class:efl:ui:text:event:validate|validate]] | %%Called when validating%% |
