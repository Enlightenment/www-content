<title>Efl.Ui.Win.Internal.Part.file</title>
//Overridden from [[:docs:efl:auto:interface:efl:file:property:file|Efl.File.file]] **(get, set)**.//===== Signature =====

<code>
@property file @pure_virtual {
    get {
        values {
            file: string;
            key: string;
        }
    }
    set {
        values {
            file: string;
            key: string;
        }
        return: bool;
    }
}
</code>

===== C signature =====

<code c>
void efl_file_get(const Eo *obj, const char **file, const char **key);
Eina_Bool efl_file_set(Eo *obj, const char *file, const char *key);
</code>

===== Values =====

  * **file** - %%The image file path.%%
  * **key** - %%The image key in %%''file''%% (if its an Eet one), or %%''null''%%, otherwise.%%
===== Description =====



{{page>:docs:efl:user:class:efl:ui:win:internal:part:property:file:description&nodate&nolink&nouser}}

==== Getter ====

%%Retrieve the source file from where an image object is to fetch the real image data (it may be an Eet file, besides pure image ones).%%

%%You must not modify the strings on the returned pointers.%%

%%Use %%''null''%% pointers on the file components you're not interested in: they'll be ignored by the function.%%
</note>

{{page>:docs:efl:user:class:efl:ui:win:internal:part:property:file:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Set the source file from where an image object must fetch the real image data (it may be an Eet file, besides pure image ones).%%

%%If the file supports multiple data stored in it (as Eet files do), you can specify the key to be used as the index of the image in this file.%%{{page>:docs:efl:user:class:efl:ui:win:internal:part:property:file:getter_description&nodate&nolink&nouser}}


===== Implemented by =====

  * [[:docs:efl:auto:interface:efl:file:property:file|Efl.File.file]]
  * [[:docs:efl:auto:class:efl:ui:text:property:file|Efl.Ui.Text.file]]
  * [[:docs:efl:auto:class:efl:ui:video:property:file|Efl.Ui.Video.file]]
  * [[:docs:efl:auto:class:elm:layout:property:file|Elm.Layout.file]]
  * [[:docs:efl:auto:class:elm:entry:property:file|Elm.Entry.file]]
  * [[:docs:efl:auto:class:elm:bg:property:file|Elm.Bg.file]]
  * [[:docs:efl:auto:class:elm:thumb:property:file|Elm.Thumb.file]]
  * [[:docs:efl:auto:class:efl:io:file:property:file|Efl.Io.File.file]]
  * **Efl.Ui.Win.Internal.Part.file**
  * [[:docs:efl:auto:class:evas:canvas3d:mesh:property:file|Evas.Canvas3D.Mesh.file]]
  * [[:docs:efl:auto:class:efl:canvas:image:property:file|Efl.Canvas.Image.file]]
  * [[:docs:efl:auto:class:elm:photo:property:file|Elm.Photo.file]]
  * [[:docs:efl:auto:class:elm:photocam:property:file|Elm.Photocam.file]]
  * [[:docs:efl:auto:class:evas:image:property:file|Evas.Image.file]]
  * [[:docs:efl:auto:class:edje:object:property:file|Edje.Object.file]]
  * [[:docs:efl:auto:class:edje:edit:property:file|Edje.Edit.file]]
  * [[:docs:efl:auto:class:efl:ui:image:property:file|Efl.Ui.Image.file]]
  * [[:docs:efl:auto:class:elm:icon:property:file|Elm.Icon.file]]
  * [[:docs:efl:auto:class:efl:canvas:video:property:file|Efl.Canvas.Video.file]]
  * [[:docs:efl:auto:class:elm:prefs:property:file|Elm.Prefs.file]]

