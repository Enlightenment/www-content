<title>Efl.Ui.Win.icon_object</title>
===== Signature =====

<code>
@property icon_object {
    get {
        values {
            icon: const(Efl.Canvas.Object) @nullable;
        }
    }
    set {
        values {
            icon: Efl.Canvas.Object @nullable;
        }
    }
}
</code>

===== C signature =====

<code c>
const Efl_Canvas_Object *efl_ui_win_icon_object_get(const Eo *obj);
void efl_ui_win_icon_object_set(Eo *obj, Efl_Canvas_Object *icon);
</code>

===== Values =====

==== Getter ====

  * **icon** - %%The Evas image object to use for an icon.%%
==== Setter ====

  * **icon** - %%The Evas image object to use for an icon.%%
===== Description =====



{{page>:docs:efl:user:class:efl:ui:win:property:icon_object:description&nodate&nolink&nouser}}

==== Getter ====

%%Get the icon object used for the window.%%

%%The object returns is the one marked by %%[[:docs:efl:auto:class:efl:ui:win:property:icon_object|Efl.Ui.Win.icon_object.set]]%% as the object to use for the window icon.%%

{{page>:docs:efl:user:class:efl:ui:win:property:icon_object:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Set a window object's icon.%%

%%This sets an image to be used as the icon for the given window, in the window manager decoration part. The exact pixel dimensions of the object (not object size) will be used, and the image pixels will be used as-is when this function is called. If the image object has been updated, then call this function again to source the image pixels and put them on the window's icon. Note that only Evas image objects are allowed.%%{{page>:docs:efl:user:class:efl:ui:win:property:icon_object:getter_description&nodate&nolink&nouser}}


===== Implemented by =====

  * **Efl.Ui.Win.icon_object**

