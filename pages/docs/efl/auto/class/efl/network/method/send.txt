<title>Efl.Network.send</title>
===== Signature =====

<code>
Efl.Network.send @virtual_pure {
    params {
        @in data: const(void_ptr);
        @in size: int;
    }
    return: int;
}
</code>

===== C signature =====

<code c>
int efl_network_send(Eo *obj, const void *data, int size);
</code>

===== Parameters =====

  * **data** //(in)// - %%The given data%%
  * **size** //(in)// - %%Length of the data, in bytes.%%

===== Description =====

%%Sends the given data to the given server.%%

%%This function will send the given data to the server as soon as the program is back to the main loop. Thus, this function returns immediately (non-blocking). If the data needs to be sent now, call @ref ecore_con_server_flush after this one.%%
{{page>:docs:efl:user:class:efl:network:method:send:description&nodate&nolink&nouser}}

