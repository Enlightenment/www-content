<title>Efl.Network.timeout</title>
===== Signature =====

<code>
@property Efl.Network.timeout @virtual_pure {
    get {
        values {
            timeout: double;
        }
    }
    set {
        values {
            timeout: double;
        }
    }
}
</code>

===== C signature =====

<code c>
double efl_network_timeout_get(const Eo *obj);
void efl_network_timeout_set(Eo *obj, double timeout);
</code>

===== Values =====

  * **timeout** - %%The timeout, in seconds, to disconnect after.%%
===== Description =====

%%Control the default time after which an inactive client will be disconnected.%%

%%This function is used by the server to set the default idle timeout on clients. If any of the clients becomes idle for a time higher than this value, it will be disconnected. A value of < 1 disables the idle timeout.%%

%%This timeout is not affected by the one set by %%[[:docs:efl:auto:class:efl:network:property:timeout|Efl.Network.timeout.set]]%%. A client will be disconnected whenever the client or the server timeout is reached. That means, the lower timeout value  will be used for that client if %%[[:docs:efl:auto:class:efl:network:property:timeout|Efl.Network.timeout.set]]%% is used on it.%%{{page>:docs:efl:user:class:efl:network:property:timeout:description&nodate&nolink&nouser}}


