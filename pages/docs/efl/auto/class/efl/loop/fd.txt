<title>Efl.Loop.Fd</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_loop_fd [fillcolor = "black", label = "Efl.Loop.Fd", color = "gray15", fontcolor = "white", style = "filled"]
    efl_loop_user [fillcolor = "gray15", label = "Efl.Loop_User", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]

    efl_loop_fd -> efl_loop_user
    efl_loop_user -> efl_object
}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:docs:efl:auto:class:efl:loop:fd|Efl.Loop.Fd]] //(class)//**
    * [[:docs:efl:auto:class:efl:loop_user|Efl.Loop_User]] //(class)//
      * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//

===== Description =====

%%Fds are objects that what the activity on a given file descriptor. This file descriptor can be a network, a file, provided by a library.%%

%%The object will trigger relevant event depending on what is happening.%%

{{page>:docs:efl:user:class:efl:loop:fd:description&nodate&nolink&nouser}}

===== Properties =====

^ Property name ^ Brief description ^
| [[:docs:efl:auto:class:efl:loop:fd:property:fd_file|fd_file]] //(get, set)// | %%Define which file descriptor to watch when watching a file.%% |
| [[:docs:efl:auto:class:efl:loop:fd:property:fd|fd]] //(get, set)// | %%Define which file descriptor to watch. If it is a file, use file_fd variant.%% |

===== Events =====

^ Event name ^ Brief description ^
| [[:docs:efl:auto:class:efl:loop:fd:event:error|error]] | %%Called when a error occurred on the file descriptor%% |
| [[:docs:efl:auto:class:efl:loop:fd:event:read|read]] | %%Called when a read happened on the file descriptor%% |
| [[:docs:efl:auto:class:efl:loop:fd:event:write|write]] | %%Called when a write happened on the file descriptor%% |
