<title>Efl.Object.event_callback_array_del</title>
===== Signature =====

<code>
event_callback_array_del {
    params {
        @in array: ptr(const(Efl.Callback_Array_Item));
        @in user_data: const(void_ptr);
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_event_callback_array_del(Eo *obj, const Efl_Callback_Array_Item *array, const void *user_data);
</code>

===== Parameters =====

  * **array** //(in)// - %%An #Efl_Callback_Array_Item of events to listen to%%
  * **user_data** //(in)// - %%The data to compare%%

===== Description =====

%%Del a callback array with a specific data associated to it for an event. The callbacks from the array will never be emitted again after this call, even if a event emission is going on.%%
{{page>:docs:efl:user:class:efl:object:method:event_callback_array_del:description&nodate&nolink&nouser}}

===== Implemented by =====

  * **Efl.Object.event_callback_array_del**

