<title>Efl.Object.provider_find</title>
===== Signature =====

<code>
provider_find {
    params {
        @in klass: const(Efl.Object);
    }
    return: Efl.Object;
}
</code>

===== C signature =====

<code c>
Efl_Object *efl_provider_find(Eo *obj, const Efl_Object *klass);
</code>

===== Parameters =====

  * **klass** //(in)// - %%The class identifier to search for%%

===== Description =====

%%Searches up in the object tree for a provider which knows the given class/interface.%%

%%The object from the provider will then be returned. The base implementation calls the provider_find function on the object parent, and returns its result. If no parent is present NULL is returned. Each implementation has to support this function by overriding it and returning itself if the interface matches the parameter. If this is not done the class cannot be found up in the object tree.%%
{{page>:docs:efl:user:class:efl:object:method:provider_find:description&nodate&nolink&nouser}}

===== Implemented by =====

  * **Efl.Object.provider_find**
  * [[:docs:efl:auto:class:efl:loop:method:provider_find|Efl.Loop.provider_find]]
  * [[:docs:efl:auto:class:efl:canvas:object:method:provider_find|Efl.Canvas.Object.provider_find]]
  * [[:docs:efl:auto:class:elm:widget:method:provider_find|Elm.Widget.provider_find]]
  * [[:docs:efl:auto:class:evas:canvas:method:provider_find|Evas.Canvas.provider_find]]
  * [[:docs:efl:auto:class:evas:canvas3d:object:method:provider_find|Evas.Canvas3D.Object.provider_find]]
  * [[:docs:efl:auto:mixin:efl:input:event:method:provider_find|Efl.Input.Event.provider_find]]
  * [[:docs:efl:auto:class:efl:ui:focus:manager:method:provider_find|Efl.Ui.Focus.Manager.provider_find]]
  * [[:docs:efl:auto:class:eio:model:method:provider_find|Eio.Model.provider_find]]

