<title>Efl.Object.wref_add</title>
===== Signature =====

<code>
Efl.Object.wref_add {
    params {
        @in wref: ptr(Efl.Object);
    }
}
</code>

===== C signature =====

<code c>
void efl_wref_add(Eo *obj, Efl_Object **wref);
</code>

===== Parameters =====

  * **wref** //(in)// - %%The weak ref%%

===== Description =====

%%Add a new weak reference to obj.%%

%%This function registers the object handle pointed by wref to obj so when obj is deleted it'll be updated to NULL. This functions should be used when you want to keep track of an object in a safe way, but you don't want to prevent it from being freed.%%
{{page>:docs:efl:user:class:efl:object:method:wref_add:description&nodate&nolink&nouser}}

