<title>Efl.Object.name_find</title>
===== Signature =====

<code>
Efl.Object.name_find {
    params {
        @in search: string;
    }
    return: Efl.Object;
}
</code>

===== C signature =====

<code c>
Efl_Object *efl_name_find(Eo *obj, const char *search);
</code>

===== Parameters =====

  * **search** //(in)// - %%The name search string%%

===== Description =====

%%Find a child object with the given name and return it. The search string can be a glob (shell style). It can also specify class name in the format of "class:name" where ":" separates class and name. Both class and name can be globs. If class is specified, and name is empty like "class:" then the search will match any object of that class.%%
{{page>:docs:efl:user:class:efl:object:method:name_find:description&nodate&nolink&nouser}}

