<title>Efl.Io.Queue</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_io_queue [fillcolor = "black", label = "Efl.Io.Queue", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_io_reader [fillcolor = "gray15", label = "Efl.Io.Reader", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_writer [fillcolor = "gray15", label = "Efl.Io.Writer", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_closer [fillcolor = "gray15", label = "Efl.Io.Closer", color = "deepskyblue", fontcolor = "white", style = "filled"]

    efl_io_queue -> efl_object
    efl_io_queue -> efl_io_reader
    efl_io_queue -> efl_io_writer
    efl_io_queue -> efl_io_closer
}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:docs:efl:auto:class:efl:io:queue|Efl.Io.Queue]] //(class)//**
    * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
    * [[:docs:efl:auto:interface:efl:io:reader|Efl.Io.Reader]] //(interface)//
    * [[:docs:efl:auto:interface:efl:io:writer|Efl.Io.Writer]] //(interface)//
    * [[:docs:efl:auto:mixin:efl:io:closer|Efl.Io.Closer]] //(mixin)//

===== Description =====

%%Generic In-memory queue of data to be used as I/O.%%

%%This class is to be used to receive temporary data using %%[[:docs:efl:auto:interface:efl:io:writer:method:write|Efl.Io.Writer.write]]%% and hold it until someone calls %%[[:docs:efl:auto:interface:efl:io:reader:method:read|Efl.Io.Reader.read]]%% to consume it.%%

%%A fixed sized queue can be implemented by setting %%[[:docs:efl:auto:class:efl:io:queue:property:limit|Efl.Io.Queue.limit]]%% followed by %%[[:docs:efl:auto:class:efl:io:queue:method:preallocate|Efl.Io.Queue.preallocate]]%%%%

//Since 1.19//

{{page>:docs:efl:user:class:efl:io:queue:description&nodate&nolink&nouser}}

===== Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:class:efl:io:queue:method:clear|clear]] | %%Clear the queue. Same as reading all data.%% |
| [[:docs:efl:auto:class:efl:io:queue:method:discard|discard]] | %%Discard the given number of bytes.%% |
| [[:docs:efl:auto:class:efl:io:queue:method:eos_mark|eos_mark]] | %%Mark this end-of-stream.%% |
| [[:docs:efl:auto:class:efl:io:queue:method:preallocate|preallocate]] | %%Immediately pre-allocate a buffer of at least a given size.%% |
| [[:docs:efl:auto:class:efl:io:queue:method:slice_get|slice_get]] | %%Get a temporary access to queue's internal read memory.%% |

===== Properties =====

^ Property name ^ Brief description ^
| [[:docs:efl:auto:class:efl:io:queue:property:limit|limit]] //(get, set)// | %%Limit how big the buffer can grow.%% |
| [[:docs:efl:auto:class:efl:io:queue:property:usage|usage]] //(get)// | %%How many bytes are available for read%% |

===== Events =====

^ Event name ^ Brief description ^
| [[:docs:efl:auto:class:efl:io:queue:event:slice_changed|slice,changed]] | %%The read-slice returned by %%[[:docs:efl:auto:class:efl:io:queue:method:slice_get|Efl.Io.Queue.slice_get]]%% may have changed.%% |
