<title>Efl.Io.Queue.can_read</title>
//Overridden from [[:docs:efl:auto:interface:efl:io:reader:property:can_read|Efl.Io.Reader.can_read]].//===== Signature =====

<code>
@property can_read @pure_virtual {
    get {
        values {
            can_read: bool;
        }
    }
    set @protected {
        values {
            can_read: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_io_reader_can_read_get(const Eo *obj);
void efl_io_reader_can_read_set(Eo *obj, Eina_Bool can_read);
</code>

===== Values =====

  * **can_read** - %%%%''true''%% if it can be read without blocking or failing, %%''false''%% otherwise%%
===== Description =====

%%If %%''true''%% will notify %%[[:docs:efl:auto:interface:efl:io:reader:method:read|Efl.Io.Reader.read]]%% can be called without blocking or failing.%%

//Since 1.19//{{page>:docs:efl:user:class:efl:io:queue:property:can_read:description&nodate&nolink&nouser}}


===== Implemented by =====

  * [[:docs:efl:auto:interface:efl:io:reader:property:can_read|Efl.Io.Reader.can_read]]
  * [[:docs:efl:auto:mixin:efl:io:reader:fd:property:can_read|Efl.Io.Reader.Fd.can_read]]
  * [[:docs:efl:auto:class:efl:net:socket:fd:property:can_read|Efl.Net.Socket.Fd.can_read]]
  * [[:docs:efl:auto:class:efl:io:stdin:property:can_read|Efl.Io.Stdin.can_read]]
  * [[:docs:efl:auto:class:efl:net:server:udp:client:property:can_read|Efl.Net.Server.Udp.Client.can_read]]
  * [[:docs:efl:auto:class:efl:net:dialer:websocket:property:can_read|Efl.Net.Dialer.Websocket.can_read]]
  * [[:docs:efl:auto:class:efl:net:dialer:http:property:can_read|Efl.Net.Dialer.Http.can_read]]
  * [[:docs:efl:auto:class:efl:net:socket:ssl:property:can_read|Efl.Net.Socket.Ssl.can_read]]
  * [[:docs:efl:auto:class:efl:io:buffered_stream:property:can_read|Efl.Io.Buffered_Stream.can_read]]
  * [[:docs:efl:auto:class:efl:io:buffer:property:can_read|Efl.Io.Buffer.can_read]]
  * **Efl.Io.Queue.can_read**

