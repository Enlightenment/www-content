<title>Efl.Io.Buffer</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_io_buffer [fillcolor = "black", label = "Efl.Io.Buffer", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_io_reader [fillcolor = "gray15", label = "Efl.Io.Reader", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_writer [fillcolor = "gray15", label = "Efl.Io.Writer", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_closer [fillcolor = "gray15", label = "Efl.Io.Closer", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_io_sizer [fillcolor = "gray15", label = "Efl.Io.Sizer", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_io_positioner [fillcolor = "gray15", label = "Efl.Io.Positioner", color = "deepskyblue", fontcolor = "white", style = "filled"]

    efl_io_buffer -> efl_object
    efl_io_buffer -> efl_io_reader
    efl_io_buffer -> efl_io_writer
    efl_io_buffer -> efl_io_closer
    efl_io_buffer -> efl_io_sizer
    efl_io_buffer -> efl_io_positioner
}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:docs:efl:auto:class:efl:io:buffer|Efl.Io.Buffer]] //(class)//**
    * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
    * [[:docs:efl:auto:interface:efl:io:reader|Efl.Io.Reader]] //(interface)//
    * [[:docs:efl:auto:interface:efl:io:writer|Efl.Io.Writer]] //(interface)//
    * [[:docs:efl:auto:mixin:efl:io:closer|Efl.Io.Closer]] //(mixin)//
    * [[:docs:efl:auto:mixin:efl:io:sizer|Efl.Io.Sizer]] //(mixin)//
    * [[:docs:efl:auto:mixin:efl:io:positioner|Efl.Io.Positioner]] //(mixin)//

===== Description =====

%%Generic In-memory buffer of data to be used as I/O.%%

%%This class offers both input and output, which can be used at the same time since %%[[:docs:efl:auto:interface:efl:io:reader:method:read|Efl.Io.Reader.read]]%% and %%[[:docs:efl:auto:interface:efl:io:writer:method:write|Efl.Io.Writer.write]]%% use different offsets/position internally.%%

%%One can get temporary direct access to internal buffer with %%[[:docs:efl:auto:class:efl:io:buffer:property:slice|Efl.Io.Buffer.slice]]%% or steal the buffer with %%[[:docs:efl:auto:class:efl:io:buffer:method:binbuf_steal|Efl.Io.Buffer.binbuf_steal]]%%.%%

%%A fixed sized buffer can be implemented by setting %%[[:docs:efl:auto:class:efl:io:buffer:property:limit|Efl.Io.Buffer.limit]]%% followed by %%[[:docs:efl:auto:class:efl:io:buffer:method:preallocate|Efl.Io.Buffer.preallocate]]%%%%

//Since 1.19//

{{page>:docs:efl:user:class:efl:io:buffer:description&nodate&nolink&nouser}}

===== Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:class:efl:io:buffer:method:adopt_readonly|adopt_readonly]] | %%Adopt a read-only slice as buffer's backing store.%% |
| [[:docs:efl:auto:class:efl:io:buffer:method:adopt_readwrite|adopt_readwrite]] | %%Adopt a read-write slice as buffer's backing store.%% |
| [[:docs:efl:auto:class:efl:io:buffer:method:binbuf_steal|binbuf_steal]] | %%Steals the internal buffer memory and returns it as a binbuf.%% |
| [[:docs:efl:auto:class:efl:io:buffer:method:preallocate|preallocate]] | %%Immediately pre-allocate a buffer of at least a given size.%% |

===== Properties =====

^ Property name ^ Brief description ^
| [[:docs:efl:auto:class:efl:io:buffer:property:limit|limit]] //**(get, set)**// | %%Limit how big the buffer can grow.%% |
| [[:docs:efl:auto:class:efl:io:buffer:property:position_read|position_read]] //**(get, set)**// | %%The position used by %%[[:docs:efl:auto:interface:efl:io:reader:method:read|Efl.Io.Reader.read]]%%.%% |
| [[:docs:efl:auto:class:efl:io:buffer:property:position_write|position_write]] //**(get, set)**// | %%The position used by %%[[:docs:efl:auto:interface:efl:io:writer:method:write|Efl.Io.Writer.write]]%%.%% |
| [[:docs:efl:auto:class:efl:io:buffer:property:slice|slice]] //**(get)**// | %%Get a temporary access to buffer's internal memory.%% |

===== Overridden Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:class:efl:io:buffer:method:close|close]] //[from [[:docs:efl:auto:mixin:efl:io:closer|Efl.Io.Closer]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:method:destructor|destructor]] //[from [[:docs:efl:auto:class:efl:object|Efl.Object]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:method:finalize|finalize]] //[from [[:docs:efl:auto:class:efl:object|Efl.Object]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:method:read|read]] //[from [[:docs:efl:auto:interface:efl:io:reader|Efl.Io.Reader]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:method:resize|resize]] //[from [[:docs:efl:auto:mixin:efl:io:sizer|Efl.Io.Sizer]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:method:seek|seek]] //[from [[:docs:efl:auto:mixin:efl:io:positioner|Efl.Io.Positioner]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:method:write|write]] //[from [[:docs:efl:auto:interface:efl:io:writer|Efl.Io.Writer]]]// | No description supplied. |

===== Overridden Properties =====

^ Property name ^ Brief description ^
| [[:docs:efl:auto:class:efl:io:buffer:property:can_read|can_read]] //**(get, set)**// //[from [[:docs:efl:auto:interface:efl:io:reader|Efl.Io.Reader]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:property:can_write|can_write]] //**(get, set)**// //[from [[:docs:efl:auto:interface:efl:io:writer|Efl.Io.Writer]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:property:close_on_destructor|close_on_destructor]] //**(get, set)**// //[from [[:docs:efl:auto:mixin:efl:io:closer|Efl.Io.Closer]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:property:close_on_exec|close_on_exec]] //**(get, set)**// //[from [[:docs:efl:auto:mixin:efl:io:closer|Efl.Io.Closer]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:property:closed|closed]] //**(get)**// //[from [[:docs:efl:auto:mixin:efl:io:closer|Efl.Io.Closer]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:property:eos|eos]] //**(get, set)**// //[from [[:docs:efl:auto:interface:efl:io:reader|Efl.Io.Reader]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:property:position|position]] //**(get)**// //[from [[:docs:efl:auto:mixin:efl:io:positioner|Efl.Io.Positioner]]]// | No description supplied. |
| [[:docs:efl:auto:class:efl:io:buffer:property:size|size]] //**(get)**// //[from [[:docs:efl:auto:mixin:efl:io:sizer|Efl.Io.Sizer]]]// | No description supplied. |

===== Events =====

^ Event name ^ Brief description ^
| [[:docs:efl:auto:class:efl:io:buffer:event:position_read_changed|position_read,changed]] | %%Notifies %%[[:docs:efl:auto:class:efl:io:buffer:property:position_read|Efl.Io.Buffer.position_read]]%% changed%% |
| [[:docs:efl:auto:class:efl:io:buffer:event:position_write_changed|position_write,changed]] | %%Notifies %%[[:docs:efl:auto:class:efl:io:buffer:property:position_write|Efl.Io.Buffer.position_write]]%% changed%% |
| [[:docs:efl:auto:class:efl:io:buffer:event:reallocated|reallocated]] | %%Notifies the internal buffer was reallocated, thus whatever was returned by %%[[:docs:efl:auto:class:efl:io:buffer:property:slice|Efl.Io.Buffer.slice]]%% becomes invalid%% |
