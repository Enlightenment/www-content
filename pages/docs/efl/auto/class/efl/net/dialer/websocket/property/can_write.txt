<title>Efl.Net.Dialer.Websocket.can_write</title>
//Overridden from [[:docs:efl:auto:interface:efl:io:writer:property:can_write|Efl.Io.Writer.can_write]].//===== Signature =====

<code>
@property can_write @pure_virtual {
    get {
        values {
            can_write: bool;
        }
    }
    set @protected {
        values {
            can_write: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_io_writer_can_write_get(const Eo *obj);
void efl_io_writer_can_write_set(Eo *obj, Eina_Bool can_write);
</code>

===== Values =====

  * **can_write** - %%%%''true''%% if it can be written without blocking or failure, %%''false''%% otherwise%%
===== Description =====

%%If %%''true''%% will notify %%[[:docs:efl:auto:interface:efl:io:writer:method:write|Efl.Io.Writer.write]]%% can be called without blocking or failing.%%

//Since 1.19//{{page>:docs:efl:user:class:efl:net:dialer:websocket:property:can_write:description&nodate&nolink&nouser}}


===== Implemented by =====

  * [[:docs:efl:auto:interface:efl:io:writer:property:can_write|Efl.Io.Writer.can_write]]
  * [[:docs:efl:auto:mixin:efl:io:writer:fd:property:can_write|Efl.Io.Writer.Fd.can_write]]
  * [[:docs:efl:auto:class:efl:net:socket:fd:property:can_write|Efl.Net.Socket.Fd.can_write]]
  * [[:docs:efl:auto:class:efl:io:stdout:property:can_write|Efl.Io.Stdout.can_write]]
  * [[:docs:efl:auto:class:efl:io:stderr:property:can_write|Efl.Io.Stderr.can_write]]
  * [[:docs:efl:auto:class:efl:net:server:udp:client:property:can_write|Efl.Net.Server.Udp.Client.can_write]]
  * **Efl.Net.Dialer.Websocket.can_write**
  * [[:docs:efl:auto:class:efl:net:dialer:http:property:can_write|Efl.Net.Dialer.Http.can_write]]
  * [[:docs:efl:auto:class:efl:net:socket:ssl:property:can_write|Efl.Net.Socket.Ssl.can_write]]
  * [[:docs:efl:auto:class:efl:io:buffered_stream:property:can_write|Efl.Io.Buffered_Stream.can_write]]
  * [[:docs:efl:auto:class:efl:io:buffer:property:can_write|Efl.Io.Buffer.can_write]]
  * [[:docs:efl:auto:class:efl:io:queue:property:can_write|Efl.Io.Queue.can_write]]

