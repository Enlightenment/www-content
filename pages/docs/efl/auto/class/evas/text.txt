<title>Evas.Text</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    evas_text [fillcolor = "black", label = "Evas.Text", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_object [fillcolor = "gray15", label = "Efl.Canvas.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_stack [fillcolor = "gray15", label = "Efl.Gfx.Stack", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_animator [fillcolor = "gray15", label = "Efl.Animator", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_interface [fillcolor = "gray15", label = "Efl.Input.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_hint [fillcolor = "gray15", label = "Efl.Gfx.Size.Hint", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_map [fillcolor = "gray15", label = "Efl.Gfx.Map", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_text [fillcolor = "gray15", label = "Efl.Text", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_text_properties [fillcolor = "gray15", label = "Efl.Text.Properties", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_canvas_filter_internal [fillcolor = "gray15", label = "Efl.Canvas.Filter.Internal", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_gfx_filter [fillcolor = "gray15", label = "Efl.Gfx.Filter", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]

    evas_text -> efl_canvas_object
    efl_canvas_object -> efl_object
    efl_canvas_object -> efl_gfx
    efl_canvas_object -> efl_gfx_stack
    efl_canvas_object -> efl_animator
    efl_canvas_object -> efl_input_interface
    efl_canvas_object -> efl_gfx_size_hint
    efl_canvas_object -> efl_gfx_map
    efl_gfx_map -> efl_interface
    efl_gfx_map -> efl_object
    evas_text -> efl_text
    evas_text -> efl_text_properties
    evas_text -> efl_canvas_filter_internal
    efl_canvas_filter_internal -> efl_gfx_filter
    efl_canvas_filter_internal -> efl_object
}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:docs:efl:auto:class:evas:text|Evas.Text]] //(class)//**
    * [[:docs:efl:auto:class:efl:canvas:object|Efl.Canvas.Object]] //(class)//
      * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
      * [[:docs:efl:auto:interface:efl:gfx|Efl.Gfx]] //(interface)//
      * [[:docs:efl:auto:interface:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
      * [[:docs:efl:auto:interface:efl:animator|Efl.Animator]] //(interface)//
      * [[:docs:efl:auto:interface:efl:input:interface|Efl.Input.Interface]] //(interface)//
      * [[:docs:efl:auto:interface:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] //(interface)//
      * [[:docs:efl:auto:mixin:efl:gfx:map|Efl.Gfx.Map]] //(mixin)//
        * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
        * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
    * [[:docs:efl:auto:interface:efl:text|Efl.Text]] //(interface)//
    * [[:docs:efl:auto:interface:efl:text:properties|Efl.Text.Properties]] //(interface)//
    * [[:docs:efl:auto:mixin:efl:canvas:filter:internal|Efl.Canvas.Filter.Internal]] //(mixin)//
      * [[:docs:efl:auto:interface:efl:gfx:filter|Efl.Gfx.Filter]] //(interface)//
      * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//

===== Description =====

%%Evas tex class%%

{{page>:docs:efl:user:class:evas:text:description&nodate&nolink&nouser}}

===== Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:class:evas:text:method:char_coords_get|char_coords_get]] | %%Get character coordinates%% |
| [[:docs:efl:auto:class:evas:text:method:char_pos_get|char_pos_get]] | %%Retrieve position and dimension information of a character within a text %%[[:docs:efl:auto:class:efl:canvas:object|Efl.Canvas.Object]]%%%% |
| [[:docs:efl:auto:class:evas:text:method:last_up_to_pos|last_up_to_pos]] | %%Returns the logical position of the last char in the text up to the pos given. This is NOT the position of the last char because of the possibility of RTL in the text.%% |

===== Properties =====

^ Property name ^ Brief description ^
| [[:docs:efl:auto:class:evas:text:property:ascent|ascent]] //(get)// | %%Ascent property%% |
| [[:docs:efl:auto:class:evas:text:property:bidi_delimiters|bidi_delimiters]] //(get, set)// | %%Sets the BiDi delimiters used in the textblock.%% |
| [[:docs:efl:auto:class:evas:text:property:descent|descent]] //(get)// | %%descent property%% |
| [[:docs:efl:auto:class:evas:text:property:direction|direction]] //(get)// | %%Retrieves the direction of the text currently being displayed in the text object.%% |
| [[:docs:efl:auto:class:evas:text:property:ellipsis|ellipsis]] //(get, set)// | %%Conttrols the ellipsis that should be used for the text object.%% |
| [[:docs:efl:auto:class:evas:text:property:glow2_color|glow2_color]] //(get, set)// | %%Sets the 'glow 2' color for the given text object.%% |
| [[:docs:efl:auto:class:evas:text:property:glow_color|glow_color]] //(get, set)// | %%Sets the glow color for the given text object.%% |
| [[:docs:efl:auto:class:evas:text:property:horiz_advance|horiz_advance]] //(get)// | %%Horizontal advance property%% |
| [[:docs:efl:auto:class:evas:text:property:inset|inset]] //(get)// | %%Inset property%% |
| [[:docs:efl:auto:class:evas:text:property:max_ascent|max_ascent]] //(get)// | %%Maximal ascent property%% |
| [[:docs:efl:auto:class:evas:text:property:max_descent|max_descent]] //(get)// | %%Maximal descent property%% |
| [[:docs:efl:auto:class:evas:text:property:outline_color|outline_color]] //(get, set)// | %%Controlss the outline color for the given text object.%% |
| [[:docs:efl:auto:class:evas:text:property:shadow_color|shadow_color]] //(get, set)// | %%Controls the shadow color for the given text object.%% |
| [[:docs:efl:auto:class:evas:text:property:style_pad|style_pad]] //(get)// | %%Gets the text style pad of a text object.%% |
| [[:docs:efl:auto:class:evas:text:property:style|style]] //(get, set)// | %%Controls the style to apply on the given text object.%% |
| [[:docs:efl:auto:class:evas:text:property:vert_advance|vert_advance]] //(get)// | %%Vertical advance property%% |

===== Events =====

This class does not define any events.
