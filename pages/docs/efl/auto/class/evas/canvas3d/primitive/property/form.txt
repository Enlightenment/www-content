<title>Evas.Canvas3D.Primitive.form</title>
===== Signature =====

<code>
@property form {
    get {
        values {
            form: Evas.Canvas3D.Mesh_Primitive;
        }
    }
    set {
        values {
            form: Evas.Canvas3D.Mesh_Primitive;
        }
    }
}
</code>

===== C signature =====

<code c>
Evas_Canvas3D_Mesh_Primitive evas_canvas3d_primitive_form_get(const Eo *obj);
void evas_canvas3d_primitive_form_set(Eo *obj, Evas_Canvas3D_Mesh_Primitive form);
</code>

===== Values =====

  * **form** - %%Form of primitive.%%
===== Description =====



{{page>:docs:efl:user:class:evas:canvas3d:primitive:property:form:description&nodate&nolink&nouser}}

==== Getter ====

%%Get the form of the given primitive.%%

%%See also %%[[:docs:efl:auto:class:evas:canvas3d:primitive:property:form|Evas.Canvas3D.Primitive.form.set]]%%.%%

{{page>:docs:efl:user:class:evas:canvas3d:primitive:property:form:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Set the form of the given primitive.%%

%%Form defines which function will be chosen to set data to mesh on call of evas_canvas3d_mesh_primitive_set.%%

%%Now available next forms of primitives are tabulated primitives (SQUARE and CUBE), solids of revolution (CYLINDER, CONE, SPHERE and TORUS) and surfaces (SURFACE and TERRAIN).%%

%%Default form is EVAS_CANVAS3D_MESH_PRIMITIVE_NONE.%%{{page>:docs:efl:user:class:evas:canvas3d:primitive:property:form:getter_description&nodate&nolink&nouser}}


===== Implemented by =====

  * **Evas.Canvas3D.Primitive.form**

