<title>Evas.Canvas.key_modifier_add</title>
===== Signature =====

<code>
key_modifier_add {
    params {
        @in keyname: string @nonull;
    }
}
</code>

===== C signature =====

<code c>
void evas_canvas_key_modifier_add(Eo *obj, const char *keyname);
</code>

===== Parameters =====

  * **keyname** //(in)// - %%The name of the modifier key to add to the list of Evas modifiers.%%

===== Description =====

%%Adds the %%''keyname''%% key to the current list of modifier keys.%%

%%Modifiers are keys like shift, alt and ctrl, i.e., keys which are meant to be pressed together with others, altering the behavior of the secondly pressed keys somehow. Evas is so that these keys can be user defined.%%

%%This call allows custom modifiers to be added to the Evas system at run time. It is then possible to set and unset modifier keys programmatically for other parts of the program to check and act on. Programmers using Evas would check for modifier keys on key event callbacks using @ref evas_key_modifier_is_set.%%

%%If the programmer instantiates the canvas by means of the @ref ecore_evas_new family of helper functions, Ecore will take care of registering on it all standard modifiers: "Shift", "Control", "Alt", "Meta", "Hyper", "Super".%%
</note>
{{page>:docs:efl:user:class:evas:canvas:method:key_modifier_add:description&nodate&nolink&nouser}}

===== Implemented by =====

  * **Evas.Canvas.key_modifier_add**

