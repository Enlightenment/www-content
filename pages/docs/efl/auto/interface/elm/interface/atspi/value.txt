<title>Elm.Interface.Atspi.Value</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    elm_interface_atspi_value [fillcolor = "dodgerblue4", label = "Elm.Interface.Atspi.Value", color = "cornflowerblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:docs:efl:auto:interface:elm:interface:atspi:value|Elm.Interface.Atspi.Value]] //(interface)//**

===== Description =====

%%Elementary AT-SPI value interface%%

{{page>:docs:efl:user:interface:elm:interface:atspi:value:description&nodate&nolink&nouser}}

===== Members =====

**[[:docs:efl:auto:interface:elm:interface:atspi:value:property:increment|increment]]** //**(get)**//
<code c>
double elm_interface_atspi_value_increment_get(const Eo *obj);
</code>

%%Gets an minimal incrementation value%%\\ 
\\ 
**[[:docs:efl:auto:interface:elm:interface:atspi:value:property:range|range]]** //**(get)**//
<code c>
void elm_interface_atspi_value_range_get(const Eo *obj, double *lower_limit, double *upper_limit, const char **description);
</code>

%%Gets a range of all possible values and its description%%\\ 
\\ 
**[[:docs:efl:auto:interface:elm:interface:atspi:value:property:value_and_text|value_and_text]]** //**(get, set)**//
<code c>
void elm_interface_atspi_value_and_text_get(const Eo *obj, double *value, const char **text);
Eina_Bool elm_interface_atspi_value_and_text_set(Eo *obj, double value, const char *text);
</code>

%%Value and text property%%\\ 
\\ 

