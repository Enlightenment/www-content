<title>Efl.Model.child_del</title>
===== Signature =====

<code>
Efl.Model.child_del @virtual_pure {
    params {
        @in child: Efl.Object;
    }
}
</code>

===== C signature =====

<code c>
void efl_model_child_del(Eo *obj, Efl_Object *child);
</code>

===== Parameters =====

  * **child** //(in)// - %%Child to be removed%%

===== Description =====

%%Remove a child.%%

%%Remove a child of a internal keeping. When the child is effectively removed the event @ref EFL_MODEL_EVENT_CHILD_REMOVED is then raised to give a chance for listeners to perform any cleanup and/or update references.%%

//Since 1.14//
{{page>:docs:efl:user:interface:efl:model:method:child_del:description&nodate&nolink&nouser}}

