<title>Efl.Gfx.Buffer.buffer_managed_get</title>
===== Signature =====

<code>
Efl.Gfx.Buffer.buffer_managed_get @virtual_pure {
    params {
        @out slice: Eina.Slice;
        @in plane: int @optional;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_gfx_buffer_managed_get(Eo *obj, Eina_Slice *slice, int plane);
</code>

===== Parameters =====

  * **slice** //(out)// - %%Data slice%%
  * **plane** //(in)// - %%Plane ID. 0 by default. Useful for planar formats only.%%

===== Description =====

%%Get a direct pointer to the internal pixel data, if available.%%

%%This will return %%''null''%% unless %%[[:docs:efl:auto:interface:efl:gfx:buffer:method:buffer_managed_set|Efl.Gfx.Buffer.buffer_managed_set]]%% was used to pass in an external data pointer. The returned %%[[:docs:efl:auto:struct:eina:slice|Eina.Slice]]%% struct must be freed by the caller.%%
{{page>:docs:efl:user:interface:efl:gfx:buffer:method:buffer_managed_get:description&nodate&nolink&nouser}}

