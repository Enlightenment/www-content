<title>Efl.Gfx.Size.Hint.hint_request</title>
===== Signature =====

<code>
@property Efl.Gfx.Size.Hint.hint_request @virtual_pure {
    get {
        values {
            w: int;
            h: int;
        }
    }
    set {
        values {
            w: int;
            h: int;
        }
    }
}
</code>

===== C signature =====

<code c>
void efl_gfx_size_hint_request_get(const Eo *obj, int *w, int *h);
void efl_gfx_size_hint_request_set(Eo *obj, int w, int h);
</code>

===== Values =====

  * **w** - %%Integer to use as the preferred width hint.%%
  * **h** - %%Integer to use as the preferred height hint.%%
===== Description =====

%%Hints for the object's optimum size.%%

%%This is not a size enforcement in any way, it's just a hint that should be used whenever appropriate.%%

%%Values 0 will be treated as unset hint components, when queried by managers.%%

<note>
%%This property is meant to be set by applications and not by EFL itself. Very few containers actually implement support for this requested size, see %%[[:docs:efl:auto:interface:efl:gfx:size:hint:property:hint_min|Efl.Gfx.Size.Hint.hint_min]]%% instead.%%
</note>{{page>:docs:efl:user:interface:efl:gfx:size:hint:property:hint_request:description&nodate&nolink&nouser}}


