<title>Ecore.Con.Type</title>
===== Signature =====

<code>
enum Ecore.Con.Type {
    local_user: 0,
    local_system: 1,
    local_abstract: 2,
    remote_tcp: 3,
    remote_mcast: 4,
    remote_udp: 5,
    remote_broadcasT: 6,
    remote_nodelay: 7,
    remote_cork: 8,
    use_ssl2: 1 << 4,
    use_ssl3: 1 << 5,
    use_tls: 1 << 6,
    use_mixed: Ecore.Con.Type.use_tls | Ecore.Con.Type.use_ssl3,
    load_cert: 1 << 7,
    no_proxy: 1 << 8,
    socket_activate: 1 << 9
}
</code>

===== C signature =====

<code c>
typedef enum {
    ECORE_CON_LOCAL_USER = 0,
    ECORE_CON_LOCAL_SYSTEM = 1,
    ECORE_CON_LOCAL_ABSTRACT = 2,
    ECORE_CON_REMOTE_TCP = 3,
    ECORE_CON_REMOTE_MCAST = 4,
    ECORE_CON_REMOTE_UDP = 5,
    ECORE_CON_REMOTE_BROADCAST = 6,
    ECORE_CON_REMOTE_NODELAY = 7,
    ECORE_CON_REMOTE_CORK = 8,
    ECORE_CON_USE_SSL2 = 16 /* 1 << 4 */,
    ECORE_CON_USE_SSL3 = 32 /* 1 << 5 */,
    ECORE_CON_USE_TLS = 64 /* 1 << 6 */,
    ECORE_CON_USE_MIXED = 96 /* Ecore.Con.Type.use_tls | Ecore.Con.Type.use_ssl3 */,
    ECORE_CON_LOAD_CERT = 128 /* 1 << 7 */,
    ECORE_CON_NO_PROXY = 256 /* 1 << 8 */,
    ECORE_CON_SOCKET_ACTIVATE = 512 /* 1 << 9 */
} Ecore_Con_Type;
</code>

===== Description =====

%%Types for an ecore_con client/server object.  A correct way to set this type is with an ECORE_CON_%%''TYPE''%%, optionally OR'ed with an ECORE_CON_%%''USE''%% if encryption is desired, and LOAD_CERT if the previously loaded certificate should be used.%%

{{page>:docs:efl:user:enum:ecore:con:type:description&nodate&nolink&nouser}}

===== Fields =====

{{page>:docs:efl:user:enum:ecore:con:type:fields&nodate&nolink&nouser}}

  * **local_user** - %%Socket in "~/.ecore"%%
  * **local_system** - %%Socket in /tmp%%
  * **local_abstract** - %%Abstract socket%%
  * **remote_tcp** - %%Remote server using TCP%%
  * **remote_mcast** - %%Remote multicast server%%
  * **remote_udp** - %%Remote server using UDP%%
  * **remote_broadcasT** - %%Remote broadcast using UDP%%
  * **remote_nodelay** - %%Remote connection sending packets immediately%%
  * **remote_cork** - %%Remote connection sending data in large chunks Note: Only available on Linux%%
  * **use_ssl2** - %%Use SSL2: UNSUPPORTED.%%
  * **use_ssl3** - %%Use SSL3: UNSUPPORTED.%%
  * **use_tls** - %%Use TLS%%
  * **use_mixed** - %%Use both TLS and SSL3%%
  * **load_cert** - %%Attempt to use the loaded certificate%%
  * **no_proxy** - %%Disable all types of proxy on the server Note: Only functional for clients%%
  * **socket_activate** - %%Indicate if the type is socket activated%%

