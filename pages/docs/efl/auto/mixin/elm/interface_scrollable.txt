<title>Elm.Interface_Scrollable</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    elm_interface_scrollable [fillcolor = "deepskyblue4", label = "Elm.Interface_Scrollable", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_ui_scrollable [fillcolor = "gray15", label = "Efl.Ui.Scrollable", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_canvas_group [fillcolor = "gray15", label = "Efl.Canvas.Group", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_object [fillcolor = "gray15", label = "Efl.Canvas.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_stack [fillcolor = "gray15", label = "Efl.Gfx.Stack", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_animator [fillcolor = "gray15", label = "Efl.Animator", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_interface [fillcolor = "gray15", label = "Efl.Input.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_hint [fillcolor = "gray15", label = "Efl.Gfx.Size.Hint", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_map [fillcolor = "gray15", label = "Efl.Gfx.Map", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_loop_user [fillcolor = "gray15", label = "Efl.Loop_User", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]

    elm_interface_scrollable -> efl_ui_scrollable
    elm_interface_scrollable -> efl_canvas_group
    efl_canvas_group -> efl_canvas_object
    efl_canvas_object -> efl_object
    efl_canvas_object -> efl_gfx
    efl_canvas_object -> efl_gfx_stack
    efl_canvas_object -> efl_animator
    efl_canvas_object -> efl_input_interface
    efl_canvas_object -> efl_gfx_size_hint
    efl_canvas_object -> efl_gfx_map
    efl_gfx_map -> efl_interface
    efl_gfx_map -> efl_object
    efl_canvas_object -> efl_loop_user
    efl_loop_user -> efl_object
}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:docs:efl:auto:mixin:elm:interface_scrollable|Elm.Interface_Scrollable]] //(mixin)//**
    * [[:docs:efl:auto:interface:efl:ui:scrollable|Efl.Ui.Scrollable]] //(interface)//
    * [[:docs:efl:auto:class:efl:canvas:group|Efl.Canvas.Group]] //(class)//
      * [[:docs:efl:auto:class:efl:canvas:object|Efl.Canvas.Object]] //(class)//
        * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
        * [[:docs:efl:auto:interface:efl:gfx|Efl.Gfx]] //(interface)//
        * [[:docs:efl:auto:interface:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
        * [[:docs:efl:auto:interface:efl:animator|Efl.Animator]] //(interface)//
        * [[:docs:efl:auto:interface:efl:input:interface|Efl.Input.Interface]] //(interface)//
        * [[:docs:efl:auto:interface:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] //(interface)//
        * [[:docs:efl:auto:mixin:efl:gfx:map|Efl.Gfx.Map]] //(mixin)//
          * [[:docs:efl:auto:interface:efl:interface|Efl.Interface]] //(interface)//
          * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//
        * [[:docs:efl:auto:class:efl:loop_user|Efl.Loop_User]] //(class)//
          * [[:docs:efl:auto:class:efl:object|Efl.Object]] //(class)//

===== Description =====

%%Elm scrollable mixin%%

{{page>:docs:efl:user:mixin:elm:interface_scrollable:description&nodate&nolink&nouser}}

===== Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:mixin:elm:interface_scrollable:method:content_min_limit|content_min_limit]] | %%Prevent the scrollable from being smaller than the minimum size of the content.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:method:content_pos_get|content_pos_get]] | %%Get content position%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:method:content_pos_set|content_pos_set]] | %%Set the content position%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:method:content_region_show|content_region_show]] | %%Show a specific virtual region within the scroller content object%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:method:page_bring_in|page_bring_in]] | %%Show a specific virtual region within the scroller content object by page number.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:method:page_show|page_show]] | %%Show a specific virtual region within the scroller content object by page number.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:method:region_bring_in|region_bring_in]] | %%Show a specific virtual region within the scroller content object.%% |

===== Properties =====

^ Property name ^ Brief description ^
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:animate_start_cb|animate_start_cb]] //**(set)**// | %%Set the callback to run when the scrolling animation has started.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:animate_stop_cb|animate_stop_cb]] //**(set)**// | %%Set the callback to run when the scrolling animation has stopped.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:bounce_allow|bounce_allow]] //**(get, set)**// | %%Bouncing behavior%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:bounce_animator_disabled|bounce_animator_disabled]] //**(get, set)**// | %%Bounce animator%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:content_min_limit_cb|content_min_limit_cb]] //**(set)**// | %%set the callback to run on minimal limit content%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:content_region|content_region]] //**(get, set)**// | %%Currently visible content region%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:content_size|content_size]] //**(get)**// | %%Get the size of the content object%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:content_viewport_geometry|content_viewport_geometry]] //**(get)**// | %%Content viewport geometry%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:content_viewport_resize_cb|content_viewport_resize_cb]] //**(set)**// | %%When the viewport is resized, the callback is called.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:content|content]] //**(set)**// | %%Content property%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:current_page|current_page]] //**(get)**// | %%Get scroll current page number.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:drag_start_cb|drag_start_cb]] //**(set)**// | %%Set the callback to run when dragging of the contents has started.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:drag_stop_cb|drag_stop_cb]] //**(set)**// | %%Set the callback to run when dragging of the contents has stopped.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:edge_bottom_cb|edge_bottom_cb]] //**(set)**// | %%Set the callback to run when the bottom edge of the content has been reached.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:edge_left_cb|edge_left_cb]] //**(set)**// | %%Set the callback to run when the left edge of the content has been reached.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:edge_right_cb|edge_right_cb]] //**(set)**// | %%Set the callback to run when the right edge of the content has been reached.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:edge_top_cb|edge_top_cb]] //**(set)**// | %%Set the callback to run when the top edge of the content has been reached.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:extern_pan|extern_pan]] //**(set)**// | %%Extern pan%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:freeze|freeze]] //**(set)**// | %%Freeze property%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:gravity|gravity]] //**(get, set)**// | %%Control scrolling gravity on the scrollable%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:hbar_drag_cb|hbar_drag_cb]] //**(set)**// | %%Set the callback to run when the horizontal scrollbar is dragged.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:hbar_press_cb|hbar_press_cb]] //**(set)**// | %%Set the callback to run when the horizontal scrollbar is pressed.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:hbar_unpress_cb|hbar_unpress_cb]] //**(set)**// | %%Set the callback to run when the horizontal scrollbar is unpressed.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:hold|hold]] //**(set)**// | %%Hold property%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:last_page|last_page]] //**(get)**// | %%Get scroll last page number.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:loop|loop]] //**(get, set)**// | %%Controls an infinite loop for a scroller.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:mirrored|mirrored]] //**(set)**// | %%Mirroed property%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:momentum_animator_disabled|momentum_animator_disabled]] //**(get, set)**// | %%Momentum animator%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:movement_block|movement_block]] //**(get, set)**// | %%Blocking of scrolling (per axis)%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:objects|objects]] //**(set)**// | %%Object property%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:page_change_cb|page_change_cb]] //**(set)**// | %%Set the callback to run when the visible page changes.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:page_relative|page_relative]] //**(set)**// | %%Set scroll page size relative to viewport size.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:page_scroll_limit|page_scroll_limit]] //**(get, set)**// | %%Page scroll limit%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:page_size|page_size]] //**(get, set)**// | %%Scroll page size relative to viewport size.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:page_snap_allow|page_snap_allow]] //**(get, set)**// | %%Page snapping behavior%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:paging|paging]] //**(get, set)**// | %%Pagin property%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:policy|policy]] //**(get, set)**// | %%Scrollbar visibility policy%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:repeat_events|repeat_events]] //**(get, set)**// | %%It decides whether the scrollable object propagates the events to content object or not.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:scroll_cb|scroll_cb]] //**(set)**// | %%Set the callback to run when the content has been moved.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:scroll_down_cb|scroll_down_cb]] //**(set)**// | %%Set the callback to run when the content has been moved down.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:scroll_left_cb|scroll_left_cb]] //**(set)**// | %%Set the callback to run when the content has been moved to the left%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:scroll_right_cb|scroll_right_cb]] //**(set)**// | %%Set the callback to run when the content has been moved to the right.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:scroll_up_cb|scroll_up_cb]] //**(set)**// | %%Set the callback to run when the content has been moved up.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:single_direction|single_direction]] //**(get, set)**// | %%Single direction scroll configuration%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:step_size|step_size]] //**(get, set)**// | %%Step size%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:vbar_drag_cb|vbar_drag_cb]] //**(set)**// | %%Set the callback to run when the horizontal scrollbar is dragged.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:vbar_press_cb|vbar_press_cb]] //**(set)**// | %%Set the callback to run when the vertical scrollbar is pressed.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:vbar_unpress_cb|vbar_unpress_cb]] //**(set)**// | %%Set the callback to run when the horizontal scrollbar is unpressed.%% |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:property:wheel_disabled|wheel_disabled]] //**(get, set)**// | %%Control Wheel disable Enable or disable mouse wheel to be used to scroll the scroller content. heel is enabled by default.%% |

===== Overridden Methods =====

^ Method name ^ Brief description ^
| [[:docs:efl:auto:mixin:elm:interface_scrollable:method:group_add|group_add]] //[from [[:docs:efl:auto:class:efl:canvas:group|Efl.Canvas.Group]]]// | No description supplied. |
| [[:docs:efl:auto:mixin:elm:interface_scrollable:method:group_del|group_del]] //[from [[:docs:efl:auto:class:efl:canvas:group|Efl.Canvas.Group]]]// | No description supplied. |

===== Events =====

^ Event name ^ Brief description ^
| [[:docs:efl:auto:mixin:elm:interface_scrollable:event:changed|changed]] | %%Called when content changed%% |
