<title>Efl.Gfx.Map.map_alpha</title>
===== Signature =====

<code>
@property Efl.Gfx.Map.map_alpha {
    get {
        values {
            alpha: bool;
        }
    }
    set {
        values {
            alpha: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_gfx_map_alpha_get(const Eo *obj);
void efl_gfx_map_alpha_set(Eo *obj, Eina_Bool alpha);
</code>

===== Values =====

  * **alpha** - %%%%''true''%% by default.%%
===== Description =====

%%Alpha flag for map rendering.%%

%%This sets alpha flag for map rendering. If the object is a type that has its own alpha settings, then this will take precedence. Only image objects have this currently (%%''Efl''%%.Canvas.Image and its friends). Setting this off stops alpha blending of the map area, and is useful if you know the object and/or all sub-objects is 100% solid.%%{{page>:docs:efl:user:mixin:efl:gfx:map:property:map_alpha:description&nodate&nolink&nouser}}


