<title>Efl.Gfx.Map.map_rotate_3d</title>
===== Signature =====

<code>
map_rotate_3d {
    params {
        @in dx: double;
        @in dy: double;
        @in dz: double;
        @in cx: double;
        @in cy: double;
        @in cz: double;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_gfx_map_rotate_3d(Eo *obj, double dx, double dy, double dz, double cx, double cy, double cz);
</code>

===== Parameters =====

  * **dx** //(in)// - %%Rotation in degrees around X axis (0 to 360).%%
  * **dy** //(in)// - %%Rotation in degrees around Y axis (0 to 360).%%
  * **dz** //(in)// - %%Rotation in degrees around Z axis (0 to 360).%%
  * **cx** //(in)// - %%Rotation's center X position.%%
  * **cy** //(in)// - %%Rotation's center Y position.%%
  * **cz** //(in)// - %%Rotation's center Z position.%%

===== Description =====

%%Rotate the map around 3 axes in 3D%%

%%This will rotate not just around the "Z" axis as in evas_map_util_rotate() (which is a convenience call for those only wanting 2D). This will rotate around the X, Y and Z axes. The Z axis points "into" the screen with low values at the screen and higher values further away. The X axis runs from left to right on the screen and the Y axis from top to bottom. Like with evas_map_util_rotate() you provide a center point to rotate around (in 3D).%%
{{page>:docs:efl:user:mixin:efl:gfx:map:method:map_rotate_3d:description&nodate&nolink&nouser}}

===== Implemented by =====

  * **Efl.Gfx.Map.map_rotate_3d**

