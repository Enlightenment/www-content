~~Title: About~~
==== More than a Window Manager ====

Long ago Enlightenment was just a project to make a Window Manager for
X11. It has grown a lot since then to well over 1 million lines of C
code in just the EFL libraries alone, as well as a Window Manager, and a
set of applications. There is a vibrant and active community of
developers and users who work on the code, use it every day and enjoy
their environment.

----

=== Enlightenment ===

{{ :shot-enlightenment.png?nolink&480|Enlightenment Sample screenshot}}

The original reason Enlightenment exists - The Window Manager. From
here everything else spawned. This is really the flagship product,
closely followed by EFL itself. The window manager is a lean, fast,
modular and very extensible window manager for X11 and Linux. It is
classed as a "desktop shell" providing the things you need to operate
your desktop (or laptop), but is not a whole application suite. This
covers launching applications, managing their windows and doing other
system tasks like suspending, reboots, managing files etc.

We are moving towards Wayland as the base display system where
Enlightenment is being worked on to become a full Wayland compositor
on its own. This of course takes time and has its rough edges along
the way, but we are not standing still, and one day will leave X11
behind.

Of course Enlightenment is built on top of EFL, using the libraries we
wrong for it to do its UI as well as to run the entire compositor
itself. This means that any improvements to EFL turn up in the
compositor as well.

Enlightenment also is the Window Manager and Compositor for Tizen due
in part to its efficiency and feature-set.

See our [[about-enlightenment|page about Enlightenment]] for more
details.

----

=== Libraries ===

{{ :efl-core.png?nolink|Core libraries}}

Our libraries are commonly known as EFL (Enlightenment Foundation
Libraries), which include EFL proper as well as Elementary which is a
high-level API layer with widgets and portability foremost in mind.

{{:os-logos.png?nolink |Platform Support}}

We primarily work on Linux, which means that most Linux distributions
and OSs like Tizen should be well supported out of the box. There are
efforts to also work on Windows and Max OS X. There are varying degrees
of completeness here. For windows please see our
[[https://phab.enlightenment.org/w/windows|Windows]] development wiki
page, or see
[[http://http://win-builds.org|Win-Builds]] which ships EFL for
Windows and even uses it for the package updater GUI. For MAC OS X
information, please see our [[https://phab.enlightenment.org/w/osx|OS X]]
development wiki for more information.

Enlightenment libraries already power millions of systems, from mobile
phones to set top boxes, desktops, laptops, game systems and more. It
is only now being recognized for its forward-thinking approaches, as
products and designers want to do more than the boring functional user
experiences of the past. This is where EFL excels.

[[http://www.free.fr|Free.fr]] has shipped millions of set top boxes in
France, powered by EFL. The
[[http://wiki.openmoko.org/wiki/Neo_FreeRunner|Openmoko Freerunner]]
sold thousands of devices with EFL and Enlightenment on them.
[[http://www.yellowdoglinux.com/|Yellow Dog Linux]] for the Sony PS3
ships with Enlightenment as the default. EFL has been used on printers,
netbooks and more. It powers the
[[http://www.samsung.com/us/mobile/wearable-tech|Samsung Galaxy Gear]]
watches, is behind the
[[http://www.samsung.com/in/consumer/mobile-phone/mobile-phone/dual-sim-phone/SM-Z130HZKDINS|Samsung Z1 Phone]]
and the
[[http://www.samsung.com/us/video/4k-suhd-tv|Samsung SUHD Smart TVs]]
that run Tizen. Cameras also use Enlightenment and EFL such as the
[[http://www.samsung.com/uk/discover/camera/find-your-signature-with-samsung-nx1/|Samsung NX1]]
and the
[[http://www.samsung.com/global/nx/nx300m/|Samsung NX300M]] smart
Camera. Also GPS units such as models from
[[https://www.moncoyote.com/|Coyote]] Run EFL on a lean and mean RTOS.
Also Web conference cameras such as
[[https://www.biscotti.com/|Biscotti]] use EFL to do their work.

EFL covers a wide range of domains from IPC to Graphics through to
Audio and even location. Some of the covered domains are:

  * Widgets and UI controls in general
  * Core mainloop and event processing
  * Rendering via scene graph
  * Thumbnailing
  * Video and audio media playback
  * Physics
  * IPC locally and across the internet
  * D-Bus
  * Data structures for C (Lists, Hashes, Trees etc.)
  * Data serialization and de-serialization
  * Image encoding/decoding
  * Data archive handling
  * Freedesktop.org standard support
  * C Object model
  * Compression and encyrption
  * VM bytecode engine and compiler
  * UI data file theme and layout abstraction
  * Device acces and tracking
  * Async I/O
  * Input method handling
  * Easy file handling utilitys
  * Audio playback and recording
  * Avahi handling
  * Framebuffer, Wayland X11, Windows, OSX Cocoa, SDL, PS3, Linux DRM handling

See our [[about-efl|page about EFL]] for more details.

----

=== Applications ===

We also write applications that use EFL. You can take these as
examples of what EFL is able to do and of how to drive it to be useful
for you, but not just that. To be actually useful applications day in
and out.

{{:icon-terminology.png?nolink |}}

== Terminology ==

The first application a hacker really needs all day, every day, is a
terminal emulator. Terminology is not just a simple stripped-down
terminal to get the job barely done. It's bristling with features you
find in the more advanced terminals and then with many found nowhere
else. Tabs, splits, 256 color support, Wallpapers - even animated
ones, Inline display of media (click on a file path to a video and
watch it play inline), link detection, compressed scrollback in RAM,
translucency and a gorgeous look and feel that lets you think of
terminal screens of old.

See [[about-terminology|the Terminology page]] for more details.

{{:icon-rage.png?nolink |}}

== Rage ==

Need a clean and simple video player much like MPlayer? Then look no
further. Not only does it focus on video by not filling your window
with controls and menu bars and what not (simply displaying them
overlayed on mouseover), but it also does thumbnails of the timeline
of a video as well as a live playlist which will show all videos in it
actually running and playing. It has full keyboard and mouse controls
as well as supporting Drag and Drop to add more files to your
playlist. Oh and it also has an audio-only mode to grab album cover
images and cache them.

See [[about-rage|the Rage page]] for more details.

----

=== Media ===

If you want media like offical logos, screenshots etc. please see
[[media|our media page]] for details.
