~~Title: EFL Reference~~
{{page>:develop:api-include:reference:general&nouser&nolink&nodate}}

===== Classes =====

^ Class name ^ Brief description ^
| [[:develop:api:efl:animation:alpha|Efl.Animation.Alpha]] | %%Efl alpha animation class%% |
| [[:develop:api:efl:animation:group:parallel|Efl.Animation.Group.Parallel]] | %%Efl group parallel animation class%% |
| [[:develop:api:efl:animation:group:sequential|Efl.Animation.Group.Sequential]] | %%Efl group sequential animation class%% |
| [[:develop:api:efl:animation:group|Efl.Animation.Group]] | %%Efl group animation abstract class%% |
| [[:develop:api:efl:animation:object:alpha|Efl.Animation.Object.Alpha]] | %%Efl alpha animation object class%% |
| [[:develop:api:efl:animation:object:group:parallel|Efl.Animation.Object.Group.Parallel]] | %%Efl group parallel animation object class%% |
| [[:develop:api:efl:animation:object:group:sequential|Efl.Animation.Object.Group.Sequential]] | %%Efl group sequential animation object class%% |
| [[:develop:api:efl:animation:object:group|Efl.Animation.Object.Group]] | %%Efl group animation object abstract class%% |
| [[:develop:api:efl:animation:object:rotate|Efl.Animation.Object.Rotate]] | %%Efl rotate animation object class%% |
| [[:develop:api:efl:animation:object:scale|Efl.Animation.Object.Scale]] | %%Efl scale animation object class%% |
| [[:develop:api:efl:animation:object:translate|Efl.Animation.Object.Translate]] | %%Efl translate animation object class%% |
| [[:develop:api:efl:animation:object|Efl.Animation.Object]] | %%Efl animation object class%% |
| [[:develop:api:efl:animation:rotate|Efl.Animation.Rotate]] | %%Efl rotate animation class%% |
| [[:develop:api:efl:animation:scale|Efl.Animation.Scale]] | %%Efl scale animation class%% |
| [[:develop:api:efl:animation:translate|Efl.Animation.Translate]] | %%Efl translate animation class%% |
| [[:develop:api:efl:animation|Efl.Animation]] | %%Efl animation class%% |
| [[:develop:api:efl:canvas:group|Efl.Canvas.Group]] | %%A group object is a container of other canvas objects. Its children move along their parent, are often clipped with a common clipper. This is part of the legacy smart object concept.%% |
| [[:develop:api:efl:canvas:image:internal|Efl.Canvas.Image.Internal]] | %%Efl canvas internal image class%% |
| [[:develop:api:efl:canvas:image|Efl.Canvas.Image]] | %%Low-level Image object.%% |
| [[:develop:api:efl:canvas:layout:part_box|Efl.Canvas.Layout.Part_Box]] | %%Represents a Box created as part of a layout.%% |
| [[:develop:api:efl:canvas:layout:part_external|Efl.Canvas.Layout.Part_External]] | %%Class representing an external part in Edje layouts.%% |
| [[:develop:api:efl:canvas:layout:part_swallow|Efl.Canvas.Layout.Part_Swallow]] | %%Represents a SWALLOW part of an Edje object.%% |
| [[:develop:api:efl:canvas:layout:part_table|Efl.Canvas.Layout.Part_Table]] | %%Represents a Table created as part of a layout.%% |
| [[:develop:api:efl:canvas:layout:part_text|Efl.Canvas.Layout.Part_Text]] | %%Represents a TEXT part of a layout%% |
| [[:develop:api:efl:canvas:layout:part|Efl.Canvas.Layout.Part]] | %%Common class for part proxy objects for %%[[:develop:api:efl:canvas:layout|Efl.Canvas.Layout]]%%.%% |
| [[:develop:api:efl:canvas:layout|Efl.Canvas.Layout]] | %%Edje object class%% |
| [[:develop:api:efl:canvas:object:event:grabber|Efl.Canvas.Object.Event.Grabber]] | %%Low-level rectangle object.%% |
| [[:develop:api:efl:canvas:object|Efl.Canvas.Object]] | %%Efl canvas object abstract class%% |
| [[:develop:api:efl:canvas:polygon|Efl.Canvas.Polygon]] | %%Low-level polygon object%% |
| [[:develop:api:efl:canvas:proxy|Efl.Canvas.Proxy]] | %%Low-level proxy image object.%% |
| [[:develop:api:efl:canvas:rectangle|Efl.Canvas.Rectangle]] | %%Evas canvas rectangle class%% |
| [[:develop:api:efl:canvas:scene3d|Efl.Canvas.Scene3d]] | %%A UI view for EFL Canvas 3D.%% |
| [[:develop:api:efl:canvas:snapshot|Efl.Canvas.Snapshot]] | %%Low-level snapshot image object.%% |
| [[:develop:api:efl:canvas:surface:tbm|Efl.Canvas.Surface.Tbm]] | %%Native Tizen Buffer Manager surface for Efl canvas%% |
| [[:develop:api:efl:canvas:surface:wayland|Efl.Canvas.Surface.Wayland]] | %%Native Wayland surface for Efl canvas%% |
| [[:develop:api:efl:canvas:surface:x11|Efl.Canvas.Surface.X11]] | %%Native X11 surface for Efl canvas%% |
| [[:develop:api:efl:canvas:text|Efl.Canvas.Text]] | %%Efl canvas text class%% |
| [[:develop:api:efl:canvas:vg|Efl.Canvas.Vg]] | %%Efl vector graphics class%% |
| [[:develop:api:efl:canvas:video|Efl.Canvas.Video]] | %%Efl canvas video class%% |
| [[:develop:api:efl:class|Efl.Class]] | %%Abstract Efl class%% |
| [[:develop:api:efl:config:global|Efl.Config.Global]] | %%This class is a singleton representing the global configuration for the running application.%% |
| [[:develop:api:efl:gesture:long_tap|Efl.Gesture.Long_Tap]] | %%EFL Gesture Long Tap class%% |
| [[:develop:api:efl:gesture:manager|Efl.Gesture.Manager]] | %%EFL Gesture Manager class%% |
| [[:develop:api:efl:gesture:recognizer_long_tap|Efl.Gesture.Recognizer_Long_Tap]] | %%EFL Gesture Recognizer Long Tap class%% |
| [[:develop:api:efl:gesture:recognizer_tap|Efl.Gesture.Recognizer_Tap]] | %%EFL Gesture Recognizer Tap class%% |
| [[:develop:api:efl:gesture:recognizer|Efl.Gesture.Recognizer]] | %%EFL Gesture Recognizer abstract class%% |
| [[:develop:api:efl:gesture:tap|Efl.Gesture.Tap]] | %%EFL Gesture Tap class%% |
| [[:develop:api:efl:gesture:touch|Efl.Gesture.Touch]] | %%EFL Gesture Touch class%% |
| [[:develop:api:efl:gesture|Efl.Gesture]] | %%EFL Gesture abstract class%% |
| [[:develop:api:efl:input:device|Efl.Input.Device]] | %%Represents a pointing device, such as a touch finger, a pen or a mouse.%% |
| [[:develop:api:efl:input:focus|Efl.Input.Focus]] | %%Represents a focus event.%% |
| [[:develop:api:efl:input:hold|Efl.Input.Hold]] | %%Event data sent when inputs are put on hold or resumed.%% |
| [[:develop:api:efl:input:key|Efl.Input.Key]] | %%Represents a single key event from a keyboard or similar device.%% |
| [[:develop:api:efl:input:pointer|Efl.Input.Pointer]] | %%Event data carried over with any pointer event (mouse, touch, pen, ...)%% |
| [[:develop:api:efl:interpolator:accelerate|Efl.Interpolator.Accelerate]] | %%Efl accelerate interpolator class%% |
| [[:develop:api:efl:interpolator:bounce|Efl.Interpolator.Bounce]] | %%Efl bounce interpolator class%% |
| [[:develop:api:efl:interpolator:cubic_bezier|Efl.Interpolator.Cubic_Bezier]] | %%Efl cubic_bezier interpolator class%% |
| [[:develop:api:efl:interpolator:decelerate|Efl.Interpolator.Decelerate]] | %%Efl decelerate interpolator class%% |
| [[:develop:api:efl:interpolator:divisor|Efl.Interpolator.Divisor]] | %%Efl divisor interpolator class%% |
| [[:develop:api:efl:interpolator:linear|Efl.Interpolator.Linear]] | %%Efl linear interpolator class%% |
| [[:develop:api:efl:interpolator:sinusoidal|Efl.Interpolator.Sinusoidal]] | %%Efl sinusoidal interpolator class%% |
| [[:develop:api:efl:interpolator:spring|Efl.Interpolator.Spring]] | %%Efl spring interpolator class%% |
| [[:develop:api:efl:interpolator|Efl.Interpolator]] | %%Efl interpolator class%% |
| [[:develop:api:efl:io:buffered_stream|Efl.Io.Buffered_Stream]] | %%A wrapper object offering an easy to use, buffered streams over existing I/O class.%% |
| [[:develop:api:efl:io:buffer|Efl.Io.Buffer]] | %%Generic In-memory buffer of data to be used as I/O.%% |
| [[:develop:api:efl:io:copier|Efl.Io.Copier]] | %%Copy from an %%[[:develop:api:efl:io:reader|Efl.Io.Reader]]%% source to %%[[:develop:api:efl:io:writer|Efl.Io.Writer]]%% destination.%% |
| [[:develop:api:efl:io:file|Efl.Io.File]] | %%File access (open, close, read, write, lseek, ftruncate)%% |
| [[:develop:api:efl:io:manager|Efl.Io.Manager]] | %%Class representing an asynchronous file operation.%% |
| [[:develop:api:efl:io:queue|Efl.Io.Queue]] | %%Generic In-memory queue of data to be used as I/O.%% |
| [[:develop:api:efl:io:stderr|Efl.Io.Stderr]] | %%Application's standard error (stderr).%% |
| [[:develop:api:efl:io:stdin|Efl.Io.Stdin]] | %%Application's standard input (stdin).%% |
| [[:develop:api:efl:io:stdout|Efl.Io.Stdout]] | %%Application's standard output (stdout).%% |
| [[:develop:api:efl:loop:fd|Efl.Loop.Fd]] | %%Fds are objects that what the activity on a given file descriptor. This file descriptor can be a network, a file, provided by a library.%% |
| [[:develop:api:efl:loop:timer|Efl.Loop.Timer]] | %%Timers are objects that will call a given callback at some point in the future and repeat that tick at a given interval.%% |
| [[:develop:api:efl:loop_user|Efl.Loop_User]] | %%An Efl.Loop_User is a class that require one of the parent to provide an Efl.Loop interface when doing provider_find. It will enforce this by only allowing parent that provide such interface or NULL.%% |
| [[:develop:api:efl:loop|Efl.Loop]] | %%The Efl Main Loop%% |
| [[:develop:api:efl:model:composite:boolean:children|Efl.Model.Composite.Boolean.Children]] | %%Efl model composite boolean children class%% |
| [[:develop:api:efl:model:composite:boolean|Efl.Model.Composite.Boolean]] | %%Efl model composite boolean class%% |
| [[:develop:api:efl:model:composite:selection:children|Efl.Model.Composite.Selection.Children]] | %%Efl model composite selection children class%% |
| [[:develop:api:efl:model:composite:selection|Efl.Model.Composite.Selection]] | %%Efl model composite selection class%% |
| [[:develop:api:efl:model:container:item|Efl.Model.Container.Item]] | %%Used as a child of %%[[:develop:api:efl:model:container|Efl.Model.Container]]%%.%% |
| [[:develop:api:efl:model:container|Efl.Model.Container]] | %%Class used to create data models from Eina containers.%% |
| [[:develop:api:efl:model:item|Efl.Model.Item]] | %%Generic model that allows any property to be manually set. Also children of the same type can be added and deleted.%% |
| [[:develop:api:efl:net:control:access_point|Efl.Net.Control.Access_Point]] | %%An access point for network connectivity.%% |
| [[:develop:api:efl:net:control:technology|Efl.Net.Control.Technology]] | %%A technology that enables network access points to be controlled.%% |
| [[:develop:api:efl:net:control|Efl.Net.Control]] | %%Controls network connectivity.%% |
| [[:develop:api:efl:net:dialer:http|Efl.Net.Dialer.Http]] | %%HTTP Dialer (Client).%% |
| [[:develop:api:efl:net:dialer:simple|Efl.Net.Dialer.Simple]] | %%Connects to a remote server offering an easy to use, buffered I/O.%% |
| [[:develop:api:efl:net:dialer:ssl|Efl.Net.Dialer.Ssl]] | %%Connects to a remote SSL server using TCP.%% |
| [[:develop:api:efl:net:dialer:tcp|Efl.Net.Dialer.Tcp]] | %%Connects to a remote TCP server.%% |
| [[:develop:api:efl:net:dialer:udp|Efl.Net.Dialer.Udp]] | %%Connects to a remote UDP server.%% |
| [[:develop:api:efl:net:dialer:unix|Efl.Net.Dialer.Unix]] | %%Connects to a local AF_UNIX server.%% |
| [[:develop:api:efl:net:dialer:websocket|Efl.Net.Dialer.Websocket]] | %%WebSocket Dialer (Client).%% |
| [[:develop:api:efl:net:dialer:windows|Efl.Net.Dialer.Windows]] | %%Connects to a Windows NamedPipe server.%% |
| [[:develop:api:efl:net:ip_address|Efl.Net.Ip_Address]] | %%An Internet Protocol (IP) Address.%% |
| [[:develop:api:efl:net:server:fd|Efl.Net.Server.Fd]] | %%A generic server based on file descriptors.%% |
| [[:develop:api:efl:net:server:ip|Efl.Net.Server.Ip]] | %%An IP server.%% |
| [[:develop:api:efl:net:server:simple|Efl.Net.Server.Simple]] | %%A network server wrapper that creates clients based on %%[[:develop:api:efl:net:socket:simple|Efl.Net.Socket.Simple]]%%.%% |
| [[:develop:api:efl:net:server:ssl|Efl.Net.Server.Ssl]] | %%A SSL server over TCP.%% |
| [[:develop:api:efl:net:server:tcp|Efl.Net.Server.Tcp]] | %%A TCP server.%% |
| [[:develop:api:efl:net:server:udp:client|Efl.Net.Server.Udp.Client]] | %%A UDP client child of Efl.Net.Server.Udp%% |
| [[:develop:api:efl:net:server:udp|Efl.Net.Server.Udp]] | %%A UDP server.%% |
| [[:develop:api:efl:net:server:unix|Efl.Net.Server.Unix]] | %%An AF_UNIX server.%% |
| [[:develop:api:efl:net:server:windows|Efl.Net.Server.Windows]] | %%A Windows NamedPipe server.%% |
| [[:develop:api:efl:net:session|Efl.Net.Session]] | %%Used by application to request network connectivity.%% |
| [[:develop:api:efl:net:socket:fd|Efl.Net.Socket.Fd]] | %%A base implementation for sockets over filedescriptors (fd)%% |
| [[:develop:api:efl:net:socket:simple|Efl.Net.Socket.Simple]] | %%A wrapper socket offering an easy to use, buffered I/O.%% |
| [[:develop:api:efl:net:socket:ssl|Efl.Net.Socket.Ssl]] | %%A wrapper socket doing SSL (Secure Sockets Layer).%% |
| [[:develop:api:efl:net:socket:tcp|Efl.Net.Socket.Tcp]] | %%A base TCP socket.%% |
| [[:develop:api:efl:net:socket:udp|Efl.Net.Socket.Udp]] | %%A base UDP socket.%% |
| [[:develop:api:efl:net:socket:unix|Efl.Net.Socket.Unix]] | %%A base UNIX socket.%% |
| [[:develop:api:efl:net:socket:windows|Efl.Net.Socket.Windows]] | %%A base Windows NamedPipe socket.%% |
| [[:develop:api:efl:net:ssl:context|Efl.Net.Ssl.Context]] | %%A SSL Context that is used to start a SSL socket wrapper.%% |
| [[:develop:api:efl:object:override|Efl.Object.Override]] | %%A special class to pass to #eo_super() when using #eo_override()%% |
| [[:develop:api:efl:object|Efl.Object]] | %%Abstract Efl object class%% |
| [[:develop:api:efl:observable|Efl.Observable]] | %%Efl observable class%% |
| [[:develop:api:efl:promise|Efl.Promise]] | %%Efl promise class%% |
| [[:develop:api:efl:text:markup_util|Efl.Text.Markup_Util]] | %%Utility class for markup, such as conversions%% |
| [[:develop:api:efl:ui:bg|Efl.Ui.Bg]] | %%The bg (background) widget is used for setting (solid) background decorations%% |
| [[:develop:api:efl:ui:box_flow|Efl.Ui.Box_Flow]] | %%A custom layout engine for %%[[:develop:api:efl:ui:box|Efl.Ui.Box]]%%.%% |
| [[:develop:api:efl:ui:box_stack|Efl.Ui.Box_Stack]] | %%A custom layout engine for %%[[:develop:api:efl:ui:box|Efl.Ui.Box]]%% that stacks items.%% |
| [[:develop:api:efl:ui:box|Efl.Ui.Box]] | %%The box widget.%% |
| [[:develop:api:efl:ui:button:part|Efl.Ui.Button.Part]] | %%Elementary button internal part class%% |
| [[:develop:api:efl:ui:button|Efl.Ui.Button]] | %%Push-button widget%% |
| [[:develop:api:efl:ui:calendar:item|Efl.Ui.Calendar.Item]] | %%EFL UI Calendar Item class%% |
| [[:develop:api:efl:ui:calendar|Efl.Ui.Calendar]] | %%Calendar widget%% |
| [[:develop:api:efl:ui:check|Efl.Ui.Check]] | %%Check widget%% |
| [[:develop:api:efl:ui:clock|Efl.Ui.Clock]] | %%Efl UI clock class%% |
| [[:develop:api:efl:ui:flip:part|Efl.Ui.Flip.Part]] | %%Efl UI flip internal class%% |
| [[:develop:api:efl:ui:flip|Efl.Ui.Flip]] | %%Efl UI flip class%% |
| [[:develop:api:efl:ui:focus:composition:adapter|Efl.Ui.Focus.Composition.Adapter]] | %%EFL UI Focus Composition Adapter class%% |
| [[:develop:api:efl:ui:focus:manager:calc|Efl.Ui.Focus.Manager.Calc]] | %%Calculates the directions of Efl.Ui.Focus.Direction%% |
| [[:develop:api:efl:ui:focus:manager:root_focus|Efl.Ui.Focus.Manager.Root_Focus]] | %%This class ensures that the root is at least focusable, if nothing else is focusable%% |
| [[:develop:api:efl:ui:focus:parent_provider:gen|Efl.Ui.Focus.Parent_Provider.Gen]] | %%EFL UI Focus Parent Provider Gen class%% |
| [[:develop:api:efl:ui:focus:parent_provider:standard|Efl.Ui.Focus.Parent_Provider.Standard]] | %%EFL UI Focus Parent Provider Standard Class%% |
| [[:develop:api:efl:ui:focus:rectangle|Efl.Ui.Focus.Rectangle]] | %%EFL UI Focus Rectangle class%% |
| [[:develop:api:efl:ui:focus:util|Efl.Ui.Focus.Util]] | %%EFL UI Focus Util class%% |
| [[:develop:api:efl:ui:frame|Efl.Ui.Frame]] | %%Frame widget%% |
| [[:develop:api:efl:ui:grid_static|Efl.Ui.Grid_Static]] | %%Efl UI grid static class%% |
| [[:develop:api:efl:ui:grid|Efl.Ui.Grid]] | %%Efl UI grid class%% |
| [[:develop:api:efl:ui:image:factory|Efl.Ui.Image.Factory]] | %%Efl UI image factory class%% |
| [[:develop:api:efl:ui:image_zoomable_pan|Efl.Ui.Image_Zoomable_Pan]] | %%Elementary photocom pan class%% |
| [[:develop:api:efl:ui:image_zoomable|Efl.Ui.Image_Zoomable]] | %%Elementary Image Zoomable class%% |
| [[:develop:api:efl:ui:image|Efl.Ui.Image]] | %%Efl UI image class%% |
| [[:develop:api:efl:ui:internal:text:interactive|Efl.Ui.Internal.Text.Interactive]] | %%An internal object that is in charge of the interactive aspect of the text widget%% |
| [[:develop:api:efl:ui:layout:part:box|Efl.Ui.Layout.Part.Box]] | %%Represents a Box created as part of a layout.%% |
| [[:develop:api:efl:ui:layout:part:table|Efl.Ui.Layout.Part.Table]] | %%Represents a Table created as part of a layout.%% |
| [[:develop:api:efl:ui:layout:part_bg|Efl.Ui.Layout.Part_Bg]] | %%Elementary layout internal part background class%% |
| [[:develop:api:efl:ui:layout:part_content|Efl.Ui.Layout.Part_Content]] | %%Elementary layout internal part class%% |
| [[:develop:api:efl:ui:layout:part_legacy|Efl.Ui.Layout.Part_Legacy]] | %%Elementary layout internal part class%% |
| [[:develop:api:efl:ui:layout:part_text|Efl.Ui.Layout.Part_Text]] | %%Elementary layout internal part class%% |
| [[:develop:api:efl:ui:layout:part|Efl.Ui.Layout.Part]] | %%Elementary layout internal part class%% |
| [[:develop:api:efl:ui:layout|Efl.Ui.Layout]] | %%Elementary layout class%% |
| [[:develop:api:efl:ui:multibuttonentry:part|Efl.Ui.Multibuttonentry.Part]] | %%Elementary multibuttonentry internal part class%% |
| [[:develop:api:efl:ui:multibuttonentry|Efl.Ui.Multibuttonentry]] | %%Elementary multibuttonentry class%% |
| [[:develop:api:efl:ui:nstate|Efl.Ui.Nstate]] | %%Efl UI nstate class%% |
| [[:develop:api:efl:ui:panes:part|Efl.Ui.Panes.Part]] | %%Elementary Panes internal part class%% |
| [[:develop:api:efl:ui:panes|Efl.Ui.Panes]] | %%Elementary panes class%% |
| [[:develop:api:efl:ui:popup:part|Efl.Ui.Popup.Part]] | %%Efl UI Popup internal part class%% |
| [[:develop:api:efl:ui:popup_alert:part|Efl.Ui.Popup_Alert.Part]] | %%Efl UI Popup Alert internal part class%% |
| [[:develop:api:efl:ui:popup_alert_scroll:part|Efl.Ui.Popup_Alert_Scroll.Part]] | %%Efl UI Popup Alert Scroll internal part class%% |
| [[:develop:api:efl:ui:popup_alert_scroll|Efl.Ui.Popup_Alert_Scroll]] | %%EFL UI Popup Alert Scroll class%% |
| [[:develop:api:efl:ui:popup_alert_text:part|Efl.Ui.Popup_Alert_Text.Part]] | %%Efl UI Popup Alert Text internal part class%% |
| [[:develop:api:efl:ui:popup_alert_text|Efl.Ui.Popup_Alert_Text]] | %%EFL UI Popup Alert Text class%% |
| [[:develop:api:efl:ui:popup_alert|Efl.Ui.Popup_Alert]] | %%EFL UI Popup Alert class%% |
| [[:develop:api:efl:ui:popup_anchor|Efl.Ui.Popup_Anchor]] | %%EFL UI Popup Anchor class%% |
| [[:develop:api:efl:ui:popup|Efl.Ui.Popup]] | %%EFL UI popup class%% |
| [[:develop:api:efl:ui:progressbar:part|Efl.Ui.Progressbar.Part]] | %%Elementary progressbar internal part class%% |
| [[:develop:api:efl:ui:progressbar|Efl.Ui.Progressbar]] | %%Elementary progressbar class%% |
| [[:develop:api:efl:ui:radio|Efl.Ui.Radio]] | %%Elementary radio class%% |
| [[:develop:api:efl:ui:slider:part_indicator|Efl.Ui.Slider.Part_Indicator]] | %%Elementary slider internal part class%% |
| [[:develop:api:efl:ui:slider_interval|Efl.Ui.Slider_Interval]] | %%An interval slider.%% |
| [[:develop:api:efl:ui:slider|Efl.Ui.Slider]] | %%Elementary slider class%% |
| [[:develop:api:efl:ui:spin_button|Efl.Ui.Spin_Button]] | %%A Button Spin.%% |
| [[:develop:api:efl:ui:spin|Efl.Ui.Spin]] | %%A Spin.%% |
| [[:develop:api:efl:ui:text:editable|Efl.Ui.Text.Editable]] | %%Efl UI text editable class%% |
| [[:develop:api:efl:ui:text_async|Efl.Ui.Text_Async]] | %%Efl UI text async class%% |
| [[:develop:api:efl:ui:textpath:part|Efl.Ui.Textpath.Part]] | %%Efl UI Textpath internal part class%% |
| [[:develop:api:efl:ui:textpath|Efl.Ui.Textpath]] | %%Efl Ui Textpath class%% |
| [[:develop:api:efl:ui:text|Efl.Ui.Text]] | %%Efl UI text class%% |
| [[:develop:api:efl:ui:video|Efl.Ui.Video]] | %%Efl UI video class%% |
| [[:develop:api:efl:ui:widget:part_bg|Efl.Ui.Widget.Part_Bg]] | %%Elementary widget internal part background class%% |
| [[:develop:api:efl:ui:widget:part|Efl.Ui.Widget.Part]] | %%This is the base class for all "Part" handles in Efl.Ui widgets.%% |
| [[:develop:api:efl:ui:win:part|Efl.Ui.Win.Part]] | %%Efl UI window interal part class%% |
| [[:develop:api:efl:ui:win_inlined|Efl.Ui.Win_Inlined]] | %%An inlined window.%% |
| [[:develop:api:efl:ui:win_socket|Efl.Ui.Win_Socket]] | %%An off-screen window to be displayed in a remote process.%% |
| [[:develop:api:efl:ui:win|Efl.Ui.Win]] | %%Efl UI window class%% |
| [[:develop:api:efl:vg:container|Efl.VG.Container]] | %%Efl vector graphics container class%% |
| [[:develop:api:efl:vg:gradient:linear|Efl.VG.Gradient.Linear]] | %%Efl vector graphics gradient linear class%% |
| [[:develop:api:efl:vg:gradient:radial|Efl.VG.Gradient.Radial]] | %%Efl vector graphics gradient radial class%% |
| [[:develop:api:efl:vg:gradient|Efl.VG.Gradient]] | %%Efl vectopr graphics gradient abstract class%% |
| [[:develop:api:efl:vg:shape|Efl.VG.Shape]] | %%Efl vector graphics shape class%% |
| [[:develop:api:efl:vg|Efl.VG]] | %%Efl vector graphics abstract class%% |
| [[:develop:api:efl:vpath:core|Efl.Vpath.Core]] | %%Core EFL implementation of a Vpath system%% |
| [[:develop:api:efl:vpath:file:core|Efl.Vpath.File.Core]] | %%Core EFL implementation of a Vpath File%% |
| [[:develop:api:efl:vpath:file|Efl.Vpath.File]] | %%VPath File is an actual representation of a downloaded/mapped vpath file%% |
| [[:develop:api:efl:vpath:manager|Efl.Vpath.Manager]] | %%Vpath Manager manages multiple VPath objects that remap/download%% |

===== Interfaces =====

^ Interface name ^ Brief description ^
| [[:develop:api:efl:access:editable:text|Efl.Access.Editable.Text]] | %%Elementary editable text interface%% |
| [[:develop:api:efl:access:selection|Efl.Access.Selection]] | %%Elementary access selection interface%% |
| [[:develop:api:efl:access:text|Efl.Access.Text]] | %%Elementary accessible text interface%% |
| [[:develop:api:efl:access:value|Efl.Access.Value]] | %%Elementary Access value interface%% |
| [[:develop:api:efl:access:window|Efl.Access.Window]] | %%Elementary accessible window interface%% |
| [[:develop:api:efl:animator|Efl.Animator]] | %%Efl animator interface%% |
| [[:develop:api:efl:canvas:pointer|Efl.Canvas.Pointer]] | %%Efl Canvas Pointer interface%% |
| [[:develop:api:efl:canvas|Efl.Canvas]] | %%Common interface for window and some internal classes in EFL.%% |
| [[:develop:api:efl:config|Efl.Config]] | %%A generic configuration interface, that holds key-value pairs.%% |
| [[:develop:api:efl:container|Efl.Container]] | %%Common interface for objects that have multiple contents (sub objects).%% |
| [[:develop:api:efl:content|Efl.Content]] | %%Common interface for objects that have a (single) content.%% |
| [[:develop:api:efl:control|Efl.Control]] | %%Efl control interface%% |
| [[:develop:api:efl:duplicate|Efl.Duplicate]] | %%An interface for duplication of objects.%% |
| [[:develop:api:efl:flipable|Efl.Flipable]] | %%Efl flipable interface%% |
| [[:develop:api:efl:gfx:buffer|Efl.Gfx.Buffer]] | %%Common APIs for all objects representing images and 2D pixel buffers.%% |
| [[:develop:api:efl:gfx:color_class|Efl.Gfx.Color_Class]] | %%Efl Gfx Color Class interface%% |
| [[:develop:api:efl:gfx:fill|Efl.Gfx.Fill]] | %%Efl graphics fill interface%% |
| [[:develop:api:efl:gfx:filter|Efl.Gfx.Filter]] | %%Graphical filters can be applied to any object implementing this interface.%% |
| [[:develop:api:efl:gfx:gradient:linear|Efl.Gfx.Gradient.Linear]] | %%Efl graphics gradient linear interface%% |
| [[:develop:api:efl:gfx:gradient:radial|Efl.Gfx.Gradient.Radial]] | %%Efl graphics gradient radial interface%% |
| [[:develop:api:efl:gfx:gradient|Efl.Gfx.Gradient]] | %%Efl graphics gradient interface%% |
| [[:develop:api:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] | %%Efl graphics size hint interface%% |
| [[:develop:api:efl:gfx:size_class|Efl.Gfx.Size_Class]] | %%Efl Gfx Size Class interface%% |
| [[:develop:api:efl:gfx:stack|Efl.Gfx.Stack]] | %%Efl graphics stack interface%% |
| [[:develop:api:efl:gfx:text_class|Efl.Gfx.Text_Class]] | %%Efl Gfx Text Class interface%% |
| [[:develop:api:efl:gfx:view|Efl.Gfx.View]] | %%Efl graphics view interface%% |
| [[:develop:api:efl:gfx|Efl.Gfx]] | %%Efl graphics interface%% |
| [[:develop:api:efl:image:animated|Efl.Image.Animated]] | %%Efl animated image interface%% |
| [[:develop:api:efl:image:load|Efl.Image.Load]] | %%Common APIs for all loadable 2D images.%% |
| [[:develop:api:efl:image|Efl.Image]] | %%Common APIs for all 2D images that can be rendered on the canvas.%% |
| [[:develop:api:efl:input:interface|Efl.Input.Interface]] | %%An object implementing this interface can send pointer events.%% |
| [[:develop:api:efl:input:state|Efl.Input.State]] | %%Efl input state interface%% |
| [[:develop:api:efl:interface|Efl.Interface]] | %%An interface for other interfaces to inherit from. This is useful when you want to create interfaces and mixins that expose functions from a normal class, like for example %%[[:develop:api:efl:object:method:constructor|Efl.Object.constructor]]%%.%% |
| [[:develop:api:efl:io:reader|Efl.Io.Reader]] | %%Generic interface for objects that can read data into a provided memory.%% |
| [[:develop:api:efl:io:writer|Efl.Io.Writer]] | %%Generic interface for objects that can write data from a provided memory.%% |
| [[:develop:api:efl:layout:calc|Efl.Layout.Calc]] | %%This interface defines a common set of APIs used to trigger calculations with layout objects.%% |
| [[:develop:api:efl:layout:group|Efl.Layout.Group]] | %%APIs representing static data from a group in an edje file.%% |
| [[:develop:api:efl:layout:signal|Efl.Layout.Signal]] | %%Layouts asynchronous messaging and signaling interface.%% |
| [[:develop:api:efl:model|Efl.Model]] | %%Efl model interface%% |
| [[:develop:api:efl:net:dialer|Efl.Net.Dialer]] | %%Creates a client socket to reach a remote peer.%% |
| [[:develop:api:efl:net:server|Efl.Net.Server]] | %%The basic server interface.%% |
| [[:develop:api:efl:net:socket|Efl.Net.Socket]] | %%The basic socket interface.%% |
| [[:develop:api:efl:observer|Efl.Observer]] | %%Efl observer interface%% |
| [[:develop:api:efl:orientation|Efl.Orientation]] | %%Efl orientation interface%% |
| [[:develop:api:efl:pack:grid|Efl.Pack.Grid]] | %%2D containers aligned on a grid with rows and columns%% |
| [[:develop:api:efl:pack:layout|Efl.Pack.Layout]] | %%Low-level APIs for object that can lay their children out.%% |
| [[:develop:api:efl:pack:linear|Efl.Pack.Linear]] | %%API for containers%% |
| [[:develop:api:efl:pack|Efl.Pack]] | %%API common to all UI container objects.%% |
| [[:develop:api:efl:part|Efl.Part]] | %%Interface for objects supporting named parts.%% |
| [[:develop:api:efl:player|Efl.Player]] | %%Efl media player interface%% |
| [[:develop:api:efl:screen|Efl.Screen]] | %%Efl screen interface%% |
| [[:develop:api:efl:text:annotate|Efl.Text.Annotate]] | %%Cursor API%% |
| [[:develop:api:efl:text:cursor|Efl.Text.Cursor]] | %%Cursor API%% |
| [[:develop:api:efl:text:font|Efl.Text.Font]] | %%Font settings of the text%% |
| [[:develop:api:efl:text:format|Efl.Text.Format]] | %%The look and layout of the text%% |
| [[:develop:api:efl:text:markup|Efl.Text.Markup]] | %%Markup data that populates the text object's style and format%% |
| [[:develop:api:efl:text:properties|Efl.Text.Properties]] | %%Efl text properties interface%% |
| [[:develop:api:efl:text:style|Efl.Text.Style]] | %%Style to apply to the text%% |
| [[:develop:api:efl:text|Efl.Text]] | %%Efl text interface%% |
| [[:develop:api:efl:ui:autorepeat|Efl.Ui.Autorepeat]] | %%Efl UI autorepeat interface%% |
| [[:develop:api:efl:ui:base|Efl.Ui.Base]] | %%A common interface for UI objects.%% |
| [[:develop:api:efl:ui:clickable|Efl.Ui.Clickable]] | %%Efl UI clickable interface%% |
| [[:develop:api:efl:ui:cursor|Efl.Ui.Cursor]] | %%An interface to define mouse cursors to use when hovering over UI widgets.%% |
| [[:develop:api:efl:ui:direction|Efl.Ui.Direction]] | %%EFL UI object direction interface%% |
| [[:develop:api:efl:ui:draggable|Efl.Ui.Draggable]] | %%Efl UI draggable interface%% |
| [[:develop:api:efl:ui:drag|Efl.Ui.Drag]] | %%Common interface for draggable objects and parts.%% |
| [[:develop:api:efl:ui:factory|Efl.Ui.Factory]] | %%Efl UI factory interface%% |
| [[:develop:api:efl:ui:focus:manager|Efl.Ui.Focus.Manager]] | %%Calculates the directions of Efl.Ui.Focus.Direction%% |
| [[:develop:api:efl:ui:focus:parent_provider|Efl.Ui.Focus.Parent_Provider]] | %%EFL UI Focus Parent Provider interface%% |
| [[:develop:api:efl:ui:focus:user|Efl.Ui.Focus.User]] | %%Interface which is used to handle the manager of a user.%% |
| [[:develop:api:efl:ui:item|Efl.Ui.Item]] | %%Efl UI item interface%% |
| [[:develop:api:efl:ui:menu|Efl.Ui.Menu]] | %%Efl UI menu interface%% |
| [[:develop:api:efl:ui:model:connect|Efl.Ui.Model.Connect]] | %%Efl UI model connect interface%% |
| [[:develop:api:efl:ui:model:factory:connect|Efl.Ui.Model.Factory.Connect]] | %%Efl UI model factory interface%% |
| [[:develop:api:efl:ui:range|Efl.Ui.Range]] | %%Efl UI progress interface%% |
| [[:develop:api:efl:ui:scrollable|Efl.Ui.Scrollable]] | %%Efl UI scrollable interface%% |
| [[:develop:api:efl:ui:selectable|Efl.Ui.Selectable]] | %%Efl UI selectable interface%% |
| [[:develop:api:efl:ui:text:interactive|Efl.Ui.Text.Interactive]] | %%This is an interface interactive text inputs should implement%% |
| [[:develop:api:efl:ui:translatable|Efl.Ui.Translatable]] | %%Interface for all translatable text APIs.%% |
| [[:develop:api:efl:ui:view|Efl.Ui.View]] | %%Efl UI view interface%% |
| [[:develop:api:efl:ui:zoom|Efl.Ui.Zoom]] | %%Efl UI zoom interface%% |
| [[:develop:api:efl:vpath|Efl.Vpath]] | %%VPath is the EFL "Virtual Path" system that maps paths and downloads%% |

===== Mixins =====

^ Mixin name ^ Brief description ^
| [[:develop:api:efl:access:action|Efl.Access.Action]] | %%Accessible action mixin%% |
| [[:develop:api:efl:access:component|Efl.Access.Component]] | %%AT-SPI component mixin%% |
| [[:develop:api:efl:access:image|Efl.Access.Image]] | %%Accessible image mixin%% |
| [[:develop:api:efl:access:widget:action|Efl.Access.Widget.Action]] | %%Access widget action mixin%% |
| [[:develop:api:efl:access|Efl.Access]] | %%Accessibility accessible mixin%% |
| [[:develop:api:efl:canvas:filter:internal|Efl.Canvas.Filter.Internal]] | %%Evas internal implementation of filters.%% |
| [[:develop:api:efl:canvas:surface|Efl.Canvas.Surface]] | %%Native surfaces usually bound to an externally-managed buffer.%% |
| [[:develop:api:efl:file|Efl.File]] | %%Efl file interface%% |
| [[:develop:api:efl:gfx:map|Efl.Gfx.Map]] | %%Texture UV mapping for all objects (rotation, perspective, 3d, ...).%% |
| [[:develop:api:efl:gfx:path|Efl.Gfx.Path]] | %%EFL graphics path object interface%% |
| [[:develop:api:efl:gfx:shape|Efl.Gfx.Shape]] | %%EFL graphics shape object interface%% |
| [[:develop:api:efl:input:event|Efl.Input.Event]] | %%Represents a generic event data.%% |
| [[:develop:api:efl:io:closer:fd|Efl.Io.Closer.Fd]] | %%Close fd using close(2).%% |
| [[:develop:api:efl:io:closer|Efl.Io.Closer]] | %%Generic interface for objects that can close themselves.%% |
| [[:develop:api:efl:io:positioner:fd|Efl.Io.Positioner.Fd]] | %%Positions fd using lseek(2).%% |
| [[:develop:api:efl:io:positioner|Efl.Io.Positioner]] | %%Generic interface for objects that can change or report position.%% |
| [[:develop:api:efl:io:reader:fd|Efl.Io.Reader.Fd]] | %%Reads fd using read(2).%% |
| [[:develop:api:efl:io:sizer:fd|Efl.Io.Sizer.Fd]] | %%Resizes fd usign ftruncate(2).%% |
| [[:develop:api:efl:io:sizer|Efl.Io.Sizer]] | %%Generic interface for objects that can resize or report size of themselves.%% |
| [[:develop:api:efl:io:writer:fd|Efl.Io.Writer.Fd]] | %%Writes fd using write(2).%% |
| [[:develop:api:efl:ui:focus:composition|Efl.Ui.Focus.Composition]] | %%This defines the inheriting widget as Composition widget.%% |
| [[:develop:api:efl:ui:focus:layer|Efl.Ui.Focus.Layer]] | %%This defines the inheriting widget as focus layer%% |
| [[:develop:api:efl:ui:focus:manager:sub|Efl.Ui.Focus.Manager.Sub]] | %%A class that automatically registeres its border elements in the parent manager%% |
| [[:develop:api:efl:ui:focus:object|Efl.Ui.Focus.Object]] | %%Functions of focusable objects.%% |
| [[:develop:api:efl:ui:format|Efl.Ui.Format]] | %%interface class for format_func%% |

===== Aliases =====

^ Alias name ^ Brief description ^
| [[:develop:api:efl:access:action_data|Efl.Access.Action_Data]] | %%Internal struct for accesssibility.%% |
| [[:develop:api:efl:access:relation_set|Efl.Access.Relation_Set]] | %%Elementary Accessibility relation set type%% |
| [[:develop:api:efl:access:state_set|Efl.Access.State_Set]] | %%Accessibility object state set.%% |
| [[:develop:api:efl:font:size|Efl.Font.Size]] | %%Efl font size type%% |
| [[:develop:api:efl:signal_cb|Efl.Signal_Cb]] | %%Signal callback.%% |
| [[:develop:api:efl:text:annotate:annotation|Efl.Text.Annotate.Annotation]] | %%EFL text annotations data structure%% |
| [[:develop:api:efl:text:cursor:cursor|Efl.Text.Cursor.Cursor]] | %%Text cursor data structure%% |
| [[:develop:api:efl:ui:format_func_cb|Efl.Ui.Format_Func_Cb]] | %%Function pointer for format function hook%% |
| [[:develop:api:efl:ui:scrollable_on_show_region|Efl.Ui.Scrollable_On_Show_Region]] | %%Function pointer for on show region hook%% |
| [[:develop:api:eina:error|Eina.Error]] | %%Eina error type%% |
| [[:develop:api:eina:unicode|Eina.Unicode]] | %%Eina unicode type%% |

===== Structures =====

^ Struct name ^ Brief description ^
| [[:develop:api:efl:access:attribute|Efl.Access.Attribute]] | %%Accessibility Attribute%% |
| [[:develop:api:efl:access:event:children_changed:data|Efl.Access.Event.Children_Changed.Data]] | %%Accessibility children changed event data%% |
| [[:develop:api:efl:access:event:geometry_changed:data|Efl.Access.Event.Geometry_Changed.Data]] | %%Accessibility geometry changed event data%% |
| [[:develop:api:efl:access:event:handler|Efl.Access.Event.Handler]] | %%Accessibility event listener%% |
| [[:develop:api:efl:access:event:state_changed:data|Efl.Access.Event.State_Changed.Data]] | %%Accessibility state changed event data%% |
| [[:develop:api:efl:access:relation|Efl.Access.Relation]] | %%Accessibility Relation%% |
| [[:develop:api:efl:access:text:attribute|Efl.Access.Text.Attribute]] | %%Text attribute%% |
| [[:develop:api:efl:access:text:change_info|Efl.Access.Text.Change_Info]] | %%Text change information%% |
| [[:develop:api:efl:access:text:range|Efl.Access.Text.Range]] | %%Text range%% |
| [[:develop:api:efl:animation:object:running_event_info|Efl.Animation.Object.Running_Event_Info]] | %%Information of running event%% |
| [[:develop:api:efl:canvas:filter:state_name|Efl.Canvas.Filter.State_Name]] | %%Filter state name structure%% |
| [[:develop:api:efl:canvas:filter:state_text|Efl.Canvas.Filter.State_Text]] | %%Filter state text structure%% |
| [[:develop:api:efl:canvas:filter:state|Efl.Canvas.Filter.State]] | %%Internal structure representing the state of a Gfx Filter%% |
| [[:develop:api:efl:canvas:surface:x11_pixmap|Efl.Canvas.Surface.X11_Pixmap]] | %%The type used by %%[[:develop:api:efl:canvas:surface:property:native_buffer|Efl.Canvas.Surface.native_buffer]]%%.%% |
| [[:develop:api:efl:canvas:text:style|Efl.Canvas.Text.Style]] | %%EFL text style data structure%% |
| [[:develop:api:efl:event:animator_tick|Efl.Event.Animator_Tick]] | %%EFL event animator tick data structure%% |
| [[:develop:api:efl:event:description|Efl.Event.Description]] | %%This struct holds the description of a specific event.%% |
| [[:develop:api:efl:event|Efl.Event]] | %%A parameter passed in event callbacks holding extra event parameters.%% |
| [[:develop:api:efl:gfx:color32|Efl.Gfx.Color32]] | %%32 bit color data structure%% |
| [[:develop:api:efl:gfx:dash|Efl.Gfx.Dash]] | %%Type describing dash. %%''ref''%% efl_gfx_shape_stroke_dash_set()%% |
| [[:develop:api:efl:gfx:event:render_post|Efl.Gfx.Event.Render_Post]] | %%Data sent along a "render,post" event, after a frame has been rendered.%% |
| [[:develop:api:efl:gfx:gradient:stop|Efl.Gfx.Gradient.Stop]] | %%Type defining gradient stops. Describes the location and color of a transition point in a gradient.%% |
| [[:develop:api:efl:gfx:path:change_event|Efl.Gfx.Path.Change_Event]] | No description supplied. |
| [[:develop:api:efl:gfx:shape:public|Efl.Gfx.Shape.Public]] | %%Public shape%% |
| [[:develop:api:efl:gfx:stroke:color|Efl.Gfx.Stroke.Color]] | %%Internal structure for %%[[:develop:api:efl:gfx:stroke|Efl.Gfx.Stroke]]%%.%% |
| [[:develop:api:efl:gfx:stroke|Efl.Gfx.Stroke]] | %%Type defining stroke information. Describes the properties to define the path stroke.%% |
| [[:develop:api:efl:loop:arguments|Efl.Loop.Arguments]] | %%EFL loop arguments data structure%% |
| [[:develop:api:efl:model:property_event|Efl.Model.Property_Event]] | %%EFL model property event data structure%% |
| [[:develop:api:efl:net:control:agent_browser_url|Efl.Net.Control.Agent_Browser_Url]] | %%Reports to agent that it should open a browser at given URL.%% |
| [[:develop:api:efl:net:control:agent_error|Efl.Net.Control.Agent_Error]] | %%Reports error to the agent.%% |
| [[:develop:api:efl:net:control:agent_request_input:information|Efl.Net.Control.Agent_Request_Input.Information]] | %%Name-value information pair provided to the agent.%% |
| [[:develop:api:efl:net:control:agent_request_input|Efl.Net.Control.Agent_Request_Input]] | %%Requests input to the agent.%% |
| [[:develop:api:efl:net:dialer:websocket:closed_reason|Efl.Net.Dialer.Websocket.Closed_Reason]] | %%Close reason event payload.%% |
| [[:develop:api:efl:net:http:header|Efl.Net.Http.Header]] | %%An HTTP Header.%% |
| [[:develop:api:efl:net:ip_address:resolve_results|Efl.Net.Ip_Address.Resolve_Results]] | %%The results of %%[[:develop:api:efl:net:ip_address:method:resolve|Efl.Net.Ip_Address.resolve]]%% call.%% |
| [[:develop:api:efl:observable:tuple|Efl.Observable.Tuple]] | %%This type describes an observable touple%% |
| [[:develop:api:efl:time|Efl.Time]] | %%This type is a alias for struct tm. It is intended to be a standard way to reference it in .eo files.%% |
| [[:develop:api:efl:ui:focus:manager:logical_end_detail|Efl.Ui.Focus.Manager.Logical_End_Detail]] | %%Structure holding the focus object with extra information on logical end%% |
| [[:develop:api:efl:ui:focus:relations|Efl.Ui.Focus.Relations]] | %%Structure holding the graph of relations between focussable objects.%% |
| [[:develop:api:efl:ui:image:error|Efl.Ui.Image.Error]] | %%Structure associated with smart callback 'download,progress'.%% |
| [[:develop:api:efl:ui:image:progress|Efl.Ui.Image.Progress]] | %%Structure associated with smart callback 'download,progress'.%% |
| [[:develop:api:efl:ui:popup_alert:clicked_event|Efl.Ui.Popup_Alert.Clicked_Event]] | %%Information of clicked event%% |
| [[:develop:api:efl:ui:text:change_info|Efl.Ui.Text.Change_Info]] | %%This structure includes all the information about content changes.%% |
| [[:develop:api:efl:ui:widget:focus_state|Efl.Ui.Widget.Focus_State]] | %%All relevant fields needed for the current state of focus registeration%% |
| [[:develop:api:efl:version|Efl.Version]] | %%This type describes the version of EFL with an optional variant.%% |
| [[:develop:api:eina:binbuf|Eina.Binbuf]] | %%Eina binbuf data structure%% |
| [[:develop:api:eina:file:direct:info|Eina.File.Direct.Info]] | %%Eina file direct information data structure%% |
| [[:develop:api:eina:file|Eina.File]] | %%Eina file data structure%% |
| [[:develop:api:eina:future|Eina.Future]] | %%Eina_Future handle%% |
| [[:develop:api:eina:inarray|Eina.Inarray]] | %%Eina inarray data structure%% |
| [[:develop:api:eina:matrix3|Eina.Matrix3]] | %%Eina 3x3 Matrix%% |
| [[:develop:api:eina:position2d|Eina.Position2D]] | %%A 2D location in pixels.%% |
| [[:develop:api:eina:promise|Eina.Promise]] | %%Eina_Promise handle%% |
| [[:develop:api:eina:rect|Eina.Rect]] | %%A rectangle in pixel dimensions.%% |
| [[:develop:api:eina:rw_slice|Eina.Rw_Slice]] | %%A linear, read-write, memory segment%% |
| [[:develop:api:eina:size2d|Eina.Size2D]] | %%A 2D size in pixels.%% |
| [[:develop:api:eina:slice|Eina.Slice]] | %%A linear, read-only, memory segment%% |
| [[:develop:api:eina:strbuf|Eina.Strbuf]] | %%Eina strbuf data structure%% |
| [[:develop:api:eina:value:type|Eina.Value.Type]] | %%Eina value type%% |
| [[:develop:api:eina:vector2|Eina.Vector2]] | %%A simple 2D vector type using floating point values.%% |

===== Enums =====

^ Enum name ^ Brief description ^
| [[:develop:api:efl:access:reading:info:type|Efl.Access.Reading.Info.Type]] | %%The accessible Reading information type that can be read.%% |
| [[:develop:api:efl:access:relation_type|Efl.Access.Relation_Type]] | %%Describes relation between two objects.%% |
| [[:develop:api:efl:access:role|Efl.Access.Role]] | %%Describes the role of an object visible to Accessibility Clients.%% |
| [[:develop:api:efl:access:state_type|Efl.Access.State_Type]] | %%Describes a possible states of an object visible to accessibility clients.%% |
| [[:develop:api:efl:access:text:clip_type|Efl.Access.Text.Clip_Type]] | %%Text clip type%% |
| [[:develop:api:efl:access:text:granularity|Efl.Access.Text.Granularity]] | %%Text accessibility granularity%% |
| [[:develop:api:efl:access:type|Efl.Access.Type]] | %%Type of accessibility object%% |
| [[:develop:api:efl:animation:repeat_mode|Efl.Animation.Repeat_Mode]] | %%Animation repeat mode%% |
| [[:develop:api:efl:canvas:layout:part_type|Efl.Canvas.Layout.Part_Type]] | %%Type of a part in an Efl.Canvas.Layout object (edje object).%% |
| [[:develop:api:efl:canvas:vg:fill_mode|Efl.Canvas.Vg.Fill_Mode]] | %%Enumeration that defines how viewbox will be filled int the vg canvs's viewport. default Fill_Mode is %%''none''%%%% |
| [[:develop:api:efl:flip|Efl.Flip]] | %%Flip, See also %%[[:develop:api:efl:flipable|Efl.Flipable]]%%%% |
| [[:develop:api:efl:gesture:recognizer_result|Efl.Gesture.Recognizer_Result]] | %%This enum type describes the state of a gesture recognizer.%% |
| [[:develop:api:efl:gesture:state|Efl.Gesture.State]] | %%This enum type describes the state of a gesture.%% |
| [[:develop:api:efl:gesture:touch:state|Efl.Gesture.Touch.State]] | %%This enum type describes the state of a touch event.%% |
| [[:develop:api:efl:gfx:border_fill_mode|Efl.Gfx.Border_Fill_Mode]] | %%How an image's center region (the complement to the border region) should be rendered by EFL%% |
| [[:develop:api:efl:gfx:buffer:access_mode|Efl.Gfx.Buffer.Access_Mode]] | %%Graphics buffer access mode%% |
| [[:develop:api:efl:gfx:cap|Efl.Gfx.Cap]] | %%These values determine how the end of opened sub-paths are rendered in a stroke. %%''ref''%% efl_gfx_shape_stroke_cap_set()%% |
| [[:develop:api:efl:gfx:change_flag|Efl.Gfx.Change_Flag]] | %%What property got changed for this object%% |
| [[:develop:api:efl:gfx:color_class:layer|Efl.Gfx.Color_Class.Layer]] | %%Efl Gfx Color Class layer enum%% |
| [[:develop:api:efl:gfx:colorspace|Efl.Gfx.Colorspace]] | %%Graphics colorspace type%% |
| [[:develop:api:efl:gfx:fill:rule|Efl.Gfx.Fill.Rule]] | %%Type defining how an image content get filled.%% |
| [[:develop:api:efl:gfx:gradient:spread|Efl.Gfx.Gradient.Spread]] | %%Specifies how the area outside the gradient area should be filled. %%''ref''%% efl_gfx_gradient_spread_set()%% |
| [[:develop:api:efl:gfx:join|Efl.Gfx.Join]] | %%These values determine how two joining lines are rendered in a stroker. %%''ref''%% efl_gfx_shape_stroke_join_set()%% |
| [[:develop:api:efl:gfx:path:command_type|Efl.Gfx.Path.Command_Type]] | %%These values determine how the points are interpreted in a stream of points.%% |
| [[:develop:api:efl:gfx:render_op|Efl.Gfx.Render_Op]] | %%Graphics render operation mode%% |
| [[:develop:api:efl:gfx:size:hint:aspect|Efl.Gfx.Size.Hint.Aspect]] | %%Aspect types/policies for scaling size hints.%% |
| [[:develop:api:efl:image:animated:loop_hint|Efl.Image.Animated.Loop_Hint]] | %%Image animation loop modes%% |
| [[:develop:api:efl:image:content_hint|Efl.Image.Content_Hint]] | %%How an image's data is to be treated by EFL, for optimization.%% |
| [[:develop:api:efl:image:load:error|Efl.Image.Load.Error]] | %%Image or Edje load error type%% |
| [[:develop:api:efl:image:scale_hint|Efl.Image.Scale_Hint]] | %%How an image's data is to be treated by EFL, with regard to scaling cache.%% |
| [[:develop:api:efl:input:device:type|Efl.Input.Device.Type]] | %%General type of input device.%% |
| [[:develop:api:efl:input:flags|Efl.Input.Flags]] | %%Special flags set during an input event propagation.%% |
| [[:develop:api:efl:input:lock|Efl.Input.Lock]] | %%Key locks such as Num Lock, Scroll Lock and Caps Lock.%% |
| [[:develop:api:efl:input:modifier|Efl.Input.Modifier]] | %%Key modifiers such as Control, Alt, etc...%% |
| [[:develop:api:efl:input:object_pointer_mode|Efl.Input.Object_Pointer_Mode]] | %%How the mouse pointer should be handled by EFL.%% |
| [[:develop:api:efl:input:value|Efl.Input.Value]] | %%Keys for the generic values of all events.%% |
| [[:develop:api:efl:io:positioner:whence|Efl.Io.Positioner.Whence]] | %%Seek position modes%% |
| [[:develop:api:efl:net:control:access_point:error|Efl.Net.Control.Access_Point.Error]] | %%The connection error reason.%% |
| [[:develop:api:efl:net:control:access_point:ipv4_method|Efl.Net.Control.Access_Point.Ipv4_Method]] | %%The method used to configure IPv4%% |
| [[:develop:api:efl:net:control:access_point:ipv6_method|Efl.Net.Control.Access_Point.Ipv6_Method]] | %%The method used to configure IPv6%% |
| [[:develop:api:efl:net:control:access_point:proxy_method|Efl.Net.Control.Access_Point.Proxy_Method]] | %%The method used to configure Proxy.%% |
| [[:develop:api:efl:net:control:access_point:security|Efl.Net.Control.Access_Point.Security]] | %%Bitwise-able securities supported by an access point.%% |
| [[:develop:api:efl:net:control:access_point:state|Efl.Net.Control.Access_Point.State]] | %%Provides the access point state.%% |
| [[:develop:api:efl:net:control:agent_request_input:field|Efl.Net.Control.Agent_Request_Input.Field]] | %%Bitwise-able fields requested to the agent.%% |
| [[:develop:api:efl:net:control:state|Efl.Net.Control.State]] | %%Provides the global network connectivity state.%% |
| [[:develop:api:efl:net:control:technology:type|Efl.Net.Control.Technology.Type]] | %%Technology types%% |
| [[:develop:api:efl:net:dialer:http:primary_mode|Efl.Net.Dialer.Http.Primary_Mode]] | %%Primary HTTP mode%% |
| [[:develop:api:efl:net:dialer:websocket:close_reason|Efl.Net.Dialer.Websocket.Close_Reason]] | %%Registered reasons for the CLOSE (opcode=0x8).%% |
| [[:develop:api:efl:net:dialer:websocket:streaming_mode|Efl.Net.Dialer.Websocket.Streaming_Mode]] | %%How to map WebSocket to EFL I/O Interfaces.%% |
| [[:develop:api:efl:net:http:authentication_method|Efl.Net.Http.Authentication_Method]] | %%HTTP authentication methods%% |
| [[:develop:api:efl:net:http:status|Efl.Net.Http.Status]] | %%Common HTTP status codes. A more detailed description on the various HTTPS status codes can be found one Wikipedia: https://en.wikipedia.org/wiki/List_of_HTTP_status_codes%% |
| [[:develop:api:efl:net:http:version|Efl.Net.Http.Version]] | %%HTTP protocol versions%% |
| [[:develop:api:efl:net:session:state|Efl.Net.Session.State]] | %%Provides the session connectivity state.%% |
| [[:develop:api:efl:net:session:technology|Efl.Net.Session.Technology]] | %%Bitwise-able technologies to allow for a network session.%% |
| [[:develop:api:efl:net:ssl:cipher|Efl.Net.Ssl.Cipher]] | %%Defines the SSL/TLS version to use.%% |
| [[:develop:api:efl:net:ssl:verify_mode|Efl.Net.Ssl.Verify_Mode]] | %%Defines how remote peers should be verified.%% |
| [[:develop:api:efl:orient|Efl.Orient]] | %%An orientation type, to rotate visual objects.%% |
| [[:develop:api:efl:pointer:action|Efl.Pointer.Action]] | %%Pointer event type. Represents which kind of event this is.%% |
| [[:develop:api:efl:pointer:flags|Efl.Pointer.Flags]] | %%Pointer flags indicating whether a double or triple click is under way.%% |
| [[:develop:api:efl:text:bidirectional_type|Efl.Text.Bidirectional_Type]] | %%Bidirectionaltext type%% |
| [[:develop:api:efl:text:cursor:cursor_get_type|Efl.Text.Cursor.Cursor_Get_Type]] | %%All available cursor states%% |
| [[:develop:api:efl:text:cursor:cursor_type|Efl.Text.Cursor.Cursor_Type]] | %%Text cursor types%% |
| [[:develop:api:efl:text:font:bitmap_scalable|Efl.Text.Font.Bitmap_Scalable]] | %%Scalable of bitmap fonts%% |
| [[:develop:api:efl:text:font:slant|Efl.Text.Font.Slant]] | %%Type of font slant%% |
| [[:develop:api:efl:text:font:weight|Efl.Text.Font.Weight]] | %%Type of font weight%% |
| [[:develop:api:efl:text:font:width|Efl.Text.Font.Width]] | %%Type of font width%% |
| [[:develop:api:efl:text:format:horizontal_alignment_auto_type|Efl.Text.Format.Horizontal_Alignment_Auto_Type]] | %%Auto-horizontal alignment of the text%% |
| [[:develop:api:efl:text:format:wrap|Efl.Text.Format.Wrap]] | %%Wrap mode of the text (not in effect if not multiline)%% |
| [[:develop:api:efl:text:style:backing_type|Efl.Text.Style.Backing_Type]] | %%Whether to apply backing style to the displayed text or not%% |
| [[:develop:api:efl:text:style:effect_type|Efl.Text.Style.Effect_Type]] | %%Effect to apply to the displayed text%% |
| [[:develop:api:efl:text:style:shadow_direction|Efl.Text.Style.Shadow_Direction]] | %%Direction of the shadow style, if used%% |
| [[:develop:api:efl:text:style:strikethrough_type|Efl.Text.Style.Strikethrough_Type]] | %%Whether to apply strikethrough style to the displayed text or not%% |
| [[:develop:api:efl:text:style:underline_type|Efl.Text.Style.Underline_Type]] | %%Underline type of the displayed text%% |
| [[:develop:api:efl:ui:activate|Efl.Ui.Activate]] | %%Accessibility%% |
| [[:develop:api:efl:ui:calendar:weekday|Efl.Ui.Calendar.Weekday]] | %%A weekday%% |
| [[:develop:api:efl:ui:clock:type|Efl.Ui.Clock.Type]] | %%Identifies a clock field, The widget supports 6 fields : Year, month, Date, Hour, Minute, AM/PM%% |
| [[:develop:api:efl:ui:dir|Efl.Ui.Dir]] | %%Direction for UI objects and layouts.%% |
| [[:develop:api:efl:ui:drag:dir|Efl.Ui.Drag.Dir]] | %%Permitted directions for dragging objects.%% |
| [[:develop:api:efl:ui:flip:interaction|Efl.Ui.Flip.Interaction]] | %%Efl UI flip interaction%% |
| [[:develop:api:efl:ui:flip:mode|Efl.Ui.Flip.Mode]] | %%Efl UI flip mode%% |
| [[:develop:api:efl:ui:focus:autoscroll_mode|Efl.Ui.Focus.Autoscroll_Mode]] | %%Focus Autoscroll Mode%% |
| [[:develop:api:efl:ui:focus:direction|Efl.Ui.Focus.Direction]] | %%Focus directions.%% |
| [[:develop:api:efl:ui:focus:move_policy|Efl.Ui.Focus.Move_Policy]] | %%Focus Movement Policy.%% |
| [[:develop:api:efl:ui:image:scale_type|Efl.Ui.Image.Scale_Type]] | %%Enumeration that defines scale types for the object's internal image.%% |
| [[:develop:api:efl:ui:interest_region_mode|Efl.Ui.Interest_Region_Mode]] | %%Focus region show mode.%% |
| [[:develop:api:efl:ui:popup:align|Efl.Ui.Popup.Align]] | %%Popup alignment type%% |
| [[:develop:api:efl:ui:popup_alert:button|Efl.Ui.Popup_Alert.Button]] | %%Defines the type of the alert button.%% |
| [[:develop:api:efl:ui:scroll_block|Efl.Ui.Scroll_Block]] | %%Direction in which a scroller should be blocked.%% |
| [[:develop:api:efl:ui:slider:indicator_visible_mode|Efl.Ui.Slider.Indicator_Visible_Mode]] | %%Slider's indicator visiblity mode.%% |
| [[:develop:api:efl:ui:softcursor_mode|Efl.Ui.Softcursor_Mode]] | %%Software cursor mode.%% |
| [[:develop:api:efl:ui:textpath:direction|Efl.Ui.Textpath.Direction]] | %%Textpath direction%% |
| [[:develop:api:efl:ui:theme:apply|Efl.Ui.Theme.Apply]] | %%Return error code when setting the style on a widget.%% |
| [[:develop:api:efl:ui:win:indicator_mode|Efl.Ui.Win.Indicator_Mode]] | %%Defines the type indicator that can be shown%% |
| [[:develop:api:efl:ui:win:keyboard_mode|Efl.Ui.Win.Keyboard_Mode]] | %%The different layouts that can be requested for the virtual keyboard.%% |
| [[:develop:api:efl:ui:win:keygrab_mode|Efl.Ui.Win.Keygrab_Mode]] | %%Define the keygrab modes of window. A window may send commands to the Keyrouter according this mode, and perform different actions.%% |
| [[:develop:api:efl:ui:win:modal_mode|Efl.Ui.Win.Modal_Mode]] | %%Defines the mode of a modal window%% |
| [[:develop:api:efl:ui:win:move_resize_mode|Efl.Ui.Win.Move_Resize_Mode]] | %%Define the move or resize mode of window.%% |
| [[:develop:api:efl:ui:win:type|Efl.Ui.Win.Type]] | %%Defines the types of window that can be created%% |
| [[:develop:api:efl:ui:win:urgent_mode|Efl.Ui.Win.Urgent_Mode]] | %%Defines the mode of a urgent window.%% |
| [[:develop:api:efl:ui:zoom:mode|Efl.Ui.Zoom.Mode]] | %%Types of zoom available.%% |
| [[:develop:api:eina:xattr:flags|Eina.Xattr.Flags]] | %%Eina file extended attributes flags%% |

===== Constants =====

^ Constant name ^ Brief description ^
| [[:develop:api:efl:gfx:size:hint:expand|Efl.Gfx.Size.Hint.Expand]] | %%Use with %%[[:develop:api:efl:gfx:size:hint:property:hint_weight|Efl.Gfx.Size.Hint.hint_weight]]%%.%% |
| [[:develop:api:efl:gfx:size:hint:fill|Efl.Gfx.Size.Hint.Fill]] | %%Special value for %%[[:develop:api:efl:gfx:size:hint:property:hint_align|Efl.Gfx.Size.Hint.hint_align]]%%.%% |
| [[:develop:api:efl:gfx:stack:layer:max|Efl.Gfx.Stack.Layer.Max]] | %%top-most layer number%% |
| [[:develop:api:efl:gfx:stack:layer:min|Efl.Gfx.Stack.Layer.Min]] | %%bottom-most layer number%% |

===== Globals =====

^ Global name ^ Brief description ^
| [[:develop:api:efl:net:dialer:error:couldnt_connect|Efl.Net.Dialer.Error.COULDNT_CONNECT]] | %%The dialer could not connect to the remote%% |
| [[:develop:api:efl:net:dialer:error:couldnt_resolve_proxy|Efl.Net.Dialer.Error.COULDNT_RESOLVE_PROXY]] | %%The dialer could not resolve the given proxy server%% |
| [[:develop:api:efl:net:dialer:error:proxy_authentication_failed|Efl.Net.Dialer.Error.PROXY_AUTHENTICATION_FAILED]] | %%The dialer failed to authenticate against the proxy server%% |
| [[:develop:api:efl:net:error:couldnt_resolve_host|Efl.Net.Error.COULDNT_RESOLVE_HOST]] | %%Could not resolve the given host name%% |
| [[:develop:api:efl:net:http:error:bad_content_encoding|Efl.Net.Http.Error.BAD_CONTENT_ENCODING]] | %%HTTP error: bad content encoding%% |
| [[:develop:api:efl:net:http:error:bad_download_resume|Efl.Net.Http.Error.BAD_DOWNLOAD_RESUME]] | %%HTTP error: bad download resume%% |
| [[:develop:api:efl:net:http:error:bad_function_argument|Efl.Net.Http.Error.BAD_FUNCTION_ARGUMENT]] | %%HTTP error: bad function argument%% |
| [[:develop:api:efl:net:http:error:chunk_failed|Efl.Net.Http.Error.CHUNK_FAILED]] | %%HTTP error: chunk failed%% |
| [[:develop:api:efl:net:http:error:conv_failed|Efl.Net.Http.Error.CONV_FAILED]] | %%HTTP error: conv failed%% |
| [[:develop:api:efl:net:http:error:conv_reqd|Efl.Net.Http.Error.CONV_REQD]] | %%HTTP error: conv reqd%% |
| [[:develop:api:efl:net:http:error:failed_init|Efl.Net.Http.Error.FAILED_INIT]] | %%HTTP error: failed init%% |
| [[:develop:api:efl:net:http:error:file_couldnt_read_file|Efl.Net.Http.Error.FILE_COULDNT_READ_FILE]] | %%HTTP error: could not read file%% |
| [[:develop:api:efl:net:http:error:filesize_exceeded|Efl.Net.Http.Error.FILESIZE_EXCEEDED]] | %%HTTP error: filesize exceeded%% |
| [[:develop:api:efl:net:http:error:function_not_found|Efl.Net.Http.Error.FUNCTION_NOT_FOUND]] | %%HTTP error: function not found%% |
| [[:develop:api:efl:net:http:error:got_nothing|Efl.Net.Http.Error.GOT_NOTHING]] | %%HTTP error: got nothing%% |
| [[:develop:api:efl:net:http:error:http2_stream|Efl.Net.Http.Error.HTTP2_STREAM]] | %%HTTP error: http2 stream%% |
| [[:develop:api:efl:net:http:error:http2|Efl.Net.Http.Error.HTTP2]] | %%HTTP error: http2%% |
| [[:develop:api:efl:net:http:error:http_post_error|Efl.Net.Http.Error.HTTP_POST_ERROR]] | %%HTTP error: http post error%% |
| [[:develop:api:efl:net:http:error:http_returned_error|Efl.Net.Http.Error.HTTP_RETURNED_ERROR]] | %%HTTP error: http returned error%% |
| [[:develop:api:efl:net:http:error:interface_failed|Efl.Net.Http.Error.INTERFACE_FAILED]] | %%HTTP error: interface failed%% |
| [[:develop:api:efl:net:http:error:login_denied|Efl.Net.Http.Error.LOGIN_DENIED]] | %%HTTP error: login denied%% |
| [[:develop:api:efl:net:http:error:no_connection_available|Efl.Net.Http.Error.NO_CONNECTION_AVAILABLE]] | %%HTTP error: no connection available%% |
| [[:develop:api:efl:net:http:error:not_built_in|Efl.Net.Http.Error.NOT_BUILT_IN]] | %%HTTP error: not built in%% |
| [[:develop:api:efl:net:http:error:operation_timedout|Efl.Net.Http.Error.OPERATION_TIMEDOUT]] | %%HTTP error: operation timeout%% |
| [[:develop:api:efl:net:http:error:partial_file|Efl.Net.Http.Error.PARTIAL_FILE]] | %%HTTP error: partial file%% |
| [[:develop:api:efl:net:http:error:peer_failed_verification|Efl.Net.Http.Error.PEER_FAILED_VERIFICATION]] | %%HTTP error: peer failed verification%% |
| [[:develop:api:efl:net:http:error:range_error|Efl.Net.Http.Error.RANGE_ERROR]] | %%HTTP error: range error%% |
| [[:develop:api:efl:net:http:error:read_error|Efl.Net.Http.Error.READ_ERROR]] | %%HTTP error: read error%% |
| [[:develop:api:efl:net:http:error:recv_error|Efl.Net.Http.Error.RECV_ERROR]] | %%HTTP error: receive error%% |
| [[:develop:api:efl:net:http:error:remote_access_denied|Efl.Net.Http.Error.REMOTE_ACCESS_DENIED]] | %%HTTP error: remote access denied%% |
| [[:develop:api:efl:net:http:error:remote_disk_full|Efl.Net.Http.Error.REMOTE_DISK_FULL]] | %%HTTP error: remote disk full%% |
| [[:develop:api:efl:net:http:error:remote_file_exists|Efl.Net.Http.Error.REMOTE_FILE_EXISTS]] | %%HTTP error: remote file exists%% |
| [[:develop:api:efl:net:http:error:remote_file_not_found|Efl.Net.Http.Error.REMOTE_FILE_NOT_FOUND]] | %%HTTP error: remote file not found%% |
| [[:develop:api:efl:net:http:error:send_error|Efl.Net.Http.Error.SEND_ERROR]] | %%HTTP error: send error%% |
| [[:develop:api:efl:net:http:error:send_fail_rewind|Efl.Net.Http.Error.SEND_FAIL_REWIND]] | %%HTTP error: send fail rewind%% |
| [[:develop:api:efl:net:http:error:ssl_cacert_badfile|Efl.Net.Http.Error.SSL_CACERT_BADFILE]] | %%HTTP error: SSL cacert bad file%% |
| [[:develop:api:efl:net:http:error:ssl_cacert|Efl.Net.Http.Error.SSL_CACERT]] | %%HTTP error: SSL cacert%% |
| [[:develop:api:efl:net:http:error:ssl_certproblem|Efl.Net.Http.Error.SSL_CERTPROBLEM]] | %%HTTP error: SSL certproblem%% |
| [[:develop:api:efl:net:http:error:ssl_cipher|Efl.Net.Http.Error.SSL_CIPHER]] | %%HTTP error: SSL cipher%% |
| [[:develop:api:efl:net:http:error:ssl_connect_error|Efl.Net.Http.Error.SSL_CONNECT_ERROR]] | %%HTTP error: SSL connect error%% |
| [[:develop:api:efl:net:http:error:ssl_crl_badfile|Efl.Net.Http.Error.SSL_CRL_BADFILE]] | %%HTTP error: SSL crl bad file%% |
| [[:develop:api:efl:net:http:error:ssl_engine_initfailed|Efl.Net.Http.Error.SSL_ENGINE_INITFAILED]] | %%HTTP error: SSL engine init failed%% |
| [[:develop:api:efl:net:http:error:ssl_engine_notfound|Efl.Net.Http.Error.SSL_ENGINE_NOTFOUND]] | %%HTTP error: SSL engine not found%% |
| [[:develop:api:efl:net:http:error:ssl_engine_setfailed|Efl.Net.Http.Error.SSL_ENGINE_SETFAILED]] | %%HTTP error: SSL engine set failed%% |
| [[:develop:api:efl:net:http:error:ssl_invalidcertstatus|Efl.Net.Http.Error.SSL_INVALIDCERTSTATUS]] | %%HTTP error: SSL invalid cert status%% |
| [[:develop:api:efl:net:http:error:ssl_issuer_error|Efl.Net.Http.Error.SSL_ISSUER_ERROR]] | %%HTTP error: SSL issuer error%% |
| [[:develop:api:efl:net:http:error:ssl_pinnedpubkeynotmatch|Efl.Net.Http.Error.SSL_PINNEDPUBKEYNOTMATCH]] | %%HTTP error: SSL pinned pub key does not match%% |
| [[:develop:api:efl:net:http:error:ssl_shutdown_failed|Efl.Net.Http.Error.SSL_SHUTDOWN_FAILED]] | %%HTTP error: SSL shutdown failed%% |
| [[:develop:api:efl:net:http:error:too_many_redirects|Efl.Net.Http.Error.TOO_MANY_REDIRECTS]] | %%HTTP error: too many redirects%% |
| [[:develop:api:efl:net:http:error:unknown_option|Efl.Net.Http.Error.UNKNOWN_OPTION]] | %%HTTP error: unknown option%% |
| [[:develop:api:efl:net:http:error:unsupported_protocol|Efl.Net.Http.Error.UNSUPPORTED_PROTOCOL]] | %%HTTP error: unsupported protocol%% |
| [[:develop:api:efl:net:http:error:upload_failed|Efl.Net.Http.Error.UPLOAD_FAILED]] | %%HTTP error: upload failed%% |
| [[:develop:api:efl:net:http:error:url_malformat|Efl.Net.Http.Error.URL_MALFORMAT]] | %%HTTP error: URL mal-formatted%% |
| [[:develop:api:efl:net:http:error:use_ssl_failed|Efl.Net.Http.Error.USE_SSL_FAILED]] | %%HTTP error: usage of SSL failed%% |
| [[:develop:api:efl:net:http:error:write_error|Efl.Net.Http.Error.WRITE_ERROR]] | %%HTTP error: write error%% |
| [[:develop:api:efl:net:socket:ssl:error:certificate_verify_failed|Efl.Net.Socket.Ssl.Error.CERTIFICATE_VERIFY_FAILED]] | %%Failed to verify peer's certificate%% |
| [[:develop:api:efl:net:socket:ssl:error:handshake|Efl.Net.Socket.Ssl.Error.HANDSHAKE]] | %%Failed SSL handshake%% |

