~~Title: Efl.Model.Composite.Selection.Children~~
====== Efl.Model.Composite.Selection.Children (class) ======

===== Description =====

%%Efl model composite selection children class%%

{{page>:develop:api-include:efl:model:composite:selection:children:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Full hierarchy |

  * [[:develop:api:efl:object|Efl.Object]] //(class)//
  * [[:develop:api:efl:model|Efl.Model]] //(interface)//


++++
===== Members =====

**[[:develop:api:efl:model:composite:selection:children:method:property_set|property_set]]**// [Overridden from [[:develop:api:efl:model|Efl.Model]]]//\\
> %%Set a property value of a given property name.%%
<code c>
Efl_Future *efl_model_property_set(Eo *obj, const char *property, const Eina_Value *value);
</code>
\\

==== Inherited ====

^ [[:develop:api:efl:model|Efl.Model]] ^^^
|  | **[[:develop:api:efl:model:method:child_add|child_add]]** | %%Add a new child.%% |
|  | **[[:develop:api:efl:model:method:child_del|child_del]]** | %%Remove a child.%% |
|  | **[[:develop:api:efl:model:method:children_count_get|children_count_get]]** | %%Get children count.%% |
|  | **[[:develop:api:efl:model:method:children_slice_get|children_slice_get]]** | %%Get children slice OR full range.%% |
|  | **[[:develop:api:efl:model:property:properties|properties]]** //**(get)**// | %%Get properties from model.%% |
|  | **[[:develop:api:efl:model:method:property_get|property_get]]** | %%Retrieve the value of a given property name.%% |
^ [[:develop:api:efl:object|Efl.Object]] ^^^
|  | **[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**// | %%Allow an object to be deleted by unref even if it has a parent.%% |
|  | **[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]** | %%Get an iterator on all childrens%% |
|  | **[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**// | %%A human readable comment for the object%% |
|  | **[[:develop:api:efl:object:method:composite_attach|composite_attach]]** | %%Make an object a composite object of another.%% |
|  | **[[:develop:api:efl:object:method:composite_detach|composite_detach]]** | %%Detach a composite object from another object.%% |
|  | **[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]** | %%Check if an object is part of a composite object.%% |
|  | **[[:develop:api:efl:object:method:constructor|constructor]]** | %%Call the object's constructor.%% |
|  | **[[:develop:api:efl:object:method:debug_name_override|debug_name_override]]** | %%Build a read-only name for this object used for debugging.%% |
|  | **[[:develop:api:efl:object:method:del|del]]** | %%Unrefs the object and reparents it to NULL.%% |
|  | **[[:develop:api:efl:object:method:destructor|destructor]]** | %%Call the object's destructor.%% |
|  | **[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]** | %%Add an event callback forwarder for an event and an object.%% |
|  | **[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]** | %%Remove an event callback forwarder for an event and an object.%% |
|  | **[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]** | %%Stop the current callback call.%% |
|  | **[[:develop:api:efl:object:method:event_freeze|event_freeze]]** | %%Freeze events of object.%% |
|  | **[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**// | %%Return freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]** | %%Freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**// | %%Return freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]** | %%Thaw events of object.%% |
|  | **[[:develop:api:efl:object:method:event_thaw|event_thaw]]** | %%Thaw events of object.%% |
|  | **[[:develop:api:efl:object:method:finalize|finalize]]** | %%Called at the end of efl_add. Should not be called, just overridden.%% |
|  | **[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**// | %%True if the object is already finalized, otherwise false.%% |
|  | **[[:develop:api:efl:object:property:name|name]]** //**(get, set)**// | %%The name of the object.%% |
|  | **[[:develop:api:efl:object:method:name_find|name_find]]** | %%Find a child object with the given name and return it.%% |
|  | **[[:develop:api:efl:object:property:parent|parent]]** //**(get, set)**// | %%The parent of an object.%% |
|  | **[[:develop:api:efl:object:method:provider_find|provider_find]]** | %%Searches upwards in the object tree for a provider which knows the given class/interface.%% |

===== Events =====

==== Inherited ====

^ [[:develop:api:efl:model|Efl.Model]] ^^^
|  | **[[:develop:api:efl:model:event:child_added|child,added]]** | %%Event dispatched when new child is added.%% |
|  | **[[:develop:api:efl:model:event:child_removed|child,removed]]** | %%Event dispatched when child is removed.%% |
|  | **[[:develop:api:efl:model:event:children_count_changed|children,count,changed]]** | %%Event dispatched when children count is finished.%% |
|  | **[[:develop:api:efl:model:event:properties_changed|properties,changed]]** | %%Event dispatched when properties list is available.%% |
^ [[:develop:api:efl:object|Efl.Object]] ^^^
|  | **[[:develop:api:efl:object:event:callback_add|callback,add]]** | %%A callback was added.%% |
|  | **[[:develop:api:efl:object:event:callback_del|callback,del]]** | %%A callback was deleted.%% |
|  | **[[:develop:api:efl:object:event:del|del]]** | %%Object is being deleted.%% |
|  | **[[:develop:api:efl:object:event:destruct|destruct]]** | %%Object has been fully destroyed. It can not be used beyond this point. This event should only serve to clean up any dangling pointer.%% |
