~~Title: Efl.Model.property_set~~
===== Signature =====

<code>
property_set @pure_virtual {
    params {
        @in property: free(string, free);
        @in value: free(const(any_value_ptr), eina_value_free);
    }
    return: free(future<free(any_value, eina_value_flush)>, efl_del);
}
</code>

===== C signature =====

<code c>
Efl_Future *efl_model_property_set(Eo *obj, const char *property, const Eina_Value *value);
</code>

===== Parameters =====

  * **property** //(in)// - %%Property name%%
  * **value** //(in)// - %%New value%%

===== Description =====

%%Set a property value of a given property name.%%

%%The caller must ensure to call at least efl_model_prop_list before being able to see/set properties. This function sets a new property value into given property name. Once the operation is completed the concrete implementation should raise EFL_MODEL_EVENT_PROPERTIES_CHANGED event in order to notify listeners of the new value of the property.%%

%%If the model doesn't have the property then there are two possibilities, either raise an error or create the new property in model%%

%%See %%[[:develop:api:efl:model:method:property_get|Efl.Model.property_get]]%%, @ref EFL_MODEL_EVENT_PROPERTIES_CHANGED%%

//Since 1.14//
{{page>:develop:api-include:efl:model:method:property_set:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Model.property_set**

