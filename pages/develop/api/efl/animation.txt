~~Title: Efl.Animation~~
====== Efl.Animation (class) ======

===== Description =====

%%Efl animation class%%

{{page>:develop:api-include:efl:animation:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Full hierarchy |

  * [[:develop:api:efl:object|Efl.Object]] //(class)//


++++
===== Members =====

**[[:develop:api:efl:animation:method:constructor|constructor]]**// [Overridden from [[:develop:api:efl:object|Efl.Object]]]//\\
> %%Call the object's constructor.%%
<code c>
Efl_Object *efl_constructor(Eo *obj);
</code>
\\
**[[:develop:api:efl:animation:method:destructor|destructor]]**// [Overridden from [[:develop:api:efl:object|Efl.Object]]]//\\
> %%Call the object's destructor.%%
<code c>
void efl_destructor(Eo *obj);
</code>
\\
**[[:develop:api:efl:animation:property:duration|duration]]** //**(get, set)**//\\
> %%Duration property%%
<code c>
double efl_animation_duration_get(const Eo *obj);
void efl_animation_duration_set(Eo *obj, double duration);
</code>
\\
**[[:develop:api:efl:animation:property:final_state_keep|final_state_keep]]** //**(get, set)**//\\
> %%Keep final state property%%
<code c>
Eina_Bool efl_animation_final_state_keep_get(const Eo *obj);
void efl_animation_final_state_keep_set(Eo *obj, Eina_Bool keep_final_state);
</code>
\\
**[[:develop:api:efl:animation:property:interpolator|interpolator]]** //**(get, set)**//\\
> %%Interpolator property%%
<code c>
Efl_Object *efl_animation_interpolator_get(const Eo *obj);
void efl_animation_interpolator_set(Eo *obj, Efl_Object *interpolator);
</code>
\\
**[[:develop:api:efl:animation:method:object_create|object_create]]**\\
> %%Create object of the animation.%%
<code c>
Efl_Animation_Object *efl_animation_object_create(Eo *obj);
</code>
\\
**[[:develop:api:efl:animation:property:repeat_count|repeat_count]]** //**(get, set)**//\\
> %%Repeat count property%%
<code c>
int efl_animation_repeat_count_get(const Eo *obj);
void efl_animation_repeat_count_set(Eo *obj, int count);
</code>
\\
**[[:develop:api:efl:animation:property:repeat_mode|repeat_mode]]** //**(get, set)**//\\
> %%Repeat mode property%%
<code c>
Efl_Animation_Repeat_Mode efl_animation_repeat_mode_get(const Eo *obj);
void efl_animation_repeat_mode_set(Eo *obj, Efl_Animation_Repeat_Mode mode);
</code>
\\
**[[:develop:api:efl:animation:property:start_delay|start_delay]]** //**(get, set)**//\\
> %%Start delay property%%
<code c>
double efl_animation_start_delay_get(const Eo *obj);
void efl_animation_start_delay_set(Eo *obj, double delay_time);
</code>
\\
**[[:develop:api:efl:animation:property:target|target]]** //**(get, set)**//\\
> %%Target object property%%
<code c>
Efl_Canvas_Object *efl_animation_target_get(const Eo *obj);
void efl_animation_target_set(Eo *obj, Efl_Canvas_Object *target);
</code>
\\
**[[:develop:api:efl:animation:property:total_duration|total_duration]]** //**(get)**//\\
> %%Total duration property%%
<code c>
double efl_animation_total_duration_get(const Eo *obj);
</code>
\\

==== Inherited ====

^ [[:develop:api:efl:object|Efl.Object]] ^^^
|  | **[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**// | %%Allow an object to be deleted by unref even if it has a parent.%% |
|  | **[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]** | %%Get an iterator on all childrens%% |
|  | **[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**// | %%A human readable comment for the object%% |
|  | **[[:develop:api:efl:object:method:composite_attach|composite_attach]]** | %%Make an object a composite object of another.%% |
|  | **[[:develop:api:efl:object:method:composite_detach|composite_detach]]** | %%Detach a composite object from another object.%% |
|  | **[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]** | %%Check if an object is part of a composite object.%% |
|  | **[[:develop:api:efl:object:method:debug_name_override|debug_name_override]]** | %%Build a read-only name for this object used for debugging.%% |
|  | **[[:develop:api:efl:object:method:del|del]]** | %%Unrefs the object and reparents it to NULL.%% |
|  | **[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]** | %%Add an event callback forwarder for an event and an object.%% |
|  | **[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]** | %%Remove an event callback forwarder for an event and an object.%% |
|  | **[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]** | %%Stop the current callback call.%% |
|  | **[[:develop:api:efl:object:method:event_freeze|event_freeze]]** | %%Freeze events of object.%% |
|  | **[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**// | %%Return freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]** | %%Freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**// | %%Return freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]** | %%Thaw events of object.%% |
|  | **[[:develop:api:efl:object:method:event_thaw|event_thaw]]** | %%Thaw events of object.%% |
|  | **[[:develop:api:efl:object:method:finalize|finalize]]** | %%Called at the end of #eo_add. Should not be called, just overridden.%% |
|  | **[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**// | %%True if the object is already finalized, otherwise false.%% |
|  | **[[:develop:api:efl:object:property:name|name]]** //**(get, set)**// | %%The name of the object.%% |
|  | **[[:develop:api:efl:object:method:name_find|name_find]]** | %%Find a child object with the given name and return it.%% |
|  | **[[:develop:api:efl:object:property:parent|parent]]** //**(get, set)**// | %%The parent of an object.%% |
|  | **[[:develop:api:efl:object:method:provider_find|provider_find]]** | %%Searches upwards in the object tree for a provider which knows the given class/interface.%% |

===== Events =====

==== Inherited ====

^ [[:develop:api:efl:object|Efl.Object]] ^^^
|  | **[[:develop:api:efl:object:event:callback_add|callback,add]]** | %%A callback was added.%% |
|  | **[[:develop:api:efl:object:event:callback_del|callback,del]]** | %%A callback was deleted.%% |
|  | **[[:develop:api:efl:object:event:del|del]]** | %%Object is being deleted.%% |
