~~Title: Efl.Gfx.Path.interpolate~~
===== Description =====

%%Creates intermediary path part-way between two paths%%

%%Sets the points of the %%''obj''%% as the linear interpolation of the points in the %%''from''%% and %%''to''%% paths.  The path's x,y position and control point coordinates are likewise interpolated.%%

%%The %%''from''%% and %%''to''%% paths must not already have equivalent points, and %%''to''%% must contain at least as many points as %%''from''%%, else the function returns %%''false''%% with no interpolation performed.  If %%''to''%% has more points than %%''from''%%, the excess points are ignored.%%
{{page>:develop:api-include:efl:gfx:path:method:interpolate:description&nouser&nolink&nodate}}

===== Signature =====

<code>
interpolate {
    params {
        @in from: free(const(Efl.Object), efl_del);
        @in to: free(const(Efl.Object), efl_del);
        @in pos_map: double;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_gfx_path_interpolate(Eo *obj, const Efl_Object *from, const Efl_Object *to, double pos_map);
</code>

===== Parameters =====

  * **from** //(in)// - %%Source path%%
  * **to** //(in)// - %%Destination path%%
  * **pos_map** //(in)// - %%Position map in range 0.0 to 1.0%%

===== Implemented by =====

  * **Efl.Gfx.Path.interpolate**

