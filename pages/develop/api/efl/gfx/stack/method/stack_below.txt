~~Title: Efl.Gfx.Stack.stack_below~~
===== Description =====

%%Stack %%''obj''%% immediately %%''below''%%%%

%%Objects, in a given canvas, are stacked in the order they're added. This means that, if they overlap, the highest ones will cover the lowest ones, in that order. This function is a way to change the stacking order for the objects.%%

%%Its intended to be used with objects belonging to the same layer in a given canvas, otherwise it will fail (and accomplish nothing).%%

%%If you have smart objects on your canvas and %%''obj''%% is a member of one of them, then %%''below''%% must also be a member of the same smart object.%%

%%Similarly, if %%''obj''%% is not a member of a smart object, %%''below''%% must not be either.%%

%%See also %%[[:develop:api:efl:gfx:stack:property:layer|Efl.Gfx.Stack.layer.get]]%%(), %%[[:develop:api:efl:gfx:stack:property:layer|Efl.Gfx.Stack.layer.set]]%%() and %%[[:develop:api:efl:gfx:stack:method:stack_below|Efl.Gfx.Stack.stack_below]]%%()%%
{{page>:develop:api-include:efl:gfx:stack:method:stack_below:description&nouser&nolink&nodate}}

===== Signature =====

<code>
stack_below @pure_virtual {
    params {
        @in below: free(Efl.Gfx.Stack, efl_del) @nonull;
    }
}
</code>

===== C signature =====

<code c>
void efl_gfx_stack_below(Eo *obj, Efl_Gfx_Stack *below);
</code>

===== Parameters =====

  * **below** //(in)// - %%The object below which to stack%%

===== Implemented by =====

  * **Efl.Gfx.Stack.stack_below**

