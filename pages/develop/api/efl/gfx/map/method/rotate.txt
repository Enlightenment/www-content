~~Title: Efl.Gfx.Map.rotate~~
===== Signature =====

<code>
rotate {
    params {
        @in degrees: double;
        @in pivot: free(const(Efl.Gfx), efl_del);
        @in cx: double;
        @in cy: double;
    }
}
</code>

===== C signature =====

<code c>
void efl_gfx_map_rotate(Eo *obj, double degrees, const Efl_Gfx *pivot, double cx, double cy);
</code>

===== Parameters =====

  * **degrees** //(in)// - %%CCW rotation in degrees.%%
  * **pivot** //(in)// - %%A pivot object for the center point, can be %%''null''%%.%%
  * **cx** //(in)// - %%X relative coordinate of the center point.%%
  * **cy** //(in)// - %%y relative coordinate of the center point.%%

===== Description =====

%%Apply a rotation to the object.%%

%%This rotates the object clockwise by %%''degrees''%% degrees, around the center specified by the relative position (%%''cx''%%, %%''cy''%%) in the %%''pivot''%% object. If %%''pivot''%% is %%''null''%% then this object is used as its own pivot center. 360 degrees is a full rotation, equivalent to no rotation. Negative values for %%''degrees''%% will rotate clockwise by that amount.%%

%%The coordinates are set relative to the given %%''pivot''%% object. If its geometry changes, then the absolute position of the rotation center will change accordingly.%%

%%By default, the center is at (0.5, 0.5). 0.0 means left or top while 1.0 means right or bottom of the %%''pivot''%% object.%%

//Since 1.20//
{{page>:develop:api-include:efl:gfx:map:method:rotate:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Gfx.Map.rotate**

