~~Title: Efl.Gfx.Map.map_uv~~
===== Keys =====

  * **idx** - %%ID of the point, from 0 to 3 (included).%%
===== Values =====

  * **u** - %%Relative X coordinate within the image, from 0 to 1.%%
  * **v** - %%Relative Y coordinate within the image, from 0 to 1.%%
===== Description =====

%%Map point's U and V texture source point.%%

%%This sets/gets the U and V coordinates for the point. This determines which coordinate in the source image is mapped to the given point, much like OpenGL and textures. Valid values range from 0.0 to 1.0.%%

%%By default the points are set in a clockwise order, as such: - 0: top-left, i.e. (0.0, 0.0), - 1: top-right, i.e. (1.0, 0.0), - 2: bottom-right, i.e. (1.0, 1.0), - 3: bottom-left, i.e. (0.0, 1.0).%%

//Since 1.20//
{{page>:develop:api-include:efl:gfx:map:property:map_uv:description&nouser&nolink&nodate}}


===== Signature =====

<code>
@property map_uv {
    get {
        keys {
            idx: int;
        }
        values {
            u: double;
            v: double;
        }
    }
    set {
        keys {
            idx: int;
        }
        values {
            u: double;
            v: double;
        }
    }
}
</code>

===== C signature =====

<code c>
void efl_gfx_map_uv_get(const Eo *obj, int idx, double *u, double *v);
void efl_gfx_map_uv_set(Eo *obj, int idx, double u, double v);
</code>

===== Implemented by =====

  * **Efl.Gfx.Map.map_uv**

