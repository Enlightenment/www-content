~~Title: Efl.Gfx.Blur~~
====== Efl.Gfx.Blur (interface) ======

===== Description =====

%%A simple API to apply blur effects.%%

%%Those API's might use %%[[:develop:api:efl:gfx:filter|Efl.Gfx.Filter]]%% internally. It might be necessary to also specify the color of the blur with %%[[:develop:api:efl:gfx:property:color|Efl.Gfx.color]]%%.%%

{{page>:develop:api-include:efl:gfx:blur:description&nouser&nolink&nodate}}

===== Members =====

**[[:develop:api:efl:gfx:blur:property:grow|grow]]** //**(get, set)**//\\
> %%How much the original image should be "grown" before blurring.%%
<code c>
double efl_gfx_blur_grow_get(const Eo *obj);
void efl_gfx_blur_grow_set(Eo *obj, double radius);
</code>
\\
**[[:develop:api:efl:gfx:blur:property:offset|offset]]** //**(get, set)**//\\
> %%An offset relative to the original pixels.%%
<code c>
void efl_gfx_blur_offset_get(const Eo *obj, double *ox, double *oy);
void efl_gfx_blur_offset_set(Eo *obj, double ox, double oy);
</code>
\\
**[[:develop:api:efl:gfx:blur:property:radius|radius]]** //**(get, set)**//\\
> %%The blur radius in pixels.%%
<code c>
void efl_gfx_blur_radius_get(const Eo *obj, double *rx, double *ry);
void efl_gfx_blur_radius_set(Eo *obj, double rx, double ry);
</code>
\\

===== Events =====

