~~Title: Efl.Object.parent~~
===== Description =====

%%The parent of an object.%%

%%Parents keep references to their children. In order to delete objects which have parents you need to set parent to NULL or use efl_del(). This will both delete & unref the object).%%

%%The Eo parent is conceptually user set. That means that a parent should not be changed behind the scenes in an unexpected way.%%

%%For example: If you have a widget that has a box internally and when you 'swallow' a widget and the swallowed object ends up in the box, the parent should be the widget, not the box.%%
{{page>:develop:api-include:efl:object:property:parent:description&nouser&nolink&nodate}}

===== Values =====

  * **parent** - %%The new parent%%

===== Signature =====

<code>
@property parent {
    get {
        values {
            parent: free(Efl.Object, efl_del) @nullable;
        }
    }
    set {
        values {
            parent: free(Efl.Object, efl_del) @nullable;
        }
    }
}
</code>

===== C signature =====

<code c>
Efl_Object *efl_parent_get(const Eo *obj);
void efl_parent_set(Eo *obj, Efl_Object *parent);
</code>

===== Implemented by =====

  * **Efl.Object.parent**

