~~Title: Efl.Selection~~
====== Efl.Selection (mixin) ======

===== Description =====

%%Efl Selection class%%

{{page>:develop:api-include:efl:selection:description&nouser&nolink&nodate}}

===== Members =====

**[[:develop:api:efl:selection:method:has_owner|has_owner]]**\\
> %%Determine whether the selection data has owner%%
<code c>
Eina_Bool efl_selection_has_owner(Eo *obj, Efl_Selection_Type type, unsigned int seat);
</code>
\\
**[[:develop:api:efl:selection:method:selection_clear|selection_clear]]**\\
> %%Clear the selection data from the object%%
<code c>
void efl_selection_clear(Eo *obj, Efl_Selection_Type type, unsigned int seat);
</code>
\\
**[[:develop:api:efl:selection:method:selection_get|selection_get]]**\\
> %%Get the data from the object that has selection%%
<code c>
void efl_selection_get(Eo *obj, Efl_Selection_Type type, Efl_Selection_Format format, Efl_Selection_Data_Ready data_func, unsigned int seat);
</code>
\\
**[[:develop:api:efl:selection:method:selection_set|selection_set]]**\\
> %%Set the selection data to the object%%
<code c>
Eina_Future *efl_selection_set(Eo *obj, Efl_Selection_Type type, Efl_Selection_Format format, Eina_Slice data, unsigned int seat);
</code>
\\

===== Events =====

**[[:develop:api:efl:selection:event:selection_changed|selection,changed]]**\\
> %%Called when display server's selection has changed%%
<code c>
EFL_SELECTION_EVENT_SELECTION_CHANGED(void)
</code>
\\ 