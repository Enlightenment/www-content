~~Title: Efl.Canvas.Proxy.source~~
===== Description =====

%%The source object for this proxy.%%

%%The proxy object will mirror the rendering contents of a given source object in its drawing region, without affecting that source in any way. The source must be another valid %%[[:develop:api:efl:canvas:object|Efl.Canvas.Object]]%%. Other effects may be applied to the proxy, such as a map (see %%[[:develop:api:efl:gfx:map|Efl.Gfx.Map]]%%) to create a reflection of the original object (for example).%%

%%Any existing source object will be removed after this call.%%

<note>
%%This property should be set as soon as creating a proxy object, otherwise the proxy will do nothing.%%
</note>

<note warning>
%%You cannot set a proxy as another proxy's source.%%
</note>
{{page>:develop:api-include:efl:canvas:proxy:property:source:description&nouser&nolink&nodate}}

===== Values =====

  * **src** - %%Source object to use for the proxy.%%

===== Signature =====

<code>
@property source {
    get {
        values {
            src: free(Efl.Canvas.Object, efl_del) @nonull;
        }
    }
    set {
        values {
            src: free(Efl.Canvas.Object, efl_del) @nonull;
        }
        return: bool;
    }
}
</code>

===== C signature =====

<code c>
Efl_Canvas_Object *efl_canvas_proxy_source_get(const Eo *obj);
Eina_Bool efl_canvas_proxy_source_set(Eo *obj, Efl_Canvas_Object *src);
</code>

===== Implemented by =====

  * **Efl.Canvas.Proxy.source**

