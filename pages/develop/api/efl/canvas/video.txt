~~Title: Efl.Canvas.Video~~
====== Efl.Canvas.Video (class) ======

===== Description =====

%%Efl canvas video class%%

{{page>:develop:api-include:efl:canvas:video:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:canvas:group|Efl.Canvas.Group]] //(class)// => [[:develop:api:efl:canvas:object|Efl.Canvas.Object]] //(class)// => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_canvas_video [fillcolor = "black", label = "Efl.Canvas.Video", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_group [fillcolor = "gray15", label = "Efl.Canvas.Group", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_object [fillcolor = "gray15", label = "Efl.Canvas.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_stack [fillcolor = "gray15", label = "Efl.Gfx.Stack", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_animator [fillcolor = "gray15", label = "Efl.Animator", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_interface [fillcolor = "gray15", label = "Efl.Input.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_hint [fillcolor = "gray15", label = "Efl.Gfx.Size.Hint", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_map [fillcolor = "gray15", label = "Efl.Gfx.Map", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_loop_user [fillcolor = "gray15", label = "Efl.Loop_User", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_ui_base [fillcolor = "gray15", label = "Efl.Ui.Base", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_canvas_pointer [fillcolor = "gray15", label = "Efl.Canvas.Pointer", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_file [fillcolor = "gray15", label = "Efl.File", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_player [fillcolor = "gray15", label = "Efl.Player", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_image [fillcolor = "gray15", label = "Efl.Image", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_image_load [fillcolor = "gray15", label = "Efl.Image.Load", color = "cornflowerblue", fontcolor = "white", style = "filled"]

    efl_canvas_video -> efl_canvas_group
    efl_canvas_group -> efl_canvas_object
    efl_canvas_object -> efl_object
    efl_canvas_object -> efl_gfx
    efl_canvas_object -> efl_gfx_stack
    efl_canvas_object -> efl_animator
    efl_canvas_object -> efl_input_interface
    efl_canvas_object -> efl_gfx_size_hint
    efl_canvas_object -> efl_gfx_map
    efl_gfx_map -> efl_interface
    efl_gfx_map -> efl_object
    efl_canvas_object -> efl_loop_user
    efl_loop_user -> efl_object
    efl_canvas_object -> efl_ui_base
    efl_canvas_object -> efl_canvas_pointer
    efl_canvas_video -> efl_file
    efl_canvas_video -> efl_player
    efl_canvas_video -> efl_image
    efl_canvas_video -> efl_image_load
}
</graphviz>

++++

++++ Full hierarchy |

  * [[:develop:api:efl:canvas:group|Efl.Canvas.Group]] //(class)//
    * [[:develop:api:efl:canvas:object|Efl.Canvas.Object]] //(class)//
      * [[:develop:api:efl:object|Efl.Object]] //(class)//
      * [[:develop:api:efl:gfx|Efl.Gfx]] //(interface)//
      * [[:develop:api:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
      * [[:develop:api:efl:animator|Efl.Animator]] //(interface)//
      * [[:develop:api:efl:input:interface|Efl.Input.Interface]] //(interface)//
      * [[:develop:api:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] //(interface)//
      * [[:develop:api:efl:gfx:map|Efl.Gfx.Map]] //(mixin)//
        * [[:develop:api:efl:interface|Efl.Interface]] //(interface)//
        * [[:develop:api:efl:object|Efl.Object]] //(class)//
      * [[:develop:api:efl:loop_user|Efl.Loop_User]] //(class)//
        * [[:develop:api:efl:object|Efl.Object]] //(class)//
      * [[:develop:api:efl:ui:base|Efl.Ui.Base]] //(interface)//
      * [[:develop:api:efl:canvas:pointer|Efl.Canvas.Pointer]] //(interface)//
  * [[:develop:api:efl:file|Efl.File]] //(mixin)//
  * [[:develop:api:efl:player|Efl.Player]] //(interface)//
  * [[:develop:api:efl:image|Efl.Image]] //(interface)//
  * [[:develop:api:efl:image:load|Efl.Image.Load]] //(interface)//


++++
===== Members =====

**[[:develop:api:efl:canvas:video:method:constructor|constructor]]**// [Overridden from [[:develop:api:efl:object|Efl.Object]]]//\\
> %%Call the object's constructor.%%
<code c>
Efl_Object *efl_constructor(Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:video:property:engine|engine]]** //**(set)**//\\
> %%Initializes an emotion object with the specified module.%%
<code c>
Eina_Bool efl_canvas_video_engine_set(Eo *obj, const char *module_filename);
</code>
\\
**[[:develop:api:efl:canvas:video:property:file|file]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:file|Efl.File]]]//
<code c>
void efl_file_get(const Eo *obj, const char **file, const char **key);
Eina_Bool efl_file_set(Eo *obj, const char *file, const char *key);
</code>
\\
**[[:develop:api:efl:canvas:video:property:length|length]]** //**(get)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//\\
> %%Get the length of play for the media file.%%
<code c>
double efl_player_length_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:video:property:load_size|load_size]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:image:load|Efl.Image.Load]]]//\\
> %%The load size of an image.%%
<code c>
Eina_Size2D efl_image_load_size_get(const Eo *obj);
void efl_image_load_size_set(Eo *obj, Eina_Size2D size);
</code>
\\
**[[:develop:api:efl:canvas:video:property:mute|mute]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//\\
> %%This property controls the audio mute state.%%
<code c>
Eina_Bool efl_player_mute_get(const Eo *obj);
void efl_player_mute_set(Eo *obj, Eina_Bool mute);
</code>
\\
**[[:develop:api:efl:canvas:video:property:option|option]]** //**(set)**//\\
> %%Set the specified option for the current module.%%
<code c>
void efl_canvas_video_option_set(Eo *obj, const char *opt, const char *val);
</code>
\\
**[[:develop:api:efl:canvas:video:property:play|play]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//
<code c>
Eina_Bool efl_player_play_get(const Eo *obj);
void efl_player_play_set(Eo *obj, Eina_Bool play);
</code>
\\
**[[:develop:api:efl:canvas:video:property:position|position]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//
<code c>
double efl_player_position_get(const Eo *obj);
void efl_player_position_set(Eo *obj, double sec);
</code>
\\
**[[:develop:api:efl:canvas:video:property:position|position]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx|Efl.Gfx]]]//\\
> %%The 2D position of a canvas object.%%
<code c>
Eina_Position2D efl_gfx_position_get(const Eo *obj);
void efl_gfx_position_set(Eo *obj, Eina_Position2D pos);
</code>
\\
**[[:develop:api:efl:canvas:video:property:progress|progress]]** //**(get)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//\\
> %%Get how much of the file has been played.%%
<code c>
double efl_player_progress_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:video:property:ratio|ratio]]** //**(get)**//// [Overridden from [[:develop:api:efl:image|Efl.Image]]]//\\
> %%The native width/height ratio of the image.%%
<code c>
double efl_image_ratio_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:video:property:seekable|seekable]]** //**(get)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//\\
> %%Get whether the media file is seekable.%%
<code c>
Eina_Bool efl_player_seekable_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:video:property:size|size]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx|Efl.Gfx]]]//\\
> %%The 2D size of a canvas object.%%
<code c>
Eina_Size2D efl_gfx_size_get(const Eo *obj);
void efl_gfx_size_set(Eo *obj, Eina_Size2D size);
</code>
\\
**[[:develop:api:efl:canvas:video:property:smooth_scale|smooth_scale]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:image|Efl.Image]]]//\\
> %%Whether to use high-quality image scaling algorithm for this image.%%
<code c>
Eina_Bool efl_image_smooth_scale_get(const Eo *obj);
void efl_image_smooth_scale_set(Eo *obj, Eina_Bool smooth_scale);
</code>
\\
**[[:develop:api:efl:canvas:video:property:volume|volume]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//\\
> %%Control the audio volume.%%
<code c>
double efl_player_volume_get(const Eo *obj);
void efl_player_volume_set(Eo *obj, double volume);
</code>
\\

==== Inherited ====

[[:develop:api:efl:canvas:group|Efl.Canvas.Group]]\\
> **[[:develop:api:efl:canvas:group:method:debug_name_override|debug_name_override]]**, **[[:develop:api:efl:canvas:group:method:destructor|destructor]]**, **[[:develop:api:efl:canvas:group:method:group_calculate|group_calculate]]**, **[[:develop:api:efl:canvas:group:method:group_change|group_change]]**, **[[:develop:api:efl:canvas:group:method:group_member_add|group_member_add]]**, **[[:develop:api:efl:canvas:group:method:group_member_del|group_member_del]]**, **[[:develop:api:efl:canvas:group:method:group_member_is|group_member_is]]**, **[[:develop:api:efl:canvas:group:method:group_members_iterate|group_members_iterate]]**, **[[:develop:api:efl:canvas:group:property:clip|clip]]** //**(get, set)**//, **[[:develop:api:efl:canvas:group:property:color|color]]** //**(get, set)**//, **[[:develop:api:efl:canvas:group:property:group_need_recalculate|group_need_recalculate]]** //**(get, set)**//, **[[:develop:api:efl:canvas:group:property:no_render|no_render]]** //**(get, set)**//, **[[:develop:api:efl:canvas:group:property:paragraph_direction|paragraph_direction]]** //**(get, set)**//, **[[:develop:api:efl:canvas:group:property:visible|visible]]** //**(get, set)**//\\
[[:develop:api:efl:canvas:object|Efl.Canvas.Object]]\\
> **[[:develop:api:efl:canvas:object:method:clipees_has|clipees_has]]**, **[[:develop:api:efl:canvas:object:method:del|del]]**, **[[:develop:api:efl:canvas:object:method:finalize|finalize]]**, **[[:develop:api:efl:canvas:object:method:key_grab|key_grab]]**, **[[:develop:api:efl:canvas:object:method:key_ungrab|key_ungrab]]**, **[[:develop:api:efl:canvas:object:method:lower|lower]]**, **[[:develop:api:efl:canvas:object:method:provider_find|provider_find]]**, **[[:develop:api:efl:canvas:object:method:raise|raise]]**, **[[:develop:api:efl:canvas:object:method:seat_focus_add|seat_focus_add]]**, **[[:develop:api:efl:canvas:object:method:seat_focus_check|seat_focus_check]]**, **[[:develop:api:efl:canvas:object:method:seat_focus_del|seat_focus_del]]**, **[[:develop:api:efl:canvas:object:method:stack_above|stack_above]]**, **[[:develop:api:efl:canvas:object:method:stack_below|stack_below]]**, **[[:develop:api:efl:canvas:object:property:above|above]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:anti_alias|anti_alias]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:below|below]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:clipees|clipees]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:coords_inside|coords_inside]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:event_animation|event_animation]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:freeze_events|freeze_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:geometry|geometry]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_align|hint_align]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_aspect|hint_aspect]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_combined_min|hint_combined_min]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:hint_margin|hint_margin]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_max|hint_max]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_min|hint_min]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_restricted_min|hint_restricted_min]]** //**(get, set)**// ''protected set'', **[[:develop:api:efl:canvas:object:property:hint_weight|hint_weight]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:is_frame_object|is_frame_object]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:key_focus|key_focus]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:layer|layer]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:loop|loop]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:pass_events|pass_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:pointer_inside|pointer_inside]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:pointer_mode_by_device|pointer_mode_by_device]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:pointer_mode|pointer_mode]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:precise_is_inside|precise_is_inside]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:propagate_events|propagate_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:render_op|render_op]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:repeat_events|repeat_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:scale|scale]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:seat_event_filter|seat_event_filter]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:seat_focus|seat_focus]]** //**(get)**//\\
[[:develop:api:efl:file|Efl.File]]\\
> **[[:develop:api:efl:file:method:save|save]]**, **[[:develop:api:efl:file:property:load_error|load_error]]** //**(get)**//, **[[:develop:api:efl:file:property:mmap|mmap]]** //**(get, set)**//\\
[[:develop:api:efl:gfx:map|Efl.Gfx.Map]]\\
> **[[:develop:api:efl:gfx:map:method:lightning_3d_absolute|lightning_3d_absolute]]**, **[[:develop:api:efl:gfx:map:method:lightning_3d|lightning_3d]]**, **[[:develop:api:efl:gfx:map:method:map_has|map_has]]**, **[[:develop:api:efl:gfx:map:method:map_reset|map_reset]]**, **[[:develop:api:efl:gfx:map:method:perspective_3d_absolute|perspective_3d_absolute]]**, **[[:develop:api:efl:gfx:map:method:perspective_3d|perspective_3d]]**, **[[:develop:api:efl:gfx:map:method:rotate_3d_absolute|rotate_3d_absolute]]**, **[[:develop:api:efl:gfx:map:method:rotate_3d|rotate_3d]]**, **[[:develop:api:efl:gfx:map:method:rotate_absolute|rotate_absolute]]**, **[[:develop:api:efl:gfx:map:method:rotate_quat_absolute|rotate_quat_absolute]]**, **[[:develop:api:efl:gfx:map:method:rotate_quat|rotate_quat]]**, **[[:develop:api:efl:gfx:map:method:rotate|rotate]]**, **[[:develop:api:efl:gfx:map:method:translate|translate]]**, **[[:develop:api:efl:gfx:map:method:zoom_absolute|zoom_absolute]]**, **[[:develop:api:efl:gfx:map:method:zoom|zoom]]**, **[[:develop:api:efl:gfx:map:property:map_alpha|map_alpha]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_clockwise|map_clockwise]]** //**(get)**//, **[[:develop:api:efl:gfx:map:property:map_color|map_color]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_coord_absolute|map_coord_absolute]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_point_count|map_point_count]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_smooth|map_smooth]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_uv|map_uv]]** //**(get, set)**//\\
[[:develop:api:efl:gfx:size:hint|Efl.Gfx.Size.Hint]]\\
> **[[:develop:api:efl:gfx:size:hint:property:hint_base|hint_base]]** //**(get, set)**//, **[[:develop:api:efl:gfx:size:hint:property:hint_step|hint_step]]** //**(get, set)**//\\
[[:develop:api:efl:image:load|Efl.Image.Load]]\\
> **[[:develop:api:efl:image:load:method:load_async_cancel|load_async_cancel]]**, **[[:develop:api:efl:image:load:method:load_async_start|load_async_start]]**, **[[:develop:api:efl:image:load:property:load_dpi|load_dpi]]** //**(get, set)**//, **[[:develop:api:efl:image:load:property:load_error|load_error]]** //**(get)**//, **[[:develop:api:efl:image:load:property:load_orientation|load_orientation]]** //**(get, set)**//, **[[:develop:api:efl:image:load:property:load_region_support|load_region_support]]** //**(get)**//, **[[:develop:api:efl:image:load:property:load_region|load_region]]** //**(get, set)**//, **[[:develop:api:efl:image:load:property:load_scale_down|load_scale_down]]** //**(get, set)**//, **[[:develop:api:efl:image:load:property:load_skip_header|load_skip_header]]** //**(get, set)**//\\
[[:develop:api:efl:image|Efl.Image]]\\
> **[[:develop:api:efl:image:property:border_center_fill|border_center_fill]]** //**(get, set)**//, **[[:develop:api:efl:image:property:border_scale|border_scale]]** //**(get, set)**//, **[[:develop:api:efl:image:property:border|border]]** //**(get, set)**//, **[[:develop:api:efl:image:property:content_hint|content_hint]]** //**(get, set)**//, **[[:develop:api:efl:image:property:image_size|image_size]]** //**(get)**//, **[[:develop:api:efl:image:property:scale_hint|scale_hint]]** //**(get, set)**//\\
[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]**, **[[:develop:api:efl:object:method:composite_attach|composite_attach]]**, **[[:develop:api:efl:object:method:composite_detach|composite_detach]]**, **[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]**, **[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]**, **[[:develop:api:efl:object:method:event_freeze|event_freeze]]**, **[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]**, **[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]**, **[[:develop:api:efl:object:method:event_thaw|event_thaw]]**, **[[:develop:api:efl:object:method:name_find|name_find]]**, **[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**//, **[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**//, **[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**//, **[[:develop:api:efl:object:property:name|name]]** //**(get, set)**//, **[[:develop:api:efl:object:property:parent|parent]]** //**(get, set)**//\\
[[:develop:api:efl:player|Efl.Player]]\\
> **[[:develop:api:efl:player:property:play_speed|play_speed]]** //**(get, set)**//, **[[:develop:api:efl:player:property:playable|playable]]** //**(get)**//\\
[[:develop:api:efl:ui:base|Efl.Ui.Base]]\\
> **[[:develop:api:efl:ui:base:property:language|language]]** //**(get, set)**//, **[[:develop:api:efl:ui:base:property:mirrored_automatic|mirrored_automatic]]** //**(get, set)**//, **[[:develop:api:efl:ui:base:property:mirrored|mirrored]]** //**(get, set)**//\\
[[:develop:api:efl:canvas:group|Efl.Canvas.Group]]\\
> **[[:develop:api:efl:canvas:group:property:group_clipper|group_clipper]]** //**(get)**// ''protected''\\
[[:develop:api:efl:canvas:object|Efl.Canvas.Object]]\\
> **[[:develop:api:efl:canvas:object:property:render_parent|render_parent]]** //**(get)**// ''protected''
===== Events =====

**[[:develop:api:efl:canvas:video:event:button_change|button,change]]**\\
> %%Called when button changed%%
<code c>
EFL_CANVAS_VIDEO_EVENT_BUTTON_CHANGE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:button_num_change|button,num,change]]**\\
> %%Called when button number changed%%
<code c>
EFL_CANVAS_VIDEO_EVENT_BUTTON_NUM_CHANGE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:channels_change|channels,change]]**\\
> %%Called when the channels changed%%
<code c>
EFL_CANVAS_VIDEO_EVENT_CHANNELS_CHANGE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:frame_decode|frame,decode]]**\\
> %%Called when the frame was decoded%%
<code c>
EFL_CANVAS_VIDEO_EVENT_FRAME_DECODE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:frame_resize|frame,resize]]**\\
> %%Called when the frame was resized%%
<code c>
EFL_CANVAS_VIDEO_EVENT_FRAME_RESIZE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:length_change|length,change]]**\\
> %%Called when the length changed%%
<code c>
EFL_CANVAS_VIDEO_EVENT_LENGTH_CHANGE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:open_done|open,done]]**\\
> %%Called when the files was opened%%
<code c>
EFL_CANVAS_VIDEO_EVENT_OPEN_DONE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:playback_start|playback,start]]**\\
> %%Called when playback started%%
<code c>
EFL_CANVAS_VIDEO_EVENT_PLAYBACK_START(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:playback_stop|playback,stop]]**\\
> %%Called when playback stopped%%
<code c>
EFL_CANVAS_VIDEO_EVENT_PLAYBACK_STOP(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:position_change|position,change]]**\\
> %%Called when the position changed%%
<code c>
EFL_CANVAS_VIDEO_EVENT_POSITION_CHANGE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:position_load_done|position,load,done]]**\\
> %%Called when the position loaded%%
<code c>
EFL_CANVAS_VIDEO_EVENT_POSITION_LOAD_DONE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:position_load_fail|position,load,fail]]**\\
> %%Called when loading the position failed%%
<code c>
EFL_CANVAS_VIDEO_EVENT_POSITION_LOAD_FAIL(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:position_save_done|position,save,done]]**\\
> %%Called when the position was saved%%
<code c>
EFL_CANVAS_VIDEO_EVENT_POSITION_SAVE_DONE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:position_save_fail|position,save,fail]]**\\
> %%Called when saving the position failed%%
<code c>
EFL_CANVAS_VIDEO_EVENT_POSITION_SAVE_FAIL(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:progress_change|progress,change]]**\\
> %%Called when the progress changed%%
<code c>
EFL_CANVAS_VIDEO_EVENT_PROGRESS_CHANGE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:ref_change|ref,change]]**\\
> %%Called when ref changed%%
<code c>
EFL_CANVAS_VIDEO_EVENT_REF_CHANGE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:title_change|title,change]]**\\
> %%Called when the title changed%%
<code c>
EFL_CANVAS_VIDEO_EVENT_TITLE_CHANGE(void)
</code>
\\ **[[:develop:api:efl:canvas:video:event:volume_change|volume,change]]**\\
> %%Called when volume changed%%
<code c>
EFL_CANVAS_VIDEO_EVENT_VOLUME_CHANGE(void)
</code>
\\ ==== Inherited ====

[[:develop:api:efl:animator|Efl.Animator]]\\
> **[[:develop:api:efl:animator:event:animator_tick|animator,tick]]**\\
[[:develop:api:efl:gfx|Efl.Gfx]]\\
> **[[:develop:api:efl:gfx:event:changed|changed]]**, **[[:develop:api:efl:gfx:event:hide|hide]]**, **[[:develop:api:efl:gfx:event:move|move]]**, **[[:develop:api:efl:gfx:event:resize|resize]]**, **[[:develop:api:efl:gfx:event:show|show]]**\\
[[:develop:api:efl:gfx:size:hint|Efl.Gfx.Size.Hint]]\\
> **[[:develop:api:efl:gfx:size:hint:event:change_size_hints|change,size,hints]]**\\
[[:develop:api:efl:gfx:stack|Efl.Gfx.Stack]]\\
> **[[:develop:api:efl:gfx:stack:event:restack|restack]]**\\
[[:develop:api:efl:image|Efl.Image]]\\
> **[[:develop:api:efl:image:event:preload|preload]]**, **[[:develop:api:efl:image:event:resize|resize]]**, **[[:develop:api:efl:image:event:unload|unload]]**\\
[[:develop:api:efl:image:load|Efl.Image.Load]]\\
> **[[:develop:api:efl:image:load:event:load_cancelled|load,cancelled]]**, **[[:develop:api:efl:image:load:event:load_done|load,done]]**, **[[:develop:api:efl:image:load:event:load_error|load,error]]**\\
[[:develop:api:efl:input:interface|Efl.Input.Interface]]\\
> **[[:develop:api:efl:input:interface:event:finger_down|finger,down]]**, **[[:develop:api:efl:input:interface:event:finger_move|finger,move]]**, **[[:develop:api:efl:input:interface:event:finger_up|finger,up]]**, **[[:develop:api:efl:input:interface:event:focus_in|focus,in]]**, **[[:develop:api:efl:input:interface:event:focus_out|focus,out]]**, **[[:develop:api:efl:input:interface:event:hold|hold]]**, **[[:develop:api:efl:input:interface:event:key_down|key,down]]**, **[[:develop:api:efl:input:interface:event:key_up|key,up]]**, **[[:develop:api:efl:input:interface:event:pointer_axis|pointer,axis]]**, **[[:develop:api:efl:input:interface:event:pointer_cancel|pointer,cancel]]**, **[[:develop:api:efl:input:interface:event:pointer_down|pointer,down]]**, **[[:develop:api:efl:input:interface:event:pointer_in|pointer,in]]**, **[[:develop:api:efl:input:interface:event:pointer_move|pointer,move]]**, **[[:develop:api:efl:input:interface:event:pointer_out|pointer,out]]**, **[[:develop:api:efl:input:interface:event:pointer_up|pointer,up]]**, **[[:develop:api:efl:input:interface:event:pointer_wheel|pointer,wheel]]**\\
[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:event:callback_add|callback,add]]**\\
[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:event:callback_del|callback,del]]**, **[[:develop:api:efl:object:event:del|del]]**