~~Title: Efl.Canvas.Text.scale~~
===== Description =====

%%The scaling factor of an object.%%

%%This property is an individual scaling factor on the object (Edje or UI widget). This property (or Edje's global scaling factor, when applicable), will affect this object's part sizes. If scale is not zero, than the individual scaling will override any global scaling set, for the object obj's parts. Set it back to zero to get the effects of the global scaling again.%%

<note warning>
%%In Edje, only parts which, at EDC level, had the "scale" property set to 1, will be affected by this function. Check the complete "syntax reference" for EDC files.%%
</note>


{{page>:develop:api-include:efl:canvas:text:property:scale:description&nouser&nolink&nodate}}

===== Values =====

  * **scale** - %%The scaling factor (the default value is 0.0, meaning individual scaling is not set)%%
==== Getter ====

%%Gets an object's scaling factor.%%


{{page>:develop:api-include:efl:canvas:text:property:scale:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Sets the scaling factor of an object.%%
{{page>:develop:api-include:efl:canvas:text:property:scale:getter_description&nouser&nolink&nodate}}


//Overridden from [[:develop:api:efl:canvas:object:property:scale|Efl.Gfx.scale]] **(set)**.//===== Signature =====

<code>
@property scale @pure_virtual {
    get {
        values {
            scale: double (0.000000);
        }
    }
    set {
        values {
            scale: double (0.000000);
        }
    }
}
</code>

===== C signature =====

<code c>
double efl_gfx_scale_get(const Eo *obj);
void efl_gfx_scale_set(Eo *obj, double scale);
</code>

===== Implemented by =====

  * [[:develop:api:efl:gfx:property:scale|Efl.Gfx.scale]]

