~~Title: Efl.Canvas.Object.hint_max~~
===== Description =====

%%Hints on the object's maximum size.%%

%%This is not a size enforcement in any way, it's just a hint that should be used whenever appropriate.%%

%%The object container is in charge of fetching this property and placing the object accordingly.%%

%%Values -1 will be treated as unset hint components, when queried by managers.%%

<note>
%%Smart objects (such as elementary) can have their own size hint policy. So calling this API may or may not affect the size of smart objects.%%
</note>
{{page>:develop:api-include:efl:canvas:object:property:hint_max:description&nouser&nolink&nodate}}

===== Values =====

  * **sz** - %%Maximum size (hint) in pixels, (-1, -1) by default for canvas objects).%%

//Overridden from [[:develop:api:efl:gfx:size:hint:property:hint_max|Efl.Gfx.Size.Hint.hint_max]] **(get, set)**.//===== Signature =====

<code>
@property hint_max @pure_virtual {
    get {
        values {
            sz: Eina.Size2D;
        }
    }
    set {
        values {
            sz: Eina.Size2D;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Size2D efl_gfx_size_hint_max_get(const Eo *obj);
void efl_gfx_size_hint_max_set(Eo *obj, Eina_Size2D sz);
</code>

===== Implemented by =====

  * [[:develop:api:efl:gfx:size:hint:property:hint_max|Efl.Gfx.Size.Hint.hint_max]]

