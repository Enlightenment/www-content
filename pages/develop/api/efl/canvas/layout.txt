~~Title: Efl.Canvas.Layout~~
====== Efl.Canvas.Layout (class) ======

===== Description =====

%%Edje object class%%

{{page>:develop:api-include:efl:canvas:layout:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:canvas:group|Efl.Canvas.Group]] //(class)// => [[:develop:api:efl:canvas:object|Efl.Canvas.Object]] //(class)// => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_canvas_layout [fillcolor = "black", label = "Efl.Canvas.Layout", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_group [fillcolor = "gray15", label = "Efl.Canvas.Group", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_object [fillcolor = "gray15", label = "Efl.Canvas.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_stack [fillcolor = "gray15", label = "Efl.Gfx.Stack", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_animator [fillcolor = "gray15", label = "Efl.Animator", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_interface [fillcolor = "gray15", label = "Efl.Input.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_hint [fillcolor = "gray15", label = "Efl.Gfx.Size.Hint", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_map [fillcolor = "gray15", label = "Efl.Gfx.Map", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_loop_user [fillcolor = "gray15", label = "Efl.Loop_User", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_ui_base [fillcolor = "gray15", label = "Efl.Ui.Base", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_canvas_pointer [fillcolor = "gray15", label = "Efl.Canvas.Pointer", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_file [fillcolor = "gray15", label = "Efl.File", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_container [fillcolor = "gray15", label = "Efl.Container", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_part [fillcolor = "gray15", label = "Efl.Part", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_observer [fillcolor = "gray15", label = "Efl.Observer", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_ui_base [fillcolor = "gray15", label = "Efl.Ui.Base", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_layout_calc [fillcolor = "gray15", label = "Efl.Layout.Calc", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_layout_signal [fillcolor = "gray15", label = "Efl.Layout.Signal", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_layout_group [fillcolor = "gray15", label = "Efl.Layout.Group", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_player [fillcolor = "gray15", label = "Efl.Player", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_color_class [fillcolor = "gray15", label = "Efl.Gfx.Color_Class", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_text_class [fillcolor = "gray15", label = "Efl.Gfx.Text_Class", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_class [fillcolor = "gray15", label = "Efl.Gfx.Size_Class", color = "cornflowerblue", fontcolor = "white", style = "filled"]

    efl_canvas_layout -> efl_canvas_group
    efl_canvas_group -> efl_canvas_object
    efl_canvas_object -> efl_object
    efl_canvas_object -> efl_gfx
    efl_canvas_object -> efl_gfx_stack
    efl_canvas_object -> efl_animator
    efl_canvas_object -> efl_input_interface
    efl_canvas_object -> efl_gfx_size_hint
    efl_canvas_object -> efl_gfx_map
    efl_gfx_map -> efl_interface
    efl_gfx_map -> efl_object
    efl_canvas_object -> efl_loop_user
    efl_loop_user -> efl_object
    efl_canvas_object -> efl_ui_base
    efl_canvas_object -> efl_canvas_pointer
    efl_canvas_layout -> efl_file
    efl_canvas_layout -> efl_container
    efl_canvas_layout -> efl_part
    efl_canvas_layout -> efl_observer
    efl_canvas_layout -> efl_ui_base
    efl_canvas_layout -> efl_layout_calc
    efl_canvas_layout -> efl_layout_signal
    efl_canvas_layout -> efl_layout_group
    efl_canvas_layout -> efl_player
    efl_canvas_layout -> efl_gfx_color_class
    efl_canvas_layout -> efl_gfx_text_class
    efl_canvas_layout -> efl_gfx_size_class
}
</graphviz>

++++

++++ Full hierarchy |

  * [[:develop:api:efl:canvas:group|Efl.Canvas.Group]] //(class)//
    * [[:develop:api:efl:canvas:object|Efl.Canvas.Object]] //(class)//
      * [[:develop:api:efl:object|Efl.Object]] //(class)//
      * [[:develop:api:efl:gfx|Efl.Gfx]] //(interface)//
      * [[:develop:api:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
      * [[:develop:api:efl:animator|Efl.Animator]] //(interface)//
      * [[:develop:api:efl:input:interface|Efl.Input.Interface]] //(interface)//
      * [[:develop:api:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] //(interface)//
      * [[:develop:api:efl:gfx:map|Efl.Gfx.Map]] //(mixin)//
        * [[:develop:api:efl:interface|Efl.Interface]] //(interface)//
        * [[:develop:api:efl:object|Efl.Object]] //(class)//
      * [[:develop:api:efl:loop_user|Efl.Loop_User]] //(class)//
        * [[:develop:api:efl:object|Efl.Object]] //(class)//
      * [[:develop:api:efl:ui:base|Efl.Ui.Base]] //(interface)//
      * [[:develop:api:efl:canvas:pointer|Efl.Canvas.Pointer]] //(interface)//
  * [[:develop:api:efl:file|Efl.File]] //(mixin)//
  * [[:develop:api:efl:container|Efl.Container]] //(interface)//
  * [[:develop:api:efl:part|Efl.Part]] //(interface)//
  * [[:develop:api:efl:observer|Efl.Observer]] //(interface)//
  * [[:develop:api:efl:ui:base|Efl.Ui.Base]] //(interface)//
  * [[:develop:api:efl:layout:calc|Efl.Layout.Calc]] //(interface)//
  * [[:develop:api:efl:layout:signal|Efl.Layout.Signal]] //(interface)//
  * [[:develop:api:efl:layout:group|Efl.Layout.Group]] //(interface)//
  * [[:develop:api:efl:player|Efl.Player]] //(interface)//
  * [[:develop:api:efl:gfx:color_class|Efl.Gfx.Color_Class]] //(interface)//
  * [[:develop:api:efl:gfx:text_class|Efl.Gfx.Text_Class]] //(interface)//
  * [[:develop:api:efl:gfx:size_class|Efl.Gfx.Size_Class]] //(interface)//


++++
===== Members =====

**[[:develop:api:efl:canvas:layout:method:access_part_iterate|access_part_iterate]]**\\
> %%Iterates over all accessibility-enabled part names.%%
<code c>
Eina_Iterator *efl_canvas_layout_access_part_iterate(Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:calc_freeze|calc_freeze]]**// [Overridden from [[:develop:api:efl:layout:calc|Efl.Layout.Calc]]]//\\
> %%Freezes the layout object.%%
<code c>
int efl_layout_calc_freeze(Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:calc_parts_extends|calc_parts_extends]]**// [Overridden from [[:develop:api:efl:layout:calc|Efl.Layout.Calc]]]//\\
> %%Calculates the geometry of the region, relative to a given layout object's area, occupied by all parts in the object.%%
<code c>
Eina_Rect efl_layout_calc_parts_extends(Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:calc_size_min|calc_size_min]]**// [Overridden from [[:develop:api:efl:layout:calc|Efl.Layout.Calc]]]//\\
> %%Calculates the minimum required size for a given layout object.%%
<code c>
Eina_Size2D efl_layout_calc_size_min(Eo *obj, Eina_Size2D restricted);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:calc_thaw|calc_thaw]]**// [Overridden from [[:develop:api:efl:layout:calc|Efl.Layout.Calc]]]//\\
> %%Thaws the layout object.%%
<code c>
int efl_layout_calc_thaw(Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:color_class_clear|color_class_clear]]**// [Overridden from [[:develop:api:efl:gfx:color_class|Efl.Gfx.Color_Class]]]//\\
> %%Delete all color classes defined in object level.%%
<code c>
void efl_gfx_color_class_clear(Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:color_class_del|color_class_del]]**// [Overridden from [[:develop:api:efl:gfx:color_class|Efl.Gfx.Color_Class]]]//\\
> %%Delete the color class.%%
<code c>
void efl_gfx_color_class_del(Eo *obj, const char *color_class);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:constructor|constructor]]**// [Overridden from [[:develop:api:efl:object|Efl.Object]]]//\\
> %%Call the object's constructor.%%
<code c>
Efl_Object *efl_constructor(Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:content_remove|content_remove]]**// [Overridden from [[:develop:api:efl:container|Efl.Container]]]//\\
> %%Unswallow an object from this container.%%
<code c>
Eina_Bool efl_content_remove(Eo *obj, Efl_Gfx *content);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:debug_name_override|debug_name_override]]**// [Overridden from [[:develop:api:efl:object|Efl.Object]]]//\\
> %%Build a read-only name for this object used for debugging.%%
<code c>
void efl_debug_name_override(Eo *obj, Eina_Strbuf *sb);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:group_calculate|group_calculate]]**// [Overridden from [[:develop:api:efl:canvas:group|Efl.Canvas.Group]]]//\\
> %%Triggers an immediate recalculation of this object's geometry.%%
<code c>
void efl_canvas_group_calculate(Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:message_send|message_send]]**// [Overridden from [[:develop:api:efl:layout:signal|Efl.Layout.Signal]]]//\\
> %%Sends an (Edje) message to a given Edje object%%
<code c>
void efl_layout_signal_message_send(Eo *obj, int id, const Eina_Value msg);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:part|part]]**// [Overridden from [[:develop:api:efl:part|Efl.Part]]]//\\
> %%Returns %%[[:develop:api:efl:canvas:layout:part|Efl.Canvas.Layout.Part]]%%.%%
<code c>
Efl_Object *efl_part(const Eo *obj, const char *name);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:signal_callback_add|signal_callback_add]]**// [Overridden from [[:develop:api:efl:layout:signal|Efl.Layout.Signal]]]//\\
> %%Adds a callback for an arriving Edje signal, emitted by a given Edje object.%%
<code c>
Eina_Bool efl_layout_signal_callback_add(Eo *obj, const char *emission, const char *source, Efl_Signal_Cb func, void *data);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:signal_callback_del|signal_callback_del]]**// [Overridden from [[:develop:api:efl:layout:signal|Efl.Layout.Signal]]]//\\
> %%Removes a signal-triggered callback from an object.%%
<code c>
Eina_Bool efl_layout_signal_callback_del(Eo *obj, const char *emission, const char *source, Efl_Signal_Cb func, void *data);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:signal_emit|signal_emit]]**// [Overridden from [[:develop:api:efl:layout:signal|Efl.Layout.Signal]]]//\\
> %%Sends/emits an Edje signal to this layout.%%
<code c>
void efl_layout_signal_emit(Eo *obj, const char *emission, const char *source);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:signal_process|signal_process]]**// [Overridden from [[:develop:api:efl:layout:signal|Efl.Layout.Signal]]]//\\
> %%Processes an object's messages and signals queue.%%
<code c>
void efl_layout_signal_process(Eo *obj, Eina_Bool recurse);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:size_class_del|size_class_del]]**// [Overridden from [[:develop:api:efl:gfx:size_class|Efl.Gfx.Size_Class]]]//\\
> %%Delete the size class.%%
<code c>
void efl_gfx_size_class_del(Eo *obj, const char *size_class);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:text_class_del|text_class_del]]**// [Overridden from [[:develop:api:efl:gfx:text_class|Efl.Gfx.Text_Class]]]//\\
> %%Delete the text class.%%
<code c>
void efl_gfx_text_class_del(Eo *obj, const char *text_class);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:update|update]]**// [Overridden from [[:develop:api:efl:observer|Efl.Observer]]]//\\
> %%Update observer according to the changes of observable object.%%
<code c>
void efl_observer_update(Eo *obj, Efl_Object *obs, const char *key, void *data);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:animation|animation]]** //**(get, set)**//\\
> %%Whether this object is animating or not.%%
<code c>
Eina_Bool efl_canvas_layout_animation_get(const Eo *obj);
void efl_canvas_layout_animation_set(Eo *obj, Eina_Bool on);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:calc_auto_update_hints|calc_auto_update_hints]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:layout:calc|Efl.Layout.Calc]]]//\\
> %%Whether this object updates its size hints automatically.%%
<code c>
Eina_Bool efl_layout_calc_auto_update_hints_get(const Eo *obj);
void efl_layout_calc_auto_update_hints_set(Eo *obj, Eina_Bool update);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:color_class_description|color_class_description]]** //**(get)**//// [Overridden from [[:develop:api:efl:gfx:color_class|Efl.Gfx.Color_Class]]]//\\
> %%Get the description of a color class.%%
<code c>
const char *efl_gfx_color_class_description_get(const Eo *obj, const char *color_class);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:color_class|color_class]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx:color_class|Efl.Gfx.Color_Class]]]//
<code c>
Eina_Bool efl_gfx_color_class_get(const Eo *obj, const char *color_class, Efl_Gfx_Color_Class_Layer layer, int *r, int *g, int *b, int *a);
Eina_Bool efl_gfx_color_class_set(Eo *obj, const char *color_class, Efl_Gfx_Color_Class_Layer layer, int r, int g, int b, int a);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:group_data|group_data]]** //**(get)**//// [Overridden from [[:develop:api:efl:layout:group|Efl.Layout.Group]]]//\\
> %%Retrives an EDC data field's value from a given Edje object's group.%%
<code c>
const char *efl_layout_group_data_get(const Eo *obj, const char *key);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:group_size_max|group_size_max]]** //**(get)**//// [Overridden from [[:develop:api:efl:layout:group|Efl.Layout.Group]]]//\\
> %%Gets the maximum size specified -- as an EDC property -- for a given Edje object%%
<code c>
Eina_Size2D efl_layout_group_size_max_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:group_size_min|group_size_min]]** //**(get)**//// [Overridden from [[:develop:api:efl:layout:group|Efl.Layout.Group]]]//\\
> %%Gets the minimum size specified -- as an EDC property -- for a given Edje object%%
<code c>
Eina_Size2D efl_layout_group_size_min_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:item_provider|item_provider]]** //**(set)**//\\
> %%Sets the function that provides item objects for named items in an edje entry text%%
<code c>
void efl_canvas_layout_item_provider_set(Eo *obj, Edje_Item_Provider_Cb func, void *data);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:language|language]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:ui:base|Efl.Ui.Base]]]//\\
> %%The (human) language for this object.%%
<code c>
const char *efl_ui_language_get(const Eo *obj);
void efl_ui_language_set(Eo *obj, const char *language);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:load_error|load_error]]** //**(get)**//// [Overridden from [[:develop:api:efl:file|Efl.File]]]//\\
> %%Gets the (last) file loading error for a given object.%%
<code c>
Efl_Image_Load_Error efl_file_load_error_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:mirrored|mirrored]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:ui:base|Efl.Ui.Base]]]//\\
> %%Whether this object should be mirrored.%%
<code c>
Eina_Bool efl_ui_mirrored_get(const Eo *obj);
void efl_ui_mirrored_set(Eo *obj, Eina_Bool rtl);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:mmap|mmap]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:file|Efl.File]]]//
<code c>
void efl_file_mmap_get(const Eo *obj, const Eina_File **f, const char **key);
Eina_Bool efl_file_mmap_set(Eo *obj, const Eina_File *f, const char *key);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:no_render|no_render]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:canvas:object|Efl.Canvas.Object]]]//
<code c>
Eina_Bool efl_canvas_object_no_render_get(const Eo *obj);
void efl_canvas_object_no_render_set(Eo *obj, Eina_Bool enable);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:paragraph_direction|paragraph_direction]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:canvas:object|Efl.Canvas.Object]]]//\\
> %%This handles text paragraph direction of the given object. Even if the given object is not textblock or text, its smart child objects can inherit the paragraph direction from the given object. The default paragraph direction is %%''inherit''%%.%%
<code c>
Efl_Text_Bidirectional_Type efl_canvas_object_paragraph_direction_get(const Eo *obj);
void efl_canvas_object_paragraph_direction_set(Eo *obj, Efl_Text_Bidirectional_Type dir);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:play_speed|play_speed]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//\\
> %%Control the play speed of the media file.%%
<code c>
double efl_player_play_speed_get(const Eo *obj);
void efl_player_play_speed_set(Eo *obj, double speed);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:playable|playable]]** //**(get)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//\\
> %%Whether or not the object data can be played.%%
<code c>
Eina_Bool efl_player_playable_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:play|play]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//
<code c>
Eina_Bool efl_player_play_get(const Eo *obj);
void efl_player_play_set(Eo *obj, Eina_Bool play);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:position|position]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx|Efl.Gfx]]]//\\
> %%The 2D position of a canvas object.%%
<code c>
Eina_Position2D efl_gfx_position_get(const Eo *obj);
void efl_gfx_position_set(Eo *obj, Eina_Position2D pos);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:scale|scale]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx|Efl.Gfx]]]//\\
> %%The scaling factor of an object.%%
<code c>
double efl_gfx_scale_get(const Eo *obj);
void efl_gfx_scale_set(Eo *obj, double scale);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:seat_name|seat_name]]** //**(get)**//\\
> %%Gets the name given to a set by Edje.%%
<code c>
Eina_Stringshare *efl_canvas_layout_seat_name_get(const Eo *obj, Efl_Input_Device *device);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:seat|seat]]** //**(get)**//\\
> %%Returns the seat device given its Edje's name.%%
<code c>
Efl_Input_Device *efl_canvas_layout_seat_get(const Eo *obj, Eina_Stringshare *name);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:size_class|size_class]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx:size_class|Efl.Gfx.Size_Class]]]//
<code c>
Eina_Bool efl_gfx_size_class_get(const Eo *obj, const char *size_class, int *minw, int *minh, int *maxw, int *maxh);
Eina_Bool efl_gfx_size_class_set(Eo *obj, const char *size_class, int minw, int minh, int maxw, int maxh);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:size|size]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx|Efl.Gfx]]]//\\
> %%The 2D size of a canvas object.%%
<code c>
Eina_Size2D efl_gfx_size_get(const Eo *obj);
void efl_gfx_size_set(Eo *obj, Eina_Size2D size);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:text_class|text_class]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx:text_class|Efl.Gfx.Text_Class]]]//
<code c>
Eina_Bool efl_gfx_text_class_get(const Eo *obj, const char *text_class, const char **font, Efl_Font_Size *size);
Eina_Bool efl_gfx_text_class_set(Eo *obj, const char *text_class, const char *font, Efl_Font_Size size);
</code>
\\
**[[:develop:api:efl:canvas:layout:property:visible|visible]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx|Efl.Gfx]]]//\\
> %%The visibility of a canvas object.%%
<code c>
Eina_Bool efl_gfx_visible_get(const Eo *obj);
void efl_gfx_visible_set(Eo *obj, Eina_Bool v);
</code>
\\
**[[:develop:api:efl:canvas:layout:method:calc_force|calc_force]]**// [Overridden from [[:develop:api:efl:layout:calc|Efl.Layout.Calc]]]// ''protected''\\
> %%Forces a Size/Geometry calculation.%%
<code c>
void efl_layout_calc_force(Eo *obj);
</code>
\\

==== Inherited ====

[[:develop:api:efl:canvas:group|Efl.Canvas.Group]]\\
> **[[:develop:api:efl:canvas:group:method:destructor|destructor]]**, **[[:develop:api:efl:canvas:group:method:group_change|group_change]]**, **[[:develop:api:efl:canvas:group:method:group_member_add|group_member_add]]**, **[[:develop:api:efl:canvas:group:method:group_member_del|group_member_del]]**, **[[:develop:api:efl:canvas:group:method:group_member_is|group_member_is]]**, **[[:develop:api:efl:canvas:group:method:group_members_iterate|group_members_iterate]]**, **[[:develop:api:efl:canvas:group:property:clip|clip]]** //**(get, set)**//, **[[:develop:api:efl:canvas:group:property:color|color]]** //**(get, set)**//, **[[:develop:api:efl:canvas:group:property:group_need_recalculate|group_need_recalculate]]** //**(get, set)**//\\
[[:develop:api:efl:canvas:object|Efl.Canvas.Object]]\\
> **[[:develop:api:efl:canvas:object:method:clipees_has|clipees_has]]**, **[[:develop:api:efl:canvas:object:method:del|del]]**, **[[:develop:api:efl:canvas:object:method:finalize|finalize]]**, **[[:develop:api:efl:canvas:object:method:key_grab|key_grab]]**, **[[:develop:api:efl:canvas:object:method:key_ungrab|key_ungrab]]**, **[[:develop:api:efl:canvas:object:method:lower|lower]]**, **[[:develop:api:efl:canvas:object:method:provider_find|provider_find]]**, **[[:develop:api:efl:canvas:object:method:raise|raise]]**, **[[:develop:api:efl:canvas:object:method:seat_focus_add|seat_focus_add]]**, **[[:develop:api:efl:canvas:object:method:seat_focus_check|seat_focus_check]]**, **[[:develop:api:efl:canvas:object:method:seat_focus_del|seat_focus_del]]**, **[[:develop:api:efl:canvas:object:method:stack_above|stack_above]]**, **[[:develop:api:efl:canvas:object:method:stack_below|stack_below]]**, **[[:develop:api:efl:canvas:object:property:above|above]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:anti_alias|anti_alias]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:below|below]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:clipees|clipees]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:coords_inside|coords_inside]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:event_animation|event_animation]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:freeze_events|freeze_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:geometry|geometry]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_align|hint_align]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_aspect|hint_aspect]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_combined_min|hint_combined_min]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:hint_margin|hint_margin]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_max|hint_max]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_min|hint_min]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_restricted_min|hint_restricted_min]]** //**(get, set)**// ''protected set'', **[[:develop:api:efl:canvas:object:property:hint_weight|hint_weight]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:is_frame_object|is_frame_object]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:key_focus|key_focus]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:layer|layer]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:loop|loop]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:pass_events|pass_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:pointer_inside|pointer_inside]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:pointer_mode_by_device|pointer_mode_by_device]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:pointer_mode|pointer_mode]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:precise_is_inside|precise_is_inside]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:propagate_events|propagate_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:render_op|render_op]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:repeat_events|repeat_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:seat_event_filter|seat_event_filter]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:seat_focus|seat_focus]]** //**(get)**//\\
[[:develop:api:efl:container|Efl.Container]]\\
> **[[:develop:api:efl:container:method:content_count|content_count]]**, **[[:develop:api:efl:container:method:content_iterate|content_iterate]]**\\
[[:develop:api:efl:file|Efl.File]]\\
> **[[:develop:api:efl:file:method:save|save]]**, **[[:develop:api:efl:file:property:file|file]]** //**(get, set)**//\\
[[:develop:api:efl:gfx:map|Efl.Gfx.Map]]\\
> **[[:develop:api:efl:gfx:map:method:lightning_3d_absolute|lightning_3d_absolute]]**, **[[:develop:api:efl:gfx:map:method:lightning_3d|lightning_3d]]**, **[[:develop:api:efl:gfx:map:method:map_has|map_has]]**, **[[:develop:api:efl:gfx:map:method:map_reset|map_reset]]**, **[[:develop:api:efl:gfx:map:method:perspective_3d_absolute|perspective_3d_absolute]]**, **[[:develop:api:efl:gfx:map:method:perspective_3d|perspective_3d]]**, **[[:develop:api:efl:gfx:map:method:rotate_3d_absolute|rotate_3d_absolute]]**, **[[:develop:api:efl:gfx:map:method:rotate_3d|rotate_3d]]**, **[[:develop:api:efl:gfx:map:method:rotate_absolute|rotate_absolute]]**, **[[:develop:api:efl:gfx:map:method:rotate_quat_absolute|rotate_quat_absolute]]**, **[[:develop:api:efl:gfx:map:method:rotate_quat|rotate_quat]]**, **[[:develop:api:efl:gfx:map:method:rotate|rotate]]**, **[[:develop:api:efl:gfx:map:method:translate|translate]]**, **[[:develop:api:efl:gfx:map:method:zoom_absolute|zoom_absolute]]**, **[[:develop:api:efl:gfx:map:method:zoom|zoom]]**, **[[:develop:api:efl:gfx:map:property:map_alpha|map_alpha]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_clockwise|map_clockwise]]** //**(get)**//, **[[:develop:api:efl:gfx:map:property:map_color|map_color]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_coord_absolute|map_coord_absolute]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_point_count|map_point_count]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_smooth|map_smooth]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_uv|map_uv]]** //**(get, set)**//\\
[[:develop:api:efl:gfx:size:hint|Efl.Gfx.Size.Hint]]\\
> **[[:develop:api:efl:gfx:size:hint:property:hint_base|hint_base]]** //**(get, set)**//, **[[:develop:api:efl:gfx:size:hint:property:hint_step|hint_step]]** //**(get, set)**//\\
[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]**, **[[:develop:api:efl:object:method:composite_attach|composite_attach]]**, **[[:develop:api:efl:object:method:composite_detach|composite_detach]]**, **[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]**, **[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]**, **[[:develop:api:efl:object:method:event_freeze|event_freeze]]**, **[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]**, **[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]**, **[[:develop:api:efl:object:method:event_thaw|event_thaw]]**, **[[:develop:api:efl:object:method:name_find|name_find]]**, **[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**//, **[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**//, **[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**//, **[[:develop:api:efl:object:property:name|name]]** //**(get, set)**//, **[[:develop:api:efl:object:property:parent|parent]]** //**(get, set)**//\\
[[:develop:api:efl:player|Efl.Player]]\\
> **[[:develop:api:efl:player:property:length|length]]** //**(get)**//, **[[:develop:api:efl:player:property:mute|mute]]** //**(get, set)**//, **[[:develop:api:efl:player:property:position|position]]** //**(get, set)**//, **[[:develop:api:efl:player:property:progress|progress]]** //**(get)**//, **[[:develop:api:efl:player:property:seekable|seekable]]** //**(get)**//, **[[:develop:api:efl:player:property:volume|volume]]** //**(get, set)**//\\
[[:develop:api:efl:ui:base|Efl.Ui.Base]]\\
> **[[:develop:api:efl:ui:base:property:mirrored_automatic|mirrored_automatic]]** //**(get, set)**//\\
[[:develop:api:efl:canvas:group|Efl.Canvas.Group]]\\
> **[[:develop:api:efl:canvas:group:property:group_clipper|group_clipper]]** //**(get)**// ''protected''\\
[[:develop:api:efl:canvas:object|Efl.Canvas.Object]]\\
> **[[:develop:api:efl:canvas:object:property:render_parent|render_parent]]** //**(get)**// ''protected''
===== Events =====

==== Inherited ====

[[:develop:api:efl:animator|Efl.Animator]]\\
> **[[:develop:api:efl:animator:event:animator_tick|animator,tick]]**\\
[[:develop:api:efl:container|Efl.Container]]\\
> **[[:develop:api:efl:container:event:content_added|content,added]]**, **[[:develop:api:efl:container:event:content_removed|content,removed]]**\\
[[:develop:api:efl:gfx|Efl.Gfx]]\\
> **[[:develop:api:efl:gfx:event:changed|changed]]**, **[[:develop:api:efl:gfx:event:hide|hide]]**, **[[:develop:api:efl:gfx:event:move|move]]**, **[[:develop:api:efl:gfx:event:resize|resize]]**, **[[:develop:api:efl:gfx:event:show|show]]**\\
[[:develop:api:efl:gfx:size:hint|Efl.Gfx.Size.Hint]]\\
> **[[:develop:api:efl:gfx:size:hint:event:change_size_hints|change,size,hints]]**\\
[[:develop:api:efl:gfx:stack|Efl.Gfx.Stack]]\\
> **[[:develop:api:efl:gfx:stack:event:restack|restack]]**\\
[[:develop:api:efl:input:interface|Efl.Input.Interface]]\\
> **[[:develop:api:efl:input:interface:event:finger_down|finger,down]]**, **[[:develop:api:efl:input:interface:event:finger_move|finger,move]]**, **[[:develop:api:efl:input:interface:event:finger_up|finger,up]]**, **[[:develop:api:efl:input:interface:event:focus_in|focus,in]]**, **[[:develop:api:efl:input:interface:event:focus_out|focus,out]]**, **[[:develop:api:efl:input:interface:event:hold|hold]]**, **[[:develop:api:efl:input:interface:event:key_down|key,down]]**, **[[:develop:api:efl:input:interface:event:key_up|key,up]]**, **[[:develop:api:efl:input:interface:event:pointer_axis|pointer,axis]]**, **[[:develop:api:efl:input:interface:event:pointer_cancel|pointer,cancel]]**, **[[:develop:api:efl:input:interface:event:pointer_down|pointer,down]]**, **[[:develop:api:efl:input:interface:event:pointer_in|pointer,in]]**, **[[:develop:api:efl:input:interface:event:pointer_move|pointer,move]]**, **[[:develop:api:efl:input:interface:event:pointer_out|pointer,out]]**, **[[:develop:api:efl:input:interface:event:pointer_up|pointer,up]]**, **[[:develop:api:efl:input:interface:event:pointer_wheel|pointer,wheel]]**\\
[[:develop:api:efl:layout:calc|Efl.Layout.Calc]]\\
> **[[:develop:api:efl:layout:calc:event:circular_dependency|circular,dependency]]**, **[[:develop:api:efl:layout:calc:event:recalc|recalc]]**\\
[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:event:callback_add|callback,add]]**, **[[:develop:api:efl:object:event:callback_del|callback,del]]**\\
[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:event:del|del]]**