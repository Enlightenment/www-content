~~Title: Efl.Canvas.Layout.Part.drag_step~~
===== Description =====

%%The drag step increment.%%

%%Values for %%''dx''%% and %%''dy''%% are real numbers that range from 0 to 1, representing the relative size of the dragable area on that axis by which the part will be moved.%%

%%This differs from %%[[:develop:api:efl:ui:drag:property:drag_page|Efl.Ui.Drag.drag_page]]%% in that this is meant to represent a unit increment, like a single line for example.%%

%%See also %%[[:develop:api:efl:ui:drag:property:drag_page|Efl.Ui.Drag.drag_page]]%%.%%

//Since 1.20//


{{page>:develop:api-include:efl:canvas:layout:part:property:drag_step:description&nouser&nolink&nodate}}

===== Values =====

  * **dx** - %%The x step relative amount, from 0 to 1.%%
  * **dy** - %%The y step relative amount, from 0 to 1.%%
==== Getter ====

%%Gets the x and y step increments for the dragable object.%%

//Since 1.20//


{{page>:develop:api-include:efl:canvas:layout:part:property:drag_step:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Sets the x,y step increments for a dragable object.%%

//Since 1.20//
{{page>:develop:api-include:efl:canvas:layout:part:property:drag_step:getter_description&nouser&nolink&nodate}}


//Overridden from [[:develop:api:efl:ui:drag:property:drag_step|Efl.Ui.Drag.drag_step]] **(get, set)**.//===== Signature =====

<code>
@property drag_step @pure_virtual {
    get {
        values {
            dx: double;
            dy: double;
        }
        return: bool;
    }
    set {
        values {
            dx: double;
            dy: double;
        }
        return: bool;
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_ui_drag_step_get(const Eo *obj, double *dx, double *dy);
Eina_Bool efl_ui_drag_step_set(Eo *obj, double dx, double dy);
</code>

===== Implemented by =====

  * [[:develop:api:efl:ui:drag:property:drag_step|Efl.Ui.Drag.drag_step]]

