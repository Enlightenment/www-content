~~Title: Efl.Canvas.image_max_size~~
===== Signature =====

<code>
@property image_max_size @pure_virtual {
    get {
        values {
            max: Eina.Size2D;
        }
        return: bool;
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_canvas_image_max_size_get(const Eo *obj, Eina_Size2D *max);
</code>

===== Values =====

  * **max** - %%The maximum image size (in pixels).%%
===== Description =====

%%Get the maximum image size evas can possibly handle.%%

%%This function returns the largest image or surface size that evas can handle in pixels, and if there is one, returns %%''true''%%. It returns %%''false''%% if no extra constraint on maximum image size exists. You still should check the return values of %%''maxw''%% and %%''maxh''%% as there may still be a limit, just a much higher one.%%

{{page>:develop:api-include:efl:canvas:property:image_max_size:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Canvas.image_max_size**

