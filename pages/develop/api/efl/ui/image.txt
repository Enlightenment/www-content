~~Title: Efl.Ui.Image~~
====== Efl.Ui.Image (class) ======

===== Description =====

%%Efl UI image class%%

{{page>:develop:api-include:efl:ui:image:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:elm:widget|Elm.Widget]] //(class)// => [[:develop:api:efl:canvas:group|Efl.Canvas.Group]] //(class)// => [[:develop:api:efl:canvas:object|Efl.Canvas.Object]] //(class)// => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_ui_image [fillcolor = "black", label = "Efl.Ui.Image", color = "gray15", fontcolor = "white", style = "filled"]
    elm_widget [fillcolor = "gray15", label = "Elm.Widget", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_group [fillcolor = "gray15", label = "Efl.Canvas.Group", color = "gray15", fontcolor = "white", style = "filled"]
    efl_canvas_object [fillcolor = "gray15", label = "Efl.Canvas.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_gfx [fillcolor = "gray15", label = "Efl.Gfx", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_stack [fillcolor = "gray15", label = "Efl.Gfx.Stack", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_animator [fillcolor = "gray15", label = "Efl.Animator", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_interface [fillcolor = "gray15", label = "Efl.Input.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_size_hint [fillcolor = "gray15", label = "Efl.Gfx.Size.Hint", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_map [fillcolor = "gray15", label = "Efl.Gfx.Map", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_loop_user [fillcolor = "gray15", label = "Efl.Loop_User", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_ui_base [fillcolor = "gray15", label = "Efl.Ui.Base", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_canvas_pointer [fillcolor = "gray15", label = "Efl.Canvas.Pointer", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_access [fillcolor = "gray15", label = "Efl.Access", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_access_component [fillcolor = "gray15", label = "Efl.Access.Component", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_ui_focus_user [fillcolor = "gray15", label = "Efl.Ui.Focus.User", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_part [fillcolor = "gray15", label = "Efl.Part", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_ui_focus_object [fillcolor = "gray15", label = "Efl.Ui.Focus.Object", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_ui_base [fillcolor = "gray15", label = "Efl.Ui.Base", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_ui_cursor [fillcolor = "gray15", label = "Efl.Ui.Cursor", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_ui_translatable [fillcolor = "gray15", label = "Efl.Ui.Translatable", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_ui_clickable [fillcolor = "gray15", label = "Efl.Ui.Clickable", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_ui_draggable [fillcolor = "gray15", label = "Efl.Ui.Draggable", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_file [fillcolor = "gray15", label = "Efl.File", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_image [fillcolor = "gray15", label = "Efl.Image", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_image_load [fillcolor = "gray15", label = "Efl.Image.Load", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_player [fillcolor = "gray15", label = "Efl.Player", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_gfx_view [fillcolor = "gray15", label = "Efl.Gfx.View", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_access_image [fillcolor = "gray15", label = "Efl.Access.Image", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_access_widget_action [fillcolor = "gray15", label = "Efl.Access.Widget.Action", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_access_action [fillcolor = "gray15", label = "Efl.Access.Action", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_orientation [fillcolor = "gray15", label = "Efl.Orientation", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_flipable [fillcolor = "gray15", label = "Efl.Flipable", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_ui_view [fillcolor = "gray15", label = "Efl.Ui.View", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_ui_model_connect [fillcolor = "gray15", label = "Efl.Ui.Model.Connect", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_layout_calc [fillcolor = "gray15", label = "Efl.Layout.Calc", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_layout_group [fillcolor = "gray15", label = "Efl.Layout.Group", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_layout_signal [fillcolor = "gray15", label = "Efl.Layout.Signal", color = "cornflowerblue", fontcolor = "white", style = "filled"]

    efl_ui_image -> elm_widget
    elm_widget -> efl_canvas_group
    efl_canvas_group -> efl_canvas_object
    efl_canvas_object -> efl_object
    efl_canvas_object -> efl_gfx
    efl_canvas_object -> efl_gfx_stack
    efl_canvas_object -> efl_animator
    efl_canvas_object -> efl_input_interface
    efl_canvas_object -> efl_gfx_size_hint
    efl_canvas_object -> efl_gfx_map
    efl_gfx_map -> efl_interface
    efl_gfx_map -> efl_object
    efl_canvas_object -> efl_loop_user
    efl_loop_user -> efl_object
    efl_canvas_object -> efl_ui_base
    efl_canvas_object -> efl_canvas_pointer
    elm_widget -> efl_access
    efl_access -> efl_interface
    efl_access -> efl_object
    elm_widget -> efl_access_component
    elm_widget -> efl_ui_focus_user
    elm_widget -> efl_part
    elm_widget -> efl_ui_focus_object
    elm_widget -> efl_ui_base
    elm_widget -> efl_ui_cursor
    elm_widget -> efl_ui_translatable
    efl_ui_image -> efl_ui_clickable
    efl_ui_image -> efl_ui_draggable
    efl_ui_image -> efl_file
    efl_ui_image -> efl_image
    efl_ui_image -> efl_image_load
    efl_ui_image -> efl_player
    efl_ui_image -> efl_gfx_view
    efl_ui_image -> efl_access_image
    efl_ui_image -> efl_access_widget_action
    efl_access_widget_action -> efl_access_action
    efl_ui_image -> efl_orientation
    efl_ui_image -> efl_flipable
    efl_ui_image -> efl_ui_view
    efl_ui_image -> efl_ui_model_connect
    efl_ui_image -> efl_layout_calc
    efl_ui_image -> efl_layout_group
    efl_ui_image -> efl_layout_signal
}
</graphviz>

++++

++++ Full hierarchy |

  * [[:develop:api:elm:widget|Elm.Widget]] //(class)//
    * [[:develop:api:efl:canvas:group|Efl.Canvas.Group]] //(class)//
      * [[:develop:api:efl:canvas:object|Efl.Canvas.Object]] //(class)//
        * [[:develop:api:efl:object|Efl.Object]] //(class)//
        * [[:develop:api:efl:gfx|Efl.Gfx]] //(interface)//
        * [[:develop:api:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
        * [[:develop:api:efl:animator|Efl.Animator]] //(interface)//
        * [[:develop:api:efl:input:interface|Efl.Input.Interface]] //(interface)//
        * [[:develop:api:efl:gfx:size:hint|Efl.Gfx.Size.Hint]] //(interface)//
        * [[:develop:api:efl:gfx:map|Efl.Gfx.Map]] //(mixin)//
          * [[:develop:api:efl:interface|Efl.Interface]] //(interface)//
          * [[:develop:api:efl:object|Efl.Object]] //(class)//
        * [[:develop:api:efl:loop_user|Efl.Loop_User]] //(class)//
          * [[:develop:api:efl:object|Efl.Object]] //(class)//
        * [[:develop:api:efl:ui:base|Efl.Ui.Base]] //(interface)//
        * [[:develop:api:efl:canvas:pointer|Efl.Canvas.Pointer]] //(interface)//
    * [[:develop:api:efl:access|Efl.Access]] //(mixin)//
      * [[:develop:api:efl:interface|Efl.Interface]] //(interface)//
      * [[:develop:api:efl:object|Efl.Object]] //(class)//
    * [[:develop:api:efl:access:component|Efl.Access.Component]] //(mixin)//
    * [[:develop:api:efl:ui:focus:user|Efl.Ui.Focus.User]] //(interface)//
    * [[:develop:api:efl:part|Efl.Part]] //(interface)//
    * [[:develop:api:efl:ui:focus:object|Efl.Ui.Focus.Object]] //(mixin)//
    * [[:develop:api:efl:ui:base|Efl.Ui.Base]] //(interface)//
    * [[:develop:api:efl:ui:cursor|Efl.Ui.Cursor]] //(interface)//
    * [[:develop:api:efl:ui:translatable|Efl.Ui.Translatable]] //(interface)//
  * [[:develop:api:efl:ui:clickable|Efl.Ui.Clickable]] //(interface)//
  * [[:develop:api:efl:ui:draggable|Efl.Ui.Draggable]] //(interface)//
  * [[:develop:api:efl:file|Efl.File]] //(mixin)//
  * [[:develop:api:efl:image|Efl.Image]] //(interface)//
  * [[:develop:api:efl:image:load|Efl.Image.Load]] //(interface)//
  * [[:develop:api:efl:player|Efl.Player]] //(interface)//
  * [[:develop:api:efl:gfx:view|Efl.Gfx.View]] //(interface)//
  * [[:develop:api:efl:access:image|Efl.Access.Image]] //(mixin)//
  * [[:develop:api:efl:access:widget:action|Efl.Access.Widget.Action]] //(mixin)//
    * [[:develop:api:efl:access:action|Efl.Access.Action]] //(mixin)//
  * [[:develop:api:efl:orientation|Efl.Orientation]] //(interface)//
  * [[:develop:api:efl:flipable|Efl.Flipable]] //(interface)//
  * [[:develop:api:efl:ui:view|Efl.Ui.View]] //(interface)//
  * [[:develop:api:efl:ui:model:connect|Efl.Ui.Model.Connect]] //(interface)//
  * [[:develop:api:efl:layout:calc|Efl.Layout.Calc]] //(interface)//
  * [[:develop:api:efl:layout:group|Efl.Layout.Group]] //(interface)//
  * [[:develop:api:efl:layout:signal|Efl.Layout.Signal]] //(interface)//


++++
===== Members =====

**[[:develop:api:efl:ui:image:method:calc_size_min|calc_size_min]]**// [Overridden from [[:develop:api:efl:layout:calc|Efl.Layout.Calc]]]//\\
> %%Calculates the minimum required size for a given layout object.%%
<code c>
Eina_Size2D efl_layout_calc_size_min(Eo *obj, Eina_Size2D restricted);
</code>
\\
**[[:develop:api:efl:ui:image:method:connect|connect]]**// [Overridden from [[:develop:api:efl:ui:model:connect|Efl.Ui.Model.Connect]]]//\\
> %%Connect property%%
<code c>
void efl_ui_model_connect(Eo *obj, const char *name, const char *property);
</code>
\\
**[[:develop:api:efl:ui:image:method:constructor|constructor]]**// [Overridden from [[:develop:api:efl:object|Efl.Object]]]//\\
> %%Call the object's constructor.%%
<code c>
Efl_Object *efl_constructor(Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:image:method:group_member_add|group_member_add]]**// [Overridden from [[:develop:api:efl:canvas:group|Efl.Canvas.Group]]]//\\
> %%Set a canvas object as a member of a given group (or smart object).%%
<code c>
void efl_canvas_group_member_add(Eo *obj, Efl_Canvas_Object *sub_obj);
</code>
\\
**[[:develop:api:efl:ui:image:method:signal_emit|signal_emit]]**// [Overridden from [[:develop:api:efl:layout:signal|Efl.Layout.Signal]]]//\\
> %%Sends/emits an Edje signal to this layout.%%
<code c>
void efl_layout_signal_emit(Eo *obj, const char *emission, const char *source);
</code>
\\
**[[:develop:api:efl:ui:image:property:align|align]]** //**(get, set)**//\\
> %%Control how the internal image is positioned inside an image object.%%
<code c>
void efl_ui_image_align_get(const Eo *obj, double *align_x, double *align_y);
void efl_ui_image_align_set(Eo *obj, double align_x, double align_y);
</code>
\\
**[[:develop:api:efl:ui:image:property:clip|clip]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:canvas:object|Efl.Canvas.Object]]]//
<code c>
Efl_Canvas_Object *efl_canvas_object_clip_get(const Eo *obj);
void efl_canvas_object_clip_set(Eo *obj, Efl_Canvas_Object *clip);
</code>
\\
**[[:develop:api:efl:ui:image:property:color|color]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx|Efl.Gfx]]]//
<code c>
void efl_gfx_color_get(const Eo *obj, int *r, int *g, int *b, int *a);
void efl_gfx_color_set(Eo *obj, int r, int g, int b, int a);
</code>
\\
**[[:develop:api:efl:ui:image:property:drag_target|drag_target]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:ui:draggable|Efl.Ui.Draggable]]]//\\
> %%Control whether the object's content is changed by drag and drop.%%
<code c>
Eina_Bool efl_ui_draggable_drag_target_get(const Eo *obj);
void efl_ui_draggable_drag_target_set(Eo *obj, Eina_Bool set);
</code>
\\
**[[:develop:api:efl:ui:image:property:file|file]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:file|Efl.File]]]//
<code c>
void efl_file_get(const Eo *obj, const char **file, const char **key);
Eina_Bool efl_file_set(Eo *obj, const char *file, const char *key);
</code>
\\
**[[:develop:api:efl:ui:image:property:flip|flip]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:flipable|Efl.Flipable]]]//\\
> %%Control the flip of the given image%%
<code c>
Efl_Flip efl_flip_get(const Eo *obj);
void efl_flip_set(Eo *obj, Efl_Flip flip);
</code>
\\
**[[:develop:api:efl:ui:image:property:group_size_max|group_size_max]]** //**(get)**//// [Overridden from [[:develop:api:efl:layout:group|Efl.Layout.Group]]]//\\
> %%Gets the maximum size specified -- as an EDC property -- for a given Edje object%%
<code c>
Eina_Size2D efl_layout_group_size_max_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:image:property:group_size_min|group_size_min]]** //**(get)**//// [Overridden from [[:develop:api:efl:layout:group|Efl.Layout.Group]]]//\\
> %%Gets the minimum size specified -- as an EDC property -- for a given Edje object%%
<code c>
Eina_Size2D efl_layout_group_size_min_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:image:property:icon|icon]]** //**(get, set)**//
<code c>
const char *efl_ui_image_icon_get(const Eo *obj);
Eina_Bool efl_ui_image_icon_set(Eo *obj, const char *name);
</code>
\\
**[[:develop:api:efl:ui:image:property:image_size|image_size]]** //**(get)**//// [Overridden from [[:develop:api:efl:image|Efl.Image]]]//\\
> %%This represents the size of the original image in pixels.%%
<code c>
Eina_Size2D efl_image_size_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:image:property:load_size|load_size]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:image:load|Efl.Image.Load]]]//\\
> %%The load size of an image.%%
<code c>
Eina_Size2D efl_image_load_size_get(const Eo *obj);
void efl_image_load_size_set(Eo *obj, Eina_Size2D size);
</code>
\\
**[[:develop:api:efl:ui:image:property:mmap|mmap]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:file|Efl.File]]]//
<code c>
void efl_file_mmap_get(const Eo *obj, const Eina_File **f, const char **key);
Eina_Bool efl_file_mmap_set(Eo *obj, const Eina_File *f, const char *key);
</code>
\\
**[[:develop:api:efl:ui:image:property:model|model]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:ui:view|Efl.Ui.View]]]//\\
> %%Model that is/will be%%
<code c>
Efl_Model *efl_ui_view_model_get(const Eo *obj);
void efl_ui_view_model_set(Eo *obj, Efl_Model *model);
</code>
\\
**[[:develop:api:efl:ui:image:property:orientation|orientation]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:orientation|Efl.Orientation]]]//\\
> %%Control the orientation of a given object.%%
<code c>
Efl_Orient efl_orientation_get(const Eo *obj);
void efl_orientation_set(Eo *obj, Efl_Orient dir);
</code>
\\
**[[:develop:api:efl:ui:image:property:playable|playable]]** //**(get)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//\\
> %%Whether or not the object data can be played.%%
<code c>
Eina_Bool efl_player_playable_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:image:property:play|play]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:player|Efl.Player]]]//
<code c>
Eina_Bool efl_player_play_get(const Eo *obj);
void efl_player_play_set(Eo *obj, Eina_Bool play);
</code>
\\
**[[:develop:api:efl:ui:image:property:position|position]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx|Efl.Gfx]]]//\\
> %%The 2D position of a canvas object.%%
<code c>
Eina_Position2D efl_gfx_position_get(const Eo *obj);
void efl_gfx_position_set(Eo *obj, Eina_Position2D pos);
</code>
\\
**[[:develop:api:efl:ui:image:property:scalable|scalable]]** //**(get, set)**//\\
> %%Enable or disable scaling up or down the internal image.%%
<code c>
void efl_ui_image_scalable_get(const Eo *obj, Eina_Bool *scale_up, Eina_Bool *scale_down);
void efl_ui_image_scalable_set(Eo *obj, Eina_Bool scale_up, Eina_Bool scale_down);
</code>
\\
**[[:develop:api:efl:ui:image:property:scale_type|scale_type]]** //**(get, set)**//\\
> %%Control how the internal image is scaled.%%
<code c>
Efl_Ui_Image_Scale_Type efl_ui_image_scale_type_get(const Eo *obj);
void efl_ui_image_scale_type_set(Eo *obj, Efl_Ui_Image_Scale_Type scale_type);
</code>
\\
**[[:develop:api:efl:ui:image:property:size|size]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx|Efl.Gfx]]]//\\
> %%The 2D size of a canvas object.%%
<code c>
Eina_Size2D efl_gfx_size_get(const Eo *obj);
void efl_gfx_size_set(Eo *obj, Eina_Size2D size);
</code>
\\
**[[:develop:api:efl:ui:image:property:smooth_scale|smooth_scale]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:image|Efl.Image]]]//\\
> %%Whether to use high-quality image scaling algorithm for this image.%%
<code c>
Eina_Bool efl_image_smooth_scale_get(const Eo *obj);
void efl_image_smooth_scale_set(Eo *obj, Eina_Bool smooth_scale);
</code>
\\
**[[:develop:api:efl:ui:image:property:view_size|view_size]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx:view|Efl.Gfx.View]]]//\\
> %%The dimensions of this object's viewport.%%
<code c>
Eina_Size2D efl_gfx_view_size_get(const Eo *obj);
void efl_gfx_view_size_set(Eo *obj, Eina_Size2D size);
</code>
\\
**[[:develop:api:efl:ui:image:property:visible|visible]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx|Efl.Gfx]]]//\\
> %%The visibility of a canvas object.%%
<code c>
Eina_Bool efl_gfx_visible_get(const Eo *obj);
void efl_gfx_visible_set(Eo *obj, Eina_Bool v);
</code>
\\
**[[:develop:api:efl:ui:image:method:calc_force|calc_force]]**// [Overridden from [[:develop:api:efl:layout:calc|Efl.Layout.Calc]]]// ''protected''\\
> %%Forces a Size/Geometry calculation.%%
<code c>
void efl_layout_calc_force(Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:image:method:theme_apply|theme_apply]]**// [Overridden from [[:develop:api:elm:widget|Elm.Widget]]]// ''protected''\\
> %%Virtual function called when the widget needs to re-apply its theme.%%
<code c>
Efl_Ui_Theme_Apply efl_ui_widget_theme_apply(Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:image:method:widget_event|widget_event]]**// [Overridden from [[:develop:api:elm:widget|Elm.Widget]]]// ''protected''\\
> %%Virtual function handling input events on the widget.%%
<code c>
Eina_Bool efl_ui_widget_event(Eo *obj, const Efl_Event *eo_event, Efl_Canvas_Object *source);
</code>
\\
**[[:develop:api:efl:ui:image:property:elm_actions|elm_actions]]** //**(get)**//// [Overridden from [[:develop:api:efl:access:widget:action|Efl.Access.Widget.Action]]]// ''protected''\\
> %%Elementary actions%%
<code c>
const Efl_Access_Action_Data *efl_access_widget_action_elm_actions_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:image:property:extents|extents]]** //**(get)**//// [Overridden from [[:develop:api:efl:access:image|Efl.Access.Image]]]// ''protected''\\
> %%Gets an image extents.%%
<code c>
void efl_access_image_extents_get(const Eo *obj, Eina_Bool screen_coords, int *x, int *y, int *width, int *height);
</code>
\\

==== Inherited ====

[[:develop:api:efl:access|Efl.Access]]\\
> **[[:develop:api:efl:access:method:attribute_append|attribute_append]]**, **[[:develop:api:efl:access:method:attributes_clear|attributes_clear]]**, **[[:develop:api:efl:access:method:relationship_append|relationship_append]]**, **[[:develop:api:efl:access:method:relationship_remove|relationship_remove]]**, **[[:develop:api:efl:access:method:relationships_clear|relationships_clear]]**, **[[:develop:api:efl:access:property:description|description]]** //**(get, set)**//, **[[:develop:api:efl:access:property:role|role]]** //**(get, set)**//, **[[:develop:api:efl:access:property:root|root]]** //**(get)**//, **[[:develop:api:efl:access:property:translation_domain|translation_domain]]** //**(get, set)**//, **[[:develop:api:efl:access:property:type|type]]** //**(get, set)**//\\
[[:develop:api:efl:canvas:group|Efl.Canvas.Group]]\\
> **[[:develop:api:efl:canvas:group:method:group_change|group_change]]**, **[[:develop:api:efl:canvas:group:method:group_member_is|group_member_is]]**, **[[:develop:api:efl:canvas:group:method:group_members_iterate|group_members_iterate]]**, **[[:develop:api:efl:canvas:group:property:group_need_recalculate|group_need_recalculate]]** //**(get, set)**//, **[[:develop:api:efl:canvas:group:property:paragraph_direction|paragraph_direction]]** //**(get, set)**//\\
[[:develop:api:efl:canvas:object|Efl.Canvas.Object]]\\
> **[[:develop:api:efl:canvas:object:method:clipees_has|clipees_has]]**, **[[:develop:api:efl:canvas:object:method:del|del]]**, **[[:develop:api:efl:canvas:object:method:key_grab|key_grab]]**, **[[:develop:api:efl:canvas:object:method:key_ungrab|key_ungrab]]**, **[[:develop:api:efl:canvas:object:method:lower|lower]]**, **[[:develop:api:efl:canvas:object:method:raise|raise]]**, **[[:develop:api:efl:canvas:object:method:seat_focus_add|seat_focus_add]]**, **[[:develop:api:efl:canvas:object:method:seat_focus_check|seat_focus_check]]**, **[[:develop:api:efl:canvas:object:method:seat_focus_del|seat_focus_del]]**, **[[:develop:api:efl:canvas:object:method:stack_above|stack_above]]**, **[[:develop:api:efl:canvas:object:method:stack_below|stack_below]]**, **[[:develop:api:efl:canvas:object:property:above|above]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:anti_alias|anti_alias]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:below|below]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:clipees|clipees]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:coords_inside|coords_inside]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:event_animation|event_animation]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:freeze_events|freeze_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:geometry|geometry]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_align|hint_align]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_aspect|hint_aspect]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_combined_min|hint_combined_min]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:hint_margin|hint_margin]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_max|hint_max]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_min|hint_min]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:hint_restricted_min|hint_restricted_min]]** //**(get, set)**// ''protected set'', **[[:develop:api:efl:canvas:object:property:hint_weight|hint_weight]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:key_focus|key_focus]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:layer|layer]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:loop|loop]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:pass_events|pass_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:pointer_inside|pointer_inside]]** //**(get)**//, **[[:develop:api:efl:canvas:object:property:pointer_mode_by_device|pointer_mode_by_device]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:pointer_mode|pointer_mode]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:precise_is_inside|precise_is_inside]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:propagate_events|propagate_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:render_op|render_op]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:repeat_events|repeat_events]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:seat_event_filter|seat_event_filter]]** //**(get, set)**//, **[[:develop:api:efl:canvas:object:property:seat_focus|seat_focus]]** //**(get)**//\\
[[:develop:api:efl:file|Efl.File]]\\
> **[[:develop:api:efl:file:method:save|save]]**, **[[:develop:api:efl:file:property:load_error|load_error]]** //**(get)**//\\
[[:develop:api:efl:gfx:map|Efl.Gfx.Map]]\\
> **[[:develop:api:efl:gfx:map:method:lightning_3d_absolute|lightning_3d_absolute]]**, **[[:develop:api:efl:gfx:map:method:lightning_3d|lightning_3d]]**, **[[:develop:api:efl:gfx:map:method:map_has|map_has]]**, **[[:develop:api:efl:gfx:map:method:map_reset|map_reset]]**, **[[:develop:api:efl:gfx:map:method:perspective_3d_absolute|perspective_3d_absolute]]**, **[[:develop:api:efl:gfx:map:method:perspective_3d|perspective_3d]]**, **[[:develop:api:efl:gfx:map:method:rotate_3d_absolute|rotate_3d_absolute]]**, **[[:develop:api:efl:gfx:map:method:rotate_3d|rotate_3d]]**, **[[:develop:api:efl:gfx:map:method:rotate_absolute|rotate_absolute]]**, **[[:develop:api:efl:gfx:map:method:rotate_quat_absolute|rotate_quat_absolute]]**, **[[:develop:api:efl:gfx:map:method:rotate_quat|rotate_quat]]**, **[[:develop:api:efl:gfx:map:method:rotate|rotate]]**, **[[:develop:api:efl:gfx:map:method:translate|translate]]**, **[[:develop:api:efl:gfx:map:method:zoom_absolute|zoom_absolute]]**, **[[:develop:api:efl:gfx:map:method:zoom|zoom]]**, **[[:develop:api:efl:gfx:map:property:map_alpha|map_alpha]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_clockwise|map_clockwise]]** //**(get)**//, **[[:develop:api:efl:gfx:map:property:map_color|map_color]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_coord_absolute|map_coord_absolute]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_point_count|map_point_count]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_smooth|map_smooth]]** //**(get, set)**//, **[[:develop:api:efl:gfx:map:property:map_uv|map_uv]]** //**(get, set)**//\\
[[:develop:api:efl:gfx:size:hint|Efl.Gfx.Size.Hint]]\\
> **[[:develop:api:efl:gfx:size:hint:property:hint_base|hint_base]]** //**(get, set)**//, **[[:develop:api:efl:gfx:size:hint:property:hint_step|hint_step]]** //**(get, set)**//\\
[[:develop:api:efl:image:load|Efl.Image.Load]]\\
> **[[:develop:api:efl:image:load:method:load_async_cancel|load_async_cancel]]**, **[[:develop:api:efl:image:load:method:load_async_start|load_async_start]]**, **[[:develop:api:efl:image:load:property:load_dpi|load_dpi]]** //**(get, set)**//, **[[:develop:api:efl:image:load:property:load_error|load_error]]** //**(get)**//, **[[:develop:api:efl:image:load:property:load_orientation|load_orientation]]** //**(get, set)**//, **[[:develop:api:efl:image:load:property:load_region_support|load_region_support]]** //**(get)**//, **[[:develop:api:efl:image:load:property:load_region|load_region]]** //**(get, set)**//, **[[:develop:api:efl:image:load:property:load_scale_down|load_scale_down]]** //**(get, set)**//, **[[:develop:api:efl:image:load:property:load_skip_header|load_skip_header]]** //**(get, set)**//\\
[[:develop:api:efl:image|Efl.Image]]\\
> **[[:develop:api:efl:image:property:border_center_fill|border_center_fill]]** //**(get, set)**//, **[[:develop:api:efl:image:property:border_scale|border_scale]]** //**(get, set)**//, **[[:develop:api:efl:image:property:border|border]]** //**(get, set)**//, **[[:develop:api:efl:image:property:content_hint|content_hint]]** //**(get, set)**//, **[[:develop:api:efl:image:property:ratio|ratio]]** //**(get)**//, **[[:develop:api:efl:image:property:scale_hint|scale_hint]]** //**(get, set)**//\\
[[:develop:api:efl:layout:calc|Efl.Layout.Calc]]\\
> **[[:develop:api:efl:layout:calc:method:calc_freeze|calc_freeze]]**, **[[:develop:api:efl:layout:calc:method:calc_parts_extends|calc_parts_extends]]**, **[[:develop:api:efl:layout:calc:method:calc_thaw|calc_thaw]]**, **[[:develop:api:efl:layout:calc:property:calc_auto_update_hints|calc_auto_update_hints]]** //**(get, set)**//\\
[[:develop:api:efl:layout:group|Efl.Layout.Group]]\\
> **[[:develop:api:efl:layout:group:property:group_data|group_data]]** //**(get)**//\\
[[:develop:api:efl:layout:signal|Efl.Layout.Signal]]\\
> **[[:develop:api:efl:layout:signal:method:message_send|message_send]]**, **[[:develop:api:efl:layout:signal:method:signal_callback_add|signal_callback_add]]**, **[[:develop:api:efl:layout:signal:method:signal_callback_del|signal_callback_del]]**, **[[:develop:api:efl:layout:signal:method:signal_process|signal_process]]**\\
[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]**, **[[:develop:api:efl:object:method:composite_attach|composite_attach]]**, **[[:develop:api:efl:object:method:composite_detach|composite_detach]]**, **[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]**, **[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]**, **[[:develop:api:efl:object:method:event_freeze|event_freeze]]**, **[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]**, **[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]**, **[[:develop:api:efl:object:method:event_thaw|event_thaw]]**, **[[:develop:api:efl:object:method:name_find|name_find]]**, **[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**//, **[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**//, **[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**//, **[[:develop:api:efl:object:property:name|name]]** //**(get, set)**//, **[[:develop:api:efl:object:property:parent|parent]]** //**(get, set)**//\\
[[:develop:api:efl:player|Efl.Player]]\\
> **[[:develop:api:efl:player:property:length|length]]** //**(get)**//, **[[:develop:api:efl:player:property:mute|mute]]** //**(get, set)**//, **[[:develop:api:efl:player:property:play_speed|play_speed]]** //**(get, set)**//, **[[:develop:api:efl:player:property:position|position]]** //**(get, set)**//, **[[:develop:api:efl:player:property:progress|progress]]** //**(get)**//, **[[:develop:api:efl:player:property:seekable|seekable]]** //**(get)**//, **[[:develop:api:efl:player:property:volume|volume]]** //**(get, set)**//\\
[[:develop:api:efl:ui:base|Efl.Ui.Base]]\\
> **[[:develop:api:efl:ui:base:property:language|language]]** //**(get, set)**//\\
[[:develop:api:efl:ui:focus:object|Efl.Ui.Focus.Object]]\\
> **[[:develop:api:efl:ui:focus:object:method:prepare_logical|prepare_logical]]**\\
[[:develop:api:efl:ui:translatable|Efl.Ui.Translatable]]\\
> **[[:develop:api:efl:ui:translatable:property:translatable_text|translatable_text]]** //**(get, set)**//\\
[[:develop:api:elm:widget|Elm.Widget]]\\
> **[[:develop:api:elm:widget:method:debug_name_override|debug_name_override]]**, **[[:develop:api:elm:widget:method:destructor|destructor]]**, **[[:develop:api:elm:widget:method:finalize|finalize]]**, **[[:develop:api:elm:widget:method:group_calculate|group_calculate]]**, **[[:develop:api:elm:widget:method:group_member_del|group_member_del]]**, **[[:develop:api:elm:widget:method:part|part]]**, **[[:develop:api:elm:widget:method:provider_find|provider_find]]**, **[[:develop:api:elm:widget:method:scroll_freeze_pop|scroll_freeze_pop]]**, **[[:develop:api:elm:widget:method:scroll_freeze_push|scroll_freeze_push]]**, **[[:develop:api:elm:widget:method:scroll_hold_pop|scroll_hold_pop]]**, **[[:develop:api:elm:widget:method:scroll_hold_push|scroll_hold_push]]**, **[[:develop:api:elm:widget:property:access_info|access_info]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:cursor_style|cursor_style]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:cursor_theme_search_enabled|cursor_theme_search_enabled]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:cursor|cursor]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:disabled|disabled]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:focus_allow|focus_allow]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:focus_geometry|focus_geometry]]** //**(get)**//, **[[:develop:api:elm:widget:property:focus_highlight_animate|focus_highlight_animate]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:focus_highlight_enabled|focus_highlight_enabled]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:focus_highlight_style|focus_highlight_style]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:focus_manager|focus_manager]]** //**(get)**//, **[[:develop:api:elm:widget:property:focus_move_policy_automatic|focus_move_policy_automatic]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:focus_move_policy|focus_move_policy]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:focus_parent|focus_parent]]** //**(get)**//, **[[:develop:api:elm:widget:property:focused_item|focused_item]]** //**(get)**//, **[[:develop:api:elm:widget:property:focus|focus]]** //**(get, set)**// ''protected set'', **[[:develop:api:elm:widget:property:interest_region_mode|interest_region_mode]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:is_frame_object|is_frame_object]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:mirrored_automatic|mirrored_automatic]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:mirrored|mirrored]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:name|name]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:no_render|no_render]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:orientation_mode_disabled|orientation_mode_disabled]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:parent|parent]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:scale|scale]]** //**(get, set)**//, **[[:develop:api:elm:widget:property:style|style]]** //**(get, set)**// ''protected set'', **[[:develop:api:elm:widget:property:widget_top|widget_top]]** //**(get)**//\\
[[:develop:api:efl:access:action|Efl.Access.Action]]\\
> **[[:develop:api:efl:access:action:property:action_localized_name|action_localized_name]]** //**(get)**// ''protected''\\
[[:develop:api:efl:access:component|Efl.Access.Component]]\\
> **[[:develop:api:efl:access:component:method:accessible_at_point_get|accessible_at_point_get]]** ''protected'', **[[:develop:api:efl:access:component:method:contains|contains]]** ''protected'', **[[:develop:api:efl:access:component:property:alpha|alpha]]** //**(get)**// ''protected'', **[[:develop:api:efl:access:component:property:extents|extents]]** //**(get, set)**// ''protected'', **[[:develop:api:efl:access:component:property:layer|layer]]** //**(get)**// ''protected'', **[[:develop:api:efl:access:component:property:position|position]]** //**(get, set)**// ''protected'', **[[:develop:api:efl:access:component:property:size|size]]** //**(get, set)**// ''protected'', **[[:develop:api:efl:access:component:property:z_order|z_order]]** //**(get)**// ''protected''\\
[[:develop:api:efl:access:image|Efl.Access.Image]]\\
> **[[:develop:api:efl:access:image:property:description|description]]** //**(get, set)**// ''protected'', **[[:develop:api:efl:access:image:property:locale|locale]]** //**(get)**// ''protected''\\
[[:develop:api:efl:access|Efl.Access]]\\
> **[[:develop:api:efl:access:method:event_emit|event_emit]]** ''protected'', **[[:develop:api:efl:access:method:event_handler_add|event_handler_add]]** ''protected'', **[[:develop:api:efl:access:method:event_handler_del|event_handler_del]]** ''protected'', **[[:develop:api:efl:access:property:index_in_parent|index_in_parent]]** //**(get)**// ''protected'', **[[:develop:api:efl:access:property:localized_role_name|localized_role_name]]** //**(get)**// ''protected'', **[[:develop:api:efl:access:property:reading_info_type|reading_info_type]]** //**(get, set)**// ''protected'', **[[:develop:api:efl:access:property:relation_set|relation_set]]** //**(get)**// ''protected'', **[[:develop:api:efl:access:property:role_name|role_name]]** //**(get)**// ''protected''\\
[[:develop:api:efl:access:widget:action|Efl.Access.Widget.Action]]\\
> **[[:develop:api:efl:access:widget:action:method:action_do|action_do]]** ''protected'', **[[:develop:api:efl:access:widget:action:method:action_keybinding_get|action_keybinding_get]]** ''protected'', **[[:develop:api:efl:access:widget:action:property:action_description|action_description]]** //**(get, set)**// ''protected'', **[[:develop:api:efl:access:widget:action:property:action_name|action_name]]** //**(get)**// ''protected'', **[[:develop:api:efl:access:widget:action:property:actions|actions]]** //**(get)**// ''protected''\\
[[:develop:api:efl:canvas:group|Efl.Canvas.Group]]\\
> **[[:develop:api:efl:canvas:group:property:group_clipper|group_clipper]]** //**(get)**// ''protected''\\
[[:develop:api:efl:canvas:object|Efl.Canvas.Object]]\\
> **[[:develop:api:efl:canvas:object:property:render_parent|render_parent]]** //**(get)**// ''protected''\\
[[:develop:api:elm:widget|Elm.Widget]]\\
> **[[:develop:api:elm:widget:method:focus_grab|focus_grab]]** ''protected'', **[[:develop:api:elm:widget:method:focus_manager_create|focus_manager_create]]** ''protected'', **[[:develop:api:elm:widget:method:focus_state_apply|focus_state_apply]]** ''protected'', **[[:develop:api:elm:widget:method:on_access_activate|on_access_activate]]** ''protected'', **[[:develop:api:elm:widget:method:on_access_update|on_access_update]]** ''protected'', **[[:develop:api:elm:widget:method:on_disabled_update|on_disabled_update]]** ''protected'', **[[:develop:api:elm:widget:method:on_focus_update|on_focus_update]]** ''protected'', **[[:develop:api:elm:widget:method:on_orientation_update|on_orientation_update]]** ''protected'', **[[:develop:api:elm:widget:method:translation_update|translation_update]]** ''protected'', **[[:develop:api:elm:widget:method:widget_sub_object_add|widget_sub_object_add]]** ''protected'', **[[:develop:api:elm:widget:method:widget_sub_object_del|widget_sub_object_del]]** ''protected'', **[[:develop:api:elm:widget:property:attributes|attributes]]** //**(get)**// ''protected'', **[[:develop:api:elm:widget:property:children|children]]** //**(get)**// ''protected'', **[[:develop:api:elm:widget:property:focus_highlight_geometry|focus_highlight_geometry]]** //**(get)**// ''protected'', **[[:develop:api:elm:widget:property:interest_region|interest_region]]** //**(get)**// ''protected'', **[[:develop:api:elm:widget:property:on_show_region_hook|on_show_region_hook]]** //**(set)**// ''protected'', **[[:develop:api:elm:widget:property:resize_object|resize_object]]** //**(set)**// ''protected'', **[[:develop:api:elm:widget:property:show_region|show_region]]** //**(get, set)**// ''protected'', **[[:develop:api:elm:widget:property:state_set|state_set]]** //**(get)**// ''protected'', **[[:develop:api:elm:widget:property:widget_parent|widget_parent]]** //**(get, set)**// ''protected''
===== Events =====

**[[:develop:api:efl:ui:image:event:drop|drop]]**\\
> %%Called when drop from drag and drop happened%%
<code c>
EFL_UI_IMAGE_EVENT_DROP(void)
</code>
\\ ==== Inherited ====

[[:develop:api:efl:access|Efl.Access]]\\
> **[[:develop:api:efl:access:event:active_descendant_changed|active,descendant,changed]]**, **[[:develop:api:efl:access:event:added|added]]**, **[[:develop:api:efl:access:event:bounds_changed|bounds,changed]]**, **[[:develop:api:efl:access:event:children_changed|children,changed]]**, **[[:develop:api:efl:access:event:property_changed|property,changed]]**, **[[:develop:api:efl:access:event:removed|removed]]**, **[[:develop:api:efl:access:event:state_changed|state,changed]]**, **[[:develop:api:efl:access:event:visible_data_changed|visible,data,changed]]**\\
[[:develop:api:efl:animator|Efl.Animator]]\\
> **[[:develop:api:efl:animator:event:animator_tick|animator,tick]]**\\
[[:develop:api:efl:gfx|Efl.Gfx]]\\
> **[[:develop:api:efl:gfx:event:changed|changed]]**, **[[:develop:api:efl:gfx:event:hide|hide]]**, **[[:develop:api:efl:gfx:event:move|move]]**, **[[:develop:api:efl:gfx:event:resize|resize]]**, **[[:develop:api:efl:gfx:event:show|show]]**\\
[[:develop:api:efl:gfx:size:hint|Efl.Gfx.Size.Hint]]\\
> **[[:develop:api:efl:gfx:size:hint:event:change_size_hints|change,size,hints]]**\\
[[:develop:api:efl:gfx:stack|Efl.Gfx.Stack]]\\
> **[[:develop:api:efl:gfx:stack:event:restack|restack]]**\\
[[:develop:api:efl:image|Efl.Image]]\\
> **[[:develop:api:efl:image:event:preload|preload]]**, **[[:develop:api:efl:image:event:resize|resize]]**, **[[:develop:api:efl:image:event:unload|unload]]**\\
[[:develop:api:efl:image:load|Efl.Image.Load]]\\
> **[[:develop:api:efl:image:load:event:load_cancelled|load,cancelled]]**, **[[:develop:api:efl:image:load:event:load_done|load,done]]**, **[[:develop:api:efl:image:load:event:load_error|load,error]]**\\
[[:develop:api:efl:input:interface|Efl.Input.Interface]]\\
> **[[:develop:api:efl:input:interface:event:finger_down|finger,down]]**, **[[:develop:api:efl:input:interface:event:finger_move|finger,move]]**, **[[:develop:api:efl:input:interface:event:finger_up|finger,up]]**, **[[:develop:api:efl:input:interface:event:focus_in|focus,in]]**, **[[:develop:api:efl:input:interface:event:focus_out|focus,out]]**, **[[:develop:api:efl:input:interface:event:hold|hold]]**, **[[:develop:api:efl:input:interface:event:key_down|key,down]]**, **[[:develop:api:efl:input:interface:event:key_up|key,up]]**, **[[:develop:api:efl:input:interface:event:pointer_axis|pointer,axis]]**, **[[:develop:api:efl:input:interface:event:pointer_cancel|pointer,cancel]]**, **[[:develop:api:efl:input:interface:event:pointer_down|pointer,down]]**, **[[:develop:api:efl:input:interface:event:pointer_in|pointer,in]]**, **[[:develop:api:efl:input:interface:event:pointer_move|pointer,move]]**, **[[:develop:api:efl:input:interface:event:pointer_out|pointer,out]]**, **[[:develop:api:efl:input:interface:event:pointer_up|pointer,up]]**, **[[:develop:api:efl:input:interface:event:pointer_wheel|pointer,wheel]]**\\
[[:develop:api:efl:layout:calc|Efl.Layout.Calc]]\\
> **[[:develop:api:efl:layout:calc:event:circular_dependency|circular,dependency]]**, **[[:develop:api:efl:layout:calc:event:recalc|recalc]]**\\
[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:event:callback_add|callback,add]]**, **[[:develop:api:efl:object:event:callback_del|callback,del]]**, **[[:develop:api:efl:object:event:del|del]]**\\
[[:develop:api:efl:ui:clickable|Efl.Ui.Clickable]]\\
> **[[:develop:api:efl:ui:clickable:event:clicked_double|clicked,double]]**, **[[:develop:api:efl:ui:clickable:event:clicked_right|clicked,right]]**, **[[:develop:api:efl:ui:clickable:event:clicked_triple|clicked,triple]]**, **[[:develop:api:efl:ui:clickable:event:clicked|clicked]]**, **[[:develop:api:efl:ui:clickable:event:longpressed|longpressed]]**, **[[:develop:api:efl:ui:clickable:event:pressed|pressed]]**, **[[:develop:api:efl:ui:clickable:event:repeated|repeated]]**, **[[:develop:api:efl:ui:clickable:event:unpressed|unpressed]]**\\
[[:develop:api:efl:ui:draggable|Efl.Ui.Draggable]]\\
> **[[:develop:api:efl:ui:draggable:event:drag_end|drag,end]]**, **[[:develop:api:efl:ui:draggable:event:drag_start_down|drag,start,down]]**, **[[:develop:api:efl:ui:draggable:event:drag_start_left|drag,start,left]]**, **[[:develop:api:efl:ui:draggable:event:drag_start_right|drag,start,right]]**, **[[:develop:api:efl:ui:draggable:event:drag_start_up|drag,start,up]]**, **[[:develop:api:efl:ui:draggable:event:drag_start|drag,start]]**, **[[:develop:api:efl:ui:draggable:event:drag_stop|drag,stop]]**, **[[:develop:api:efl:ui:draggable:event:drag|drag]]**\\
[[:develop:api:efl:ui:focus:object|Efl.Ui.Focus.Object]]\\
> **[[:develop:api:efl:ui:focus:object:event:focus_changed|focus,changed]]**\\
[[:develop:api:efl:ui:focus:user|Efl.Ui.Focus.User]]\\
> **[[:develop:api:efl:ui:focus:user:event:logical_changed|logical,changed]]**, **[[:develop:api:efl:ui:focus:user:event:manager_changed|manager,changed]]**\\
[[:develop:api:elm:widget|Elm.Widget]]\\
> **[[:develop:api:elm:widget:event:access_changed|access,changed]]**, **[[:develop:api:elm:widget:event:language_changed|language,changed]]**, **[[:develop:api:elm:widget:event:moved|moved]]**