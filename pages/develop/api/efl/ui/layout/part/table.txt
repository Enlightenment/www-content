~~Title: Efl.Ui.Layout.Part.Table~~
====== Efl.Ui.Layout.Part.Table (class) ======

===== Description =====

%%Represents a Table created as part of a layout.%%

%%Can not be deleted, this is only a representation of an internal object of an EFL layout.%%

{{page>:develop:api-include:efl:ui:layout:part:table:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Full hierarchy |

  * [[:develop:api:efl:object|Efl.Object]] //(class)//
  * [[:develop:api:efl:pack:table|Efl.Pack.Table]] //(interface)//
    * [[:develop:api:efl:pack:linear|Efl.Pack.Linear]] //(interface)//
      * [[:develop:api:efl:pack|Efl.Pack]] //(interface)//
        * [[:develop:api:efl:container|Efl.Container]] //(interface)//


++++
===== Members =====

**[[:develop:api:efl:ui:layout:part:table:method:content_count|content_count]]**// [Overridden from [[:develop:api:efl:container|Efl.Container]]]//\\
> %%Returns the number of UI elements packed in this container.%%
<code c>
int efl_content_count(Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:method:content_iterate|content_iterate]]**// [Overridden from [[:develop:api:efl:container|Efl.Container]]]//\\
> %%Begin iterating over this object's contents.%%
<code c>
Eina_Iterator *efl_content_iterate(Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:method:content_remove|content_remove]]**// [Overridden from [[:develop:api:efl:container|Efl.Container]]]//\\
> %%Unswallow an object from this container.%%
<code c>
Eina_Bool efl_content_remove(Eo *obj, Efl_Gfx *content);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:method:destructor|destructor]]**// [Overridden from [[:develop:api:efl:object|Efl.Object]]]//\\
> %%Call the object's destructor.%%
<code c>
void efl_destructor(Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:method:pack_clear|pack_clear]]**// [Overridden from [[:develop:api:efl:pack|Efl.Pack]]]//\\
> %%Removes all packed contents, and unreferences them.%%
<code c>
Eina_Bool efl_pack_clear(Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:method:pack_table|pack_table]]**// [Overridden from [[:develop:api:efl:pack:table|Efl.Pack.Table]]]//\\
> %%Pack object at a given location in the table.%%
<code c>
Eina_Bool efl_pack_table(Eo *obj, Efl_Gfx *subobj, int col, int row, int colspan, int rowspan);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:property:table_columns|table_columns]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:pack:table|Efl.Pack.Table]]]//\\
> %%Gird columns property%%
<code c>
int efl_pack_table_columns_get(const Eo *obj);
void efl_pack_table_columns_set(Eo *obj, int cols);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:method:table_content_get|table_content_get]]**// [Overridden from [[:develop:api:efl:pack:table|Efl.Pack.Table]]]//\\
> %%Returns a child at a given position, see %%[[:develop:api:efl:pack:table:method:table_contents_get|Efl.Pack.Table.table_contents_get]]%%.%%
<code c>
Efl_Gfx *efl_pack_table_content_get(Eo *obj, int col, int row);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:method:table_contents_get|table_contents_get]]**// [Overridden from [[:develop:api:efl:pack:table|Efl.Pack.Table]]]//\\
> %%Returns all objects at a given position in this table.%%
<code c>
Eina_Iterator *efl_pack_table_contents_get(Eo *obj, int col, int row, Eina_Bool below);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:property:table_position|table_position]]** //**(get)**//// [Overridden from [[:develop:api:efl:pack:table|Efl.Pack.Table]]]//\\
> %%Position and span of the %%''subobj''%% in this container, may be modified to move the %%''subobj''%%%%
<code c>
Eina_Bool efl_pack_table_position_get(const Eo *obj, Efl_Gfx *subobj, int *col, int *row, int *colspan, int *rowspan);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:property:table_rows|table_rows]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:pack:table|Efl.Pack.Table]]]//\\
> %%Table rows property%%
<code c>
int efl_pack_table_rows_get(const Eo *obj);
void efl_pack_table_rows_set(Eo *obj, int rows);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:property:table_size|table_size]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:pack:table|Efl.Pack.Table]]]//\\
> %%Combines %%[[:develop:api:efl:pack:table:property:table_columns|Efl.Pack.Table.table_columns]]%% and %%[[:develop:api:efl:pack:table:property:table_rows|Efl.Pack.Table.table_rows]]%%%%
<code c>
void efl_pack_table_size_get(const Eo *obj, int *cols, int *rows);
void efl_pack_table_size_set(Eo *obj, int cols, int rows);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:method:unpack|unpack]]**// [Overridden from [[:develop:api:efl:pack|Efl.Pack]]]//\\
> %%Removes an existing item from the container, without deleting it.%%
<code c>
Eina_Bool efl_pack_unpack(Eo *obj, Efl_Gfx *subobj);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:method:unpack_all|unpack_all]]**// [Overridden from [[:develop:api:efl:pack|Efl.Pack]]]//\\
> %%Removes all packed contents, without unreferencing them.%%
<code c>
Eina_Bool efl_pack_unpack_all(Eo *obj);
</code>
\\
**[[:develop:api:efl:ui:layout:part:table:property:real_part|real_part]]** //**(set)**// ''protected''\\
> %%Real part property%%
<code c>
void efl_ui_layout_part_table_real_part_set(Eo *obj, Efl_Object *layout, const char *part);
</code>
\\

==== Inherited ====

^ [[:develop:api:efl:object|Efl.Object]] ^^^
|  | **[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**// | %%Allow an object to be deleted by unref even if it has a parent.%% |
|  | **[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]** | %%Get an iterator on all childrens%% |
|  | **[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**// | %%A human readable comment for the object%% |
|  | **[[:develop:api:efl:object:method:composite_attach|composite_attach]]** | %%Make an object a composite object of another.%% |
|  | **[[:develop:api:efl:object:method:composite_detach|composite_detach]]** | %%Detach a composite object from another object.%% |
|  | **[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]** | %%Check if an object is part of a composite object.%% |
|  | **[[:develop:api:efl:object:method:constructor|constructor]]** | %%Call the object's constructor.%% |
|  | **[[:develop:api:efl:object:method:debug_name_override|debug_name_override]]** | %%Build a read-only name for this object used for debugging.%% |
|  | **[[:develop:api:efl:object:method:del|del]]** | %%Unrefs the object and reparents it to NULL.%% |
|  | **[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]** | %%Add an event callback forwarder for an event and an object.%% |
|  | **[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]** | %%Remove an event callback forwarder for an event and an object.%% |
|  | **[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]** | %%Stop the current callback call.%% |
|  | **[[:develop:api:efl:object:method:event_freeze|event_freeze]]** | %%Freeze events of object.%% |
|  | **[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**// | %%Return freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]** | %%Freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**// | %%Return freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]** | %%Thaw events of object.%% |
|  | **[[:develop:api:efl:object:method:event_thaw|event_thaw]]** | %%Thaw events of object.%% |
|  | **[[:develop:api:efl:object:method:finalize|finalize]]** | %%Called at the end of #eo_add. Should not be called, just overridden.%% |
|  | **[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**// | %%True if the object is already finalized, otherwise false.%% |
|  | **[[:develop:api:efl:object:property:name|name]]** //**(get, set)**// | %%The name of the object.%% |
|  | **[[:develop:api:efl:object:method:name_find|name_find]]** | %%Find a child object with the given name and return it.%% |
|  | **[[:develop:api:efl:object:property:parent|parent]]** //**(get, set)**// | %%The parent of an object.%% |
|  | **[[:develop:api:efl:object:method:provider_find|provider_find]]** | %%Searches upwards in the object tree for a provider which knows the given class/interface.%% |
^ [[:develop:api:efl:pack|Efl.Pack]] ^^^
|  | **[[:develop:api:efl:pack:method:pack|pack]]** | %%Adds an item to this container.%% |
|  | **[[:develop:api:efl:pack:property:pack_align|pack_align]]** //**(get, set)**// | %%Alignment of the container within its bounds%% |
|  | **[[:develop:api:efl:pack:property:pack_padding|pack_padding]]** //**(get, set)**// | %%Padding between items contained in this object.%% |
^ [[:develop:api:efl:pack:linear|Efl.Pack.Linear]] ^^^
|  | **[[:develop:api:efl:pack:linear:method:pack_after|pack_after]]** | %%Append item after other sub object.%% |
|  | **[[:develop:api:efl:pack:linear:method:pack_at|pack_at]]** | %%Inserts %%''subobj''%% at the specified %%''index''%%.%% |
|  | **[[:develop:api:efl:pack:linear:method:pack_before|pack_before]]** | %%Prepend item before other sub object.%% |
|  | **[[:develop:api:efl:pack:linear:method:pack_begin|pack_begin]]** | %%Prepend an object at the beginning of this container.%% |
|  | **[[:develop:api:efl:pack:linear:method:pack_content_get|pack_content_get]]** | %%Content at a given index in this container.%% |
|  | **[[:develop:api:efl:pack:linear:method:pack_end|pack_end]]** | %%Append object at the end of this container.%% |
|  | **[[:develop:api:efl:pack:linear:method:pack_index_get|pack_index_get]]** | %%Get the index of a child in this container.%% |
|  | **[[:develop:api:efl:pack:linear:method:pack_unpack_at|pack_unpack_at]]** | %%Pop out item at specified %%''index''%%.%% |
^ [[:develop:api:efl:pack:table|Efl.Pack.Table]] ^^^
|  | **[[:develop:api:efl:pack:table:property:table_direction|table_direction]]** //**(get, set)**// | %%Primary and secondary up/left/right/down directions for linear apis.%% |

===== Events =====

==== Inherited ====

^ [[:develop:api:efl:container|Efl.Container]] ^^^
|  | **[[:develop:api:efl:container:event:content_added|content,added]]** | %%Sent after a new item was added.%% |
|  | **[[:develop:api:efl:container:event:content_removed|content,removed]]** | %%Sent after an item was removed, before unref.%% |
^ [[:develop:api:efl:object|Efl.Object]] ^^^
|  | **[[:develop:api:efl:object:event:callback_add|callback,add]]** | %%A callback was added.%% |
|  | **[[:develop:api:efl:object:event:callback_del|callback,del]]** | %%A callback was deleted.%% |
|  | **[[:develop:api:efl:object:event:del|del]]** | %%Object is being deleted.%% |
^ [[:develop:api:efl:pack|Efl.Pack]] ^^^
|  | **[[:develop:api:efl:pack:event:layout_updated|layout,updated]]** | %%Sent after the layout was updated.%% |
