~~Title: Efl.Ui.Focus.Layer.focus_state_apply~~
//Overridden from [[:develop:api:elm:widget:method:focus_state_apply|Elm.Widget.focus_state_apply]].//===== Signature =====

<code>
focus_state_apply @protected {
    params {
        @in current_state: Elm.Widget.Focus_State;
        @inout configured_state: Elm.Widget.Focus_State;
        @in redirect: free(Elm.Widget, efl_del);
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_ui_widget_focus_state_apply(Eo *obj, Elm_Widget_Focus_State current_state, Elm_Widget_Focus_State configured_state, Elm_Widget *redirect);
</code>

===== Parameters =====

  * **current_state** //(in)// - %%The focus manager to register with.%%
  * **configured_state** //(inout)// - %%The evalulated Focus state that should be used.%%
  * **redirect** //(in)// - %%A redirect that will be set by the elm.widget implementation.%%

===== Description =====

%%Register focus with the given configuration.%%

%%The implementation can feel free to change the logical flag as it wants, but other than that it should strictly keep the configuration.%%

%%The implementation in elm.widget updates the current state into what is passed as configured state, respecting manager changes, registeration and unregistration based on if it should be registered or unregistered.%%

%%A manager field that is %%''null''%% means that the widget should not or was not registered.%%
{{page>:develop:api-include:efl:ui:focus:layer:method:focus_state_apply:description&nouser&nolink&nodate}}

===== Implemented by =====

  * [[:develop:api:elm:widget:method:focus_state_apply|Elm.Widget.focus_state_apply]]

