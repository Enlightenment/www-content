~~Title: Efl.Ui.Autorepeat~~
====== Efl.Ui.Autorepeat (interface) ======

===== Description =====

%%Efl UI autorepeat interface%%

{{page>:develop:api-include:efl:ui:autorepeat:description&nouser&nolink&nodate}}

===== Inheritance =====


++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_ui_autorepeat [fillcolor = "dodgerblue4", label = "Efl.Ui.Autorepeat", color = "cornflowerblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

++++ Full hierarchy |



++++
===== Members =====

**[[:develop:api:efl:ui:autorepeat:property:autorepeat_enabled|autorepeat_enabled]]** //**(get, set)**//
<code c>
Eina_Bool efl_ui_autorepeat_enabled_get(const Eo *obj);
void efl_ui_autorepeat_enabled_set(Eo *obj, Eina_Bool on);
</code>

%%Turn on/off the autorepeat event generated when the button is kept pressed%%\\ 
\\ 
**[[:develop:api:efl:ui:autorepeat:property:autorepeat_gap_timeout|autorepeat_gap_timeout]]** //**(get, set)**//
<code c>
double efl_ui_autorepeat_gap_timeout_get(const Eo *obj);
void efl_ui_autorepeat_gap_timeout_set(Eo *obj, double t);
</code>

%%The interval between each generated autorepeat event%%\\ 
\\ 
**[[:develop:api:efl:ui:autorepeat:property:autorepeat_initial_timeout|autorepeat_initial_timeout]]** //**(get, set)**//
<code c>
double efl_ui_autorepeat_initial_timeout_get(const Eo *obj);
void efl_ui_autorepeat_initial_timeout_set(Eo *obj, double t);
</code>

%%The initial timeout before the autorepeat event is generated%%\\ 
\\ 
**[[:develop:api:efl:ui:autorepeat:property:autorepeat_supported|autorepeat_supported]]** //**(get)**//
<code c>
Eina_Bool efl_ui_autorepeat_supported_get(const Eo *obj);
</code>

%%Whether the button supports autorepeat.%%\\ 
\\ 

===== Events =====

