~~Title: Efl.Ui.Popup_Alert_Scroll.expandable~~
===== Description =====




{{page>:develop:api-include:efl:ui:popup_alert_scroll:property:expandable:description&nouser&nolink&nodate}}

===== Values =====

  * **max_size** - %%A 2D max size in pixel units.%%
==== Getter ====

%%Get the expandable max size of popup.%%

%%If the given max_size is -1, then popup appears with its size. However, if the given max_size is bigger than 0, then popup size is upto the given max_size. If popup content's min size is bigger than the given max_size, then scroller appears in the popup content area.%%


{{page>:develop:api-include:efl:ui:popup_alert_scroll:property:expandable:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Set the expandable max size of popup.%%

%%If the given max_size is -1, then popup appears with its size. However, if the given max_size is bigger than 0, then popup size is upto the given max_size. If popup content's min size is bigger than the given max_size, then scroller appears in the popup content area.%%
{{page>:develop:api-include:efl:ui:popup_alert_scroll:property:expandable:getter_description&nouser&nolink&nodate}}


===== Signature =====

<code>
@property expandable @beta {
    get {
        values {
            max_size: Eina.Size2D;
        }
    }
    set {
        values {
            max_size: Eina.Size2D;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Size2D efl_ui_popup_alert_scroll_expandable_get(const Eo *obj);
void efl_ui_popup_alert_scroll_expandable_set(Eo *obj, Eina_Size2D max_size);
</code>

===== Implemented by =====

  * **Efl.Ui.Popup_Alert_Scroll.expandable**

