~~Title: Efl.Ui.Range.range_step~~
===== Values =====

  * **step** - %%The step value.%%
===== Description =====

%%Control the step used to increment or decrement values for given widget.%%

%%This value will be incremented or decremented to the displayed value.%%

%%By default step value is equal to 1.%%

<note warning>
%%The step value should be bigger than 0.%%
</note>
{{page>:develop:api-include:efl:ui:range:property:range_step:description&nouser&nolink&nodate}}


===== Signature =====

<code>
@property range_step @pure_virtual {
    get {
        values {
            step: double;
        }
    }
    set {
        values {
            step: double;
        }
    }
}
</code>

===== C signature =====

<code c>
double efl_ui_range_step_get(const Eo *obj);
void efl_ui_range_step_set(Eo *obj, double step);
</code>

===== Implemented by =====

  * **Efl.Ui.Range.range_step**

