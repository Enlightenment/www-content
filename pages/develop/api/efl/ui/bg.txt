~~Title: Efl.Ui.Bg~~
====== Efl.Ui.Bg (interface) ======

===== Description =====

%%The bg (background) widget is used for setting (solid) background decorations%%

%%in a window (unless it has transparency enabled) or on any container object. It works just like an image but has some properties useful for backgrounds, such as setting it to tiled, centered, scaled or stretched.%%

{{page>:develop:api-include:efl:ui:bg:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:interface|Efl.Interface]] //(interface)//
++++ Full hierarchy |

  * [[:develop:api:efl:interface|Efl.Interface]] //(interface)//
  * [[:develop:api:efl:gfx|Efl.Gfx]] //(interface)//
  * [[:develop:api:efl:image|Efl.Image]] //(interface)//
  * [[:develop:api:efl:file|Efl.File]] //(mixin)//


++++
===== Members =====

==== Inherited ====

^ [[:develop:api:efl:file|Efl.File]] ^^^
|  | **[[:develop:api:efl:file:property:file|file]]** //**(get, set)**// |  |
|  | **[[:develop:api:efl:file:property:load_error|load_error]]** //**(get)**// | %%Gets the (last) file loading error for a given object.%% |
|  | **[[:develop:api:efl:file:property:mmap|mmap]]** //**(get, set)**// |  |
|  | **[[:develop:api:efl:file:method:save|save]]** | %%Save the given image object's contents to an (image) file.%% |
^ [[:develop:api:efl:gfx|Efl.Gfx]] ^^^
|  | **[[:develop:api:efl:gfx:property:geometry|geometry]]** //**(get, set)**// | %%Rectangular geometry that combines both position and size.%% |
|  | **[[:develop:api:efl:gfx:property:position|position]]** //**(get, set)**// | %%The 2D position of a canvas object.%% |
|  | **[[:develop:api:efl:gfx:property:scale|scale]]** //**(get, set)**// | %%The scaling factor of an object.%% |
|  | **[[:develop:api:efl:gfx:property:size|size]]** //**(get, set)**// | %%The 2D size of a canvas object.%% |
|  | **[[:develop:api:efl:gfx:property:visible|visible]]** //**(get, set)**// | %%The visibility of a canvas object.%% |
^ [[:develop:api:efl:image|Efl.Image]] ^^^
|  | **[[:develop:api:efl:image:property:border|border]]** //**(get, set)**// | %%Dimensions of this image's border, a region that does not scale with the center area.%% |
|  | **[[:develop:api:efl:image:property:border_center_fill|border_center_fill]]** //**(get, set)**// | %%Specifies how the center part of the object (not the borders) should be drawn when EFL is rendering it.%% |
|  | **[[:develop:api:efl:image:property:border_scale|border_scale]]** //**(get, set)**// | %%Scaling factor applied to the image borders.%% |
|  | **[[:develop:api:efl:image:property:content_hint|content_hint]]** //**(get, set)**// |  |
|  | **[[:develop:api:efl:image:property:image_size|image_size]]** //**(get)**// | %%This represents the size of the original image in pixels.%% |
|  | **[[:develop:api:efl:image:property:ratio|ratio]]** //**(get)**// | %%The native width/height ratio of the image.%% |
|  | **[[:develop:api:efl:image:property:scale_hint|scale_hint]]** //**(get, set)**// |  |
|  | **[[:develop:api:efl:image:property:scale_type|scale_type]]** //**(get, set)**// | %%Control how the image is scaled.%% |
|  | **[[:develop:api:efl:image:property:smooth_scale|smooth_scale]]** //**(get, set)**// | %%Whether to use high-quality image scaling algorithm for this image.%% |

===== Events =====

==== Inherited ====

^ [[:develop:api:efl:gfx|Efl.Gfx]] ^^^
|  | **[[:develop:api:efl:gfx:event:hide|hide]]** | %%Object just became invisible.%% |
|  | **[[:develop:api:efl:gfx:event:move|move]]** | %%Object was moved, its position during the event is the new one.%% |
|  | **[[:develop:api:efl:gfx:event:resize|resize]]** | %%Object was resized, its size during the event is the new one.%% |
|  | **[[:develop:api:efl:gfx:event:show|show]]** | %%Object just became visible.%% |
^ [[:develop:api:efl:image|Efl.Image]] ^^^
|  | **[[:develop:api:efl:image:event:preload|preload]]** | %%Image data has been preloaded.%% |
|  | **[[:develop:api:efl:image:event:unload|unload]]** | %%Image data has been unloaded (by some mechanism in EFL that threw out the original image data).%% |
