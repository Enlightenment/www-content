~~Title: Efl.Ui.Button.translatable_text~~
===== Values =====

==== Getter ====

  * **domain** - %%A translation domain. If %%''null''%% this means the default domain is used.%%
==== Setter ====

  * **label** - %%A unique (untranslated) string.%%
  * **domain** - %%A translation domain. If %%''null''%% this uses the default domain (eg. set by %%''textdomain''%%()).%%
===== Description =====

%%A unique string to be translated.%%

%%Often this will be a human-readable string (eg. in English) but it might as well be a unique string identifier that must then be translated to the current locale with %%''dgettext''%%() or any similar mechanism.%%

%%Setting this property will enable translation for this object or part.%%


{{page>:develop:api-include:efl:ui:button:property:translatable_text:description&nouser&nolink&nodate}}

==== Setter ====

%%Sets the new untranslated string and domain for this object.%%
{{page>:develop:api-include:efl:ui:button:property:translatable_text:getter_description&nouser&nolink&nodate}}


//Overridden from [[:develop:api:efl:ui:translatable:property:translatable_text|Efl.Ui.Translatable.translatable_text]] **(get, set)**.//===== Signature =====

<code>
@property translatable_text @pure_virtual {
    get {
        values {
            domain: free(string, free) @optional;
        }
        return: free(string, free);
    }
    set {
        values {
            label: free(string, free);
            domain: free(string, free) @optional;
        }
    }
}
</code>

===== C signature =====

<code c>
const char *efl_ui_translatable_text_get(const Eo *obj, const char **domain);
void efl_ui_translatable_text_set(Eo *obj, const char *label, const char *domain);
</code>

===== Implemented by =====

  * [[:develop:api:efl:ui:translatable:property:translatable_text|Efl.Ui.Translatable.translatable_text]]

