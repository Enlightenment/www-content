~~Title: Efl.Ui.Progressbar.pulse_mode~~
===== Description =====

%%Control whether a given progress bar widget is at "pulsing mode" or not.%%

%%By default progress bars display values from low to high boundaries. There are situations however in which the progress of a given task is unknown. In these cases, you can set a progress bar widget to a "pulsing state" to give the user an idea that some computation is being done without showing the precise progress rate. In the default theme, it will animate the bar with content, switching constantly between filling it and back to non-filled in a loop. To start and stop this pulsing animation you need to explicitly call elm_progressbar_pulse().%%

//Since 1.20//
{{page>:develop:api-include:efl:ui:progressbar:property:pulse_mode:description&nouser&nolink&nodate}}

===== Values =====

  * **pulse** - %%%%''true''%% to put %%''obj''%% in pulsing mode, %%''false''%% to put it back to its default one%%

===== Signature =====

<code>
@property pulse_mode {
    get {
        values {
            pulse: bool;
        }
    }
    set {
        values {
            pulse: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_ui_progressbar_pulse_mode_get(const Eo *obj);
void efl_ui_progressbar_pulse_mode_set(Eo *obj, Eina_Bool pulse);
</code>

===== Implemented by =====

  * **Efl.Ui.Progressbar.pulse_mode**

