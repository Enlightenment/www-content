~~Title: Efl.Ui.Win.Type~~
===== Description =====

%%Defines the types of window that can be created%%

%%These are hints set on a window so that a running Window Manager knows how the window should be handled and/or what kind of decorations it should have.%%

%%Currently, only the X11 backed engines use them.%%

{{page>:develop:api-include:efl:ui:win:type:description&nouser&nolink&nodate}}

===== Fields =====

{{page>:develop:api-include:efl:ui:win:type:fields&nouser&nolink&nodate}}

  * **unknown** - %%Default, unknown, type%%
  * **basic** - %%A normal window. Indicates a normal, top-level window. Almost every window will be created with this type.%%
  * **dialog_basic** - %%Used for simple dialog windows.%%
  * **desktop** - %%For special desktop windows, like a background window holding desktop icons.%%
  * **dock** - %%The window is used as a dock or panel. Usually would be kept on top of any other window by the Window Manager.%%
  * **toolbar** - %%The window is used to hold a floating toolbar, or similar.%%
  * **menu** - %%Similar to #ELM_WIN_TOOLBAR.%%
  * **utility** - %%A persistent utility window, like a toolbox or palette.%%
  * **splash** - %%Splash window for a starting up application.%%
  * **dropdown_menu** - %%The window is a dropdown menu, as when an  entry in a menubar is clicked. This hint exists for completion only, as the EFL way of implementing a menu would not normally use a separate window for its contents.%%
  * **popup_menu** - %%Like #ELM_WIN_DROPDOWN_MENU, but for the menu triggered by right-clicking an object.%%
  * **tooltip** - %%The window is a tooltip. A short piece of explanatory text that typically appear after the mouse cursor hovers over an object for a while. Typically not very commonly used in the EFL.%%
  * **notification** - %%A notification window, like a warning about battery life or a new E-Mail received.%%
  * **combo** - %%A window holding the contents of a combo box. Not usually used in the EFL.%%
  * **dnd** - %%Used to indicate the window is a representation of an object being dragged across different windows, or even applications. Typically used with elm_win_override_set().%%
  * **naviframe_basic** - %%Used for naviframe style replacement with a back button instead of a close button.%%

===== Signature =====

<code>
enum Efl.Ui.Win.Type {
    unknown: +1,
    basic,
    dialog_basic,
    desktop,
    dock,
    toolbar,
    menu,
    utility,
    splash,
    dropdown_menu,
    popup_menu,
    tooltip,
    notification,
    combo,
    dnd,
    naviframe_basic: 17
}
</code>

===== C signature =====

<code c>
typedef enum {
    EFL_UI_WIN_UNKNOWN = -1 /* +1 */,
    EFL_UI_WIN_BASIC,
    EFL_UI_WIN_DIALOG_BASIC,
    EFL_UI_WIN_DESKTOP,
    EFL_UI_WIN_DOCK,
    EFL_UI_WIN_TOOLBAR,
    EFL_UI_WIN_MENU,
    EFL_UI_WIN_UTILITY,
    EFL_UI_WIN_SPLASH,
    EFL_UI_WIN_DROPDOWN_MENU,
    EFL_UI_WIN_POPUP_MENU,
    EFL_UI_WIN_TOOLTIP,
    EFL_UI_WIN_NOTIFICATION,
    EFL_UI_WIN_COMBO,
    EFL_UI_WIN_DND,
    EFL_UI_WIN_NAVIFRAME_BASIC = 17
} Efl_Ui_Win_Type;
</code>

