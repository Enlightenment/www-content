~~Title: Efl.Ui.Win.wm_available_rotations~~
===== Values =====

  * **allow_0** - %%Normal orientation.%%
  * **allow_90** - %%Rotated 90 degrees CCW.%%
  * **allow_180** - %%Rotated 180 degrees.%%
  * **allow_270** - %%Rotated 270 degrees CCW (i.e. 90 CW).%%
===== Description =====

%%Defines which rotations this window supports.%%

%%The window manager will refer to these hints and rotate the window accordingly, depending on the device orientation, for instance.%%
{{page>:develop:api-include:efl:ui:win:property:wm_available_rotations:description&nouser&nolink&nodate}}


===== Signature =====

<code>
@property wm_available_rotations {
    get {
        values {
            allow_0: bool;
            allow_90: bool;
            allow_180: bool;
            allow_270: bool;
        }
        return: bool;
    }
    set {
        values {
            allow_0: bool;
            allow_90: bool;
            allow_180: bool;
            allow_270: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_ui_win_wm_available_rotations_get(const Eo *obj, Eina_Bool *allow_0, Eina_Bool *allow_90, Eina_Bool *allow_180, Eina_Bool *allow_270);
void efl_ui_win_wm_available_rotations_set(Eo *obj, Eina_Bool allow_0, Eina_Bool allow_90, Eina_Bool allow_180, Eina_Bool allow_270);
</code>

===== Implemented by =====

  * **Efl.Ui.Win.wm_available_rotations**

