~~Title: Efl.Ui.Win.pointer_inside~~
//Overridden from [[:develop:api:efl:canvas:object:property:pointer_inside|Efl.Canvas.Pointer.pointer_inside]] **(get)**.//===== Signature =====

<code>
@property pointer_inside @pure_virtual {
    get {
        keys {
            seat: free(Efl.Input.Device, efl_del) @optional;
        }
        values {
            inside: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_canvas_pointer_inside_get(const Eo *obj, Efl_Input_Device *seat);
</code>

===== Keys =====

  * **seat** - %%The seat to consider, if %%''null''%% then the default seat will be used.%%
===== Values =====

  * **inside** - %%%%''true''%% if the mouse pointer is inside the canvas, %%''false''%% otherwise%%
===== Description =====

%%Returns whether the mouse pointer is logically inside the canvas.%%

%%When this function is called it will return a value of either %%''false''%% or %%''true''%%, depending on whether a pointer,in or pointer,out event has been called previously.%%

%%A return value of %%''true''%% indicates the mouse is logically inside the canvas, and %%''false''%% implies it is logically outside the canvas.%%

%%A canvas begins with the mouse being assumed outside (%%''false''%%).%%

{{page>:develop:api-include:efl:ui:win:property:pointer_inside:description&nouser&nolink&nodate}}

===== Implemented by =====

  * [[:develop:api:efl:canvas:pointer:property:pointer_inside|Efl.Canvas.Pointer.pointer_inside]]

