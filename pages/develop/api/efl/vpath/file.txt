~~Title: Efl.Vpath.File~~
====== Efl.Vpath.File (class) ======

===== Description =====

%%VPath File is an actual representation of a downloaded/mapped vpath file%%

%%Keep this object around for as long as you need to use the file as it may have been downloaded and kept as a local temporary file and deletion may remove it.%%

%%When you have a Vpath File object for the first time, call the do() method on it to actually begin/do the mapping. From here the fetched or failed event callbacks will be called, inside of which or afterwards you can fetch the resulting local file path by getting the result property.%%

//Since 1.18//

{{page>:develop:api-include:efl:vpath:file:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_vpath_file [fillcolor = "black", label = "Efl.Vpath.File", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]

    efl_vpath_file -> efl_object
}
</graphviz>

++++

++++ Full hierarchy |

  * [[:develop:api:efl:object|Efl.Object]] //(class)//


++++
===== Members =====

**[[:develop:api:efl:vpath:file:method:do|do]]**\\
> %%Actually begin the resolving here - emit event now or do later%%
<code c>
Eina_Bool efl_vpath_file_do(Eo *obj);
</code>
\\
**[[:develop:api:efl:vpath:file:method:wait|wait]]**\\
> %%If not fetched yet, wait until it is and call result cb%%
<code c>
void efl_vpath_file_wait(Eo *obj);
</code>
\\
**[[:develop:api:efl:vpath:file:property:keep|keep]]** //**(get, set)**//\\
> %%If this object has to be kept for the usage of the result%%
<code c>
Eina_Bool efl_vpath_file_keep_get(const Eo *obj);
void efl_vpath_file_keep_set(Eo *obj, Eina_Bool keep);
</code>
\\
**[[:develop:api:efl:vpath:file:property:path|path]]** //**(get, set)**//\\
> %%The original source path provided to lookup/fetch from%%
<code c>
const char *efl_vpath_file_path_get(const Eo *obj);
void efl_vpath_file_path_set(Eo *obj, const char *path);
</code>
\\
**[[:develop:api:efl:vpath:file:property:result|result]]** //**(get, set)**//\\
> %%The resulting real local file path to open/read%%
<code c>
const char *efl_vpath_file_result_get(const Eo *obj);
void efl_vpath_file_result_set(Eo *obj, const char *path);
</code>
\\

==== Inherited ====

[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]**, **[[:develop:api:efl:object:method:composite_attach|composite_attach]]**, **[[:develop:api:efl:object:method:composite_detach|composite_detach]]**, **[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]**, **[[:develop:api:efl:object:method:constructor|constructor]]**, **[[:develop:api:efl:object:method:debug_name_override|debug_name_override]]**, **[[:develop:api:efl:object:method:del|del]]**, **[[:develop:api:efl:object:method:destructor|destructor]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]**, **[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]**, **[[:develop:api:efl:object:method:event_freeze|event_freeze]]**, **[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]**, **[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]**, **[[:develop:api:efl:object:method:event_thaw|event_thaw]]**, **[[:develop:api:efl:object:method:finalize|finalize]]**, **[[:develop:api:efl:object:method:name_find|name_find]]**, **[[:develop:api:efl:object:method:provider_find|provider_find]]**, **[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**//, **[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**//, **[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**//, **[[:develop:api:efl:object:property:name|name]]** //**(get, set)**//, **[[:develop:api:efl:object:property:parent|parent]]** //**(get, set)**//
===== Events =====

**[[:develop:api:efl:vpath:file:event:failed|failed]]**\\
> %%File fetch or mapping failed%%
<code c>
EFL_VPATH_FILE_EVENT_FAILED(void)
</code>
\\ **[[:develop:api:efl:vpath:file:event:fetched|fetched]]**\\
> %%File successfully mapped/fetched%%
<code c>
EFL_VPATH_FILE_EVENT_FETCHED(void)
</code>
\\ ==== Inherited ====

[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:event:callback_add|callback,add]]**, **[[:develop:api:efl:object:event:callback_del|callback,del]]**, **[[:develop:api:efl:object:event:del|del]]**