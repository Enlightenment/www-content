~~Title: Efl.Pack.Table.pack_table~~
===== Description =====

%%Pack object at a given location in the table.%%

%%When this container is deleted, it will request deletion on the given %%''subobj''%%. Use %%[[:develop:api:efl:pack:method:unpack|Efl.Pack.unpack]]%% to remove %%''subobj''%% from this container without deleting it.%%
{{page>:develop:api-include:efl:pack:table:method:pack_table:description&nouser&nolink&nodate}}

===== Signature =====

<code>
pack_table @pure_virtual {
    params {
        @in subobj: free(Efl.Gfx, efl_del);
        @in col: int;
        @in row: int;
        @in colspan: int @optional;
        @in rowspan: int @optional;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_pack_table(Eo *obj, Efl_Gfx *subobj, int col, int row, int colspan, int rowspan);
</code>

===== Parameters =====

  * **subobj** //(in)// - %%A child object to pack in this table.%%
  * **col** //(in)// - %%Column number%%
  * **row** //(in)// - %%Row number%%
  * **colspan** //(in)// - %%0 means 1, -1 means %%[[:develop:api:efl:pack:table:property:table_columns|Efl.Pack.Table.table_columns]]%%%%
  * **rowspan** //(in)// - %%0 means 1, -1 means %%[[:develop:api:efl:pack:table:property:table_rows|Efl.Pack.Table.table_rows]]%%%%

===== Implemented by =====

  * **Efl.Pack.Table.pack_table**

