~~Title: Efl.Input.Key~~
====== Efl.Input.Key (class) ======

===== Description =====

%%Represents a single key event from a keyboard or similar device.%%

//Since 1.18//

{{page>:develop:api-include:efl:input:key:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_input_key [fillcolor = "black", label = "Efl.Input.Key", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_input_event [fillcolor = "gray15", label = "Efl.Input.Event", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_duplicate [fillcolor = "gray15", label = "Efl.Duplicate", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_state [fillcolor = "gray15", label = "Efl.Input.State", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_input_event [fillcolor = "gray15", label = "Efl.Input.Event", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_interface [fillcolor = "gray15", label = "Efl.Interface", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_duplicate [fillcolor = "gray15", label = "Efl.Duplicate", color = "cornflowerblue", fontcolor = "white", style = "filled"]

    efl_input_key -> efl_object
    efl_input_key -> efl_input_event
    efl_input_event -> efl_interface
    efl_input_event -> efl_object
    efl_input_event -> efl_duplicate
    efl_input_key -> efl_input_state
    efl_input_key -> efl_input_event
    efl_input_event -> efl_interface
    efl_input_event -> efl_object
    efl_input_event -> efl_duplicate
}
</graphviz>

++++

++++ Full hierarchy |

  * [[:develop:api:efl:object|Efl.Object]] //(class)//
  * [[:develop:api:efl:input:event|Efl.Input.Event]] //(mixin)//
    * [[:develop:api:efl:interface|Efl.Interface]] //(interface)//
    * [[:develop:api:efl:object|Efl.Object]] //(class)//
    * [[:develop:api:efl:duplicate|Efl.Duplicate]] //(interface)//
  * [[:develop:api:efl:input:state|Efl.Input.State]] //(interface)//
  * [[:develop:api:efl:input:event|Efl.Input.Event]] //(mixin)//
    * [[:develop:api:efl:interface|Efl.Interface]] //(interface)//
    * [[:develop:api:efl:object|Efl.Object]] //(class)//
    * [[:develop:api:efl:duplicate|Efl.Duplicate]] //(interface)//


++++
===== Members =====

**[[:develop:api:efl:input:key:property:compose|compose]]** //**(get, set)**//
<code c>
const char *efl_input_key_compose_get(const Eo *obj);
void efl_input_key_compose_set(Eo *obj, const char *val);
</code>

%%A UTF8 string if this keystroke has modified a string in the middle of being composed.%%\\ 
\\ 
**[[:develop:api:efl:input:key:property:key_code|key_code]]** //**(get, set)**//
<code c>
int efl_input_key_code_get(const Eo *obj);
void efl_input_key_code_set(Eo *obj, int val);
</code>

%%Key scan code numeric value.%%\\ 
\\ 
**[[:develop:api:efl:input:key:property:key_name|key_name]]** //**(get, set)**//
<code c>
const char *efl_input_key_name_get(const Eo *obj);
void efl_input_key_name_set(Eo *obj, const char *val);
</code>

%%Name string of the key.%%\\ 
\\ 
**[[:develop:api:efl:input:key:property:key|key]]** //**(get, set)**//
<code c>
const char *efl_input_key_get(const Eo *obj);
void efl_input_key_set(Eo *obj, const char *val);
</code>

%%Logical key.%%\\ 
\\ 
**[[:develop:api:efl:input:key:property:pressed|pressed]]** //**(get, set)**//
<code c>
Eina_Bool efl_input_key_pressed_get(const Eo *obj);
void efl_input_key_pressed_set(Eo *obj, Eina_Bool val);
</code>

%%%%''true''%% if the key is down, %%''false''%% if it is released.%%\\ 
\\ 
**[[:develop:api:efl:input:key:property:string|string]]** //**(get, set)**//
<code c>
const char *efl_input_key_string_get(const Eo *obj);
void efl_input_key_string_set(Eo *obj, const char *val);
</code>

%%A UTF8 string if this keystroke has produced a visible string to be added.%%\\ 
\\ 

==== Inherited ====

[[:develop:api:efl:duplicate|Efl.Duplicate]].**[[:develop:api:efl:input:key:method:duplicate|duplicate]]** //[Overridden here]//
\\ 
[[:develop:api:efl:input:event|Efl.Input.Event]].**[[:develop:api:efl:input:event:property:processed|processed]]** //**(get, set)**//
\\ 
[[:develop:api:efl:input:event|Efl.Input.Event]].**[[:develop:api:efl:input:event:property:scrolling|scrolling]]** //**(get, set)**//
\\ 
[[:develop:api:efl:input:event|Efl.Input.Event]].**[[:develop:api:efl:input:key:method:reset|reset]]** //[Overridden here]//
\\ 
[[:develop:api:efl:input:event|Efl.Input.Event]].**[[:develop:api:efl:input:key:property:device|device]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:input:event|Efl.Input.Event]].**[[:develop:api:efl:input:key:property:event_flags|event_flags]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:input:event|Efl.Input.Event]].**[[:develop:api:efl:input:key:property:fake|fake]]** //**(get)**// //[Overridden here]//
\\ 
[[:develop:api:efl:input:event|Efl.Input.Event]].**[[:develop:api:efl:input:key:property:timestamp|timestamp]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:input:state|Efl.Input.State]].**[[:develop:api:efl:input:key:property:lock_enabled|lock_enabled]]** //**(get)**// //[Overridden here]//
\\ 
[[:develop:api:efl:input:state|Efl.Input.State]].**[[:develop:api:efl:input:key:property:modifier_enabled|modifier_enabled]]** //**(get)**// //[Overridden here]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:input:key:method:constructor|constructor]]** //[Overridden here]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:input:key:method:destructor|destructor]]** //[Overridden here]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_attach|composite_attach]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_detach|composite_detach]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:debug_name_override|debug_name_override]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:del|del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_freeze|event_freeze]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_thaw|event_thaw]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:finalize|finalize]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:name_find|name_find]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:provider_find|provider_find]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:name|name]]** //**(get, set)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:parent|parent]]** //**(get, set)**//
\\ 

===== Events =====

==== Inherited ====

[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:callback_add|callback,add]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:callback_del|callback,del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:del|del]]**
\\ 
