~~Title: Efl.Input.Pointer.previous_position~~
===== Signature =====

<code>
@property previous_position {
    get {
        values {
            pos: Eina.Position2D;
        }
    }
    set {
        values {
            pos: Eina.Position2D;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Position2D efl_input_pointer_previous_position_get(const Eo *obj);
void efl_input_pointer_previous_position_set(Eo *obj, Eina_Position2D pos);
</code>

===== Values =====

  * **pos** - %%The position of the event, in pixels.%%
===== Description =====

%%Position of the previous event, valid for move events.%%

%%Relative to the window. May be equal to %%[[:develop:api:efl:input:pointer:property:position|Efl.Input.Pointer.position]]%% (by default).%%

%%This position, in integers, is an approximation of %%[[:develop:api:efl:input:pointer:property:value|Efl.Input.Pointer.value.get]]%%(%%''previous_x''%%), %%[[:develop:api:efl:input:pointer:property:value|Efl.Input.Pointer.value.get]]%%(%%''previous_y''%%). Use %%[[:develop:api:efl:input:pointer:property:previous_position|Efl.Input.Pointer.previous_position]]%% if you need simple pixel positions, but prefer the generic interface if you need precise coordinates.%%

//Since 1.18//
{{page>:develop:api-include:efl:input:pointer:property:previous_position:description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Efl.Input.Pointer.previous_position**

