~~Title: Efl.Net.Control.agent_enabled~~
===== Description =====

%%The agent is responsible for user interaction.%%

%%When enabled, the local process will become the agent for user interaction, such as requesting passphrases, asking the user to open a browser to perform web-authentication and report connection errors.%%

%%There can be only one agent in the system at any time: Registering one will unregister the other. Special permissions may be required to become an agent.%%

%%A useful agent should monitor "agent_error", "agent_browser_url" and "agent_request_input" events. When input is requested, reply using %%[[:develop:api:efl:net:control:method:agent_reply|Efl.Net.Control.agent_reply]]%%.%%

//Since 1.19//
{{page>:develop:api-include:efl:net:control:property:agent_enabled:description&nouser&nolink&nodate}}

===== Values =====

  * **agent_enabled** - %%%%''true''%% if to become the agent, %%''false''%% otherwise%%

===== Signature =====

<code>
@property agent_enabled {
    get {
        values {
            agent_enabled: bool;
        }
    }
    set {
        values {
            agent_enabled: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_net_control_agent_enabled_get(const Eo *obj);
void efl_net_control_agent_enabled_set(Eo *obj, Eina_Bool agent_enabled);
</code>

===== Implemented by =====

  * **Efl.Net.Control.agent_enabled**

