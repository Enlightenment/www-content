~~Title: Efl.Net.Server.serve~~
===== Description =====

%%Starts serving requests.%%

%%This method starts the server, resolves addresses and then proceeds to the actual listen(2)/bind(2) equivalent..%%

%%Once the connection is fully set up the "serving" event is dispatched.%%

//Since 1.19//
{{page>:develop:api-include:efl:net:server:method:serve:description&nouser&nolink&nodate}}

===== Signature =====

<code>
serve @pure_virtual {
    params {
        @in address: free(string, free) @nonull;
    }
    return: Eina.Error;
}
</code>

===== C signature =====

<code c>
Eina_Error efl_net_server_serve(Eo *obj, const char *address);
</code>

===== Parameters =====

  * **address** //(in)// - %%Address to run server on%%

===== Implemented by =====

  * **Efl.Net.Server.serve**

