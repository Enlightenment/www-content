~~Title: Efl.Net.Server.Unix~~
====== Efl.Net.Server.Unix (class) ======

===== Description =====

%%An AF_UNIX server.%%

%%The %%[[:develop:api:efl:net:server:method:serve|Efl.Net.Server.serve]]%% method will call bind(2) directly, thus path will be accessed and created in that method. If the created socket must be subject to some special mode or user, change before executing that method, for example calling umask(2).%%

//Since 1.19//

{{page>:develop:api-include:efl:net:server:unix:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:net:server:fd|Efl.Net.Server.Fd]] //(class)// => [[:develop:api:efl:loop:fd|Efl.Loop.Fd]] //(class)// => [[:develop:api:efl:loop_user|Efl.Loop_User]] //(class)// => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_net_server_unix [fillcolor = "black", label = "Efl.Net.Server.Unix", color = "gray15", fontcolor = "white", style = "filled"]
    efl_net_server_fd [fillcolor = "gray15", label = "Efl.Net.Server.Fd", color = "gray15", fontcolor = "white", style = "filled"]
    efl_loop_fd [fillcolor = "gray15", label = "Efl.Loop.Fd", color = "gray15", fontcolor = "white", style = "filled"]
    efl_loop_user [fillcolor = "gray15", label = "Efl.Loop_User", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_net_server [fillcolor = "gray15", label = "Efl.Net.Server", color = "cornflowerblue", fontcolor = "white", style = "filled"]

    efl_net_server_unix -> efl_net_server_fd
    efl_net_server_fd -> efl_loop_fd
    efl_loop_fd -> efl_loop_user
    efl_loop_user -> efl_object
    efl_net_server_fd -> efl_net_server
}
</graphviz>

++++

++++ Full hierarchy |

  * [[:develop:api:efl:net:server:fd|Efl.Net.Server.Fd]] //(class)//
    * [[:develop:api:efl:loop:fd|Efl.Loop.Fd]] //(class)//
      * [[:develop:api:efl:loop_user|Efl.Loop_User]] //(class)//
        * [[:develop:api:efl:object|Efl.Object]] //(class)//
    * [[:develop:api:efl:net:server|Efl.Net.Server]] //(interface)//


++++
===== Members =====

**[[:develop:api:efl:net:server:unix:method:destructor|destructor]]**// [Overridden from [[:develop:api:efl:object|Efl.Object]]]//\\
> %%Call the object's destructor.%%
<code c>
void efl_destructor(Eo *obj);
</code>
\\
**[[:develop:api:efl:net:server:unix:method:serve|serve]]**// [Overridden from [[:develop:api:efl:net:server|Efl.Net.Server]]]//\\
> %%Starts serving requests.%%
<code c>
Eina_Error efl_net_server_serve(Eo *obj, const char *address);
</code>
\\
**[[:develop:api:efl:net:server:unix:method:socket_activate|socket_activate]]**// [Overridden from [[:develop:api:efl:net:server:fd|Efl.Net.Server.Fd]]]//\\
> %%If this method is called use an already activated socket.%%
<code c>
Eina_Error efl_net_server_fd_socket_activate(Eo *obj, const char *address);
</code>
\\
**[[:develop:api:efl:net:server:unix:property:leading_directories_create|leading_directories_create]]** //**(get, set)**//\\
> %%If %%''true''%%, all parent directories will be created with given mode.%%
<code c>
void efl_net_server_unix_leading_directories_create_get(const Eo *obj, Eina_Bool *leading_directories_create, unsigned int *mode);
void efl_net_server_unix_leading_directories_create_set(Eo *obj, Eina_Bool leading_directories_create, unsigned int mode);
</code>
\\
**[[:develop:api:efl:net:server:unix:property:unlink_before_bind|unlink_before_bind]]** //**(get, set)**//\\
> %%AF_UNIX paths may be stale due crashes, remove files and try again.%%
<code c>
Eina_Bool efl_net_server_unix_unlink_before_bind_get(const Eo *obj);
void efl_net_server_unix_unlink_before_bind_set(Eo *obj, Eina_Bool unlink_before_bind);
</code>
\\
**[[:develop:api:efl:net:server:unix:method:client_add|client_add]]**// [Overridden from [[:develop:api:efl:net:server:fd|Efl.Net.Server.Fd]]]// ''protected''\\
> %%Accepts a new client, should emit "client,add".%%
<code c>
void efl_net_server_fd_client_add(Eo *obj, int client_fd);
</code>
\\
**[[:develop:api:efl:net:server:unix:method:client_reject|client_reject]]**// [Overridden from [[:develop:api:efl:net:server:fd|Efl.Net.Server.Fd]]]// ''protected''\\
> %%Rejects a new client, should emit "client,rejected".%%
<code c>
void efl_net_server_fd_client_reject(Eo *obj, int client_fd);
</code>
\\

==== Inherited ====

[[:develop:api:efl:loop:fd|Efl.Loop.Fd]]\\
> **[[:develop:api:efl:loop:fd:property:fd_file|fd_file]]** //**(get, set)**//, **[[:develop:api:efl:loop:fd:property:parent|parent]]** //**(get, set)**//\\
[[:develop:api:efl:loop_user|Efl.Loop_User]]\\
> **[[:develop:api:efl:loop_user:property:loop|loop]]** //**(get)**//\\
[[:develop:api:efl:net:server:fd|Efl.Net.Server.Fd]]\\
> **[[:develop:api:efl:net:server:fd:method:constructor|constructor]]**, **[[:develop:api:efl:net:server:fd:method:finalize|finalize]]**, **[[:develop:api:efl:net:server:fd:property:address|address]]** //**(get, set)**// ''protected set'', **[[:develop:api:efl:net:server:fd:property:clients_count|clients_count]]** //**(get, set)**// ''protected set'', **[[:develop:api:efl:net:server:fd:property:clients_limit|clients_limit]]** //**(get, set)**//, **[[:develop:api:efl:net:server:fd:property:close_on_exec|close_on_exec]]** //**(get, set)**//, **[[:develop:api:efl:net:server:fd:property:family|family]]** //**(get, set)**// ''protected set'', **[[:develop:api:efl:net:server:fd:property:fd|fd]]** //**(get, set)**//, **[[:develop:api:efl:net:server:fd:property:reuse_address|reuse_address]]** //**(get, set)**//, **[[:develop:api:efl:net:server:fd:property:reuse_port|reuse_port]]** //**(get, set)**//, **[[:develop:api:efl:net:server:fd:property:serving|serving]]** //**(get, set)**// ''protected set''\\
[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]**, **[[:develop:api:efl:object:method:composite_attach|composite_attach]]**, **[[:develop:api:efl:object:method:composite_detach|composite_detach]]**, **[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]**, **[[:develop:api:efl:object:method:debug_name_override|debug_name_override]]**, **[[:develop:api:efl:object:method:del|del]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]**, **[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]**, **[[:develop:api:efl:object:method:event_freeze|event_freeze]]**, **[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]**, **[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]**, **[[:develop:api:efl:object:method:event_thaw|event_thaw]]**, **[[:develop:api:efl:object:method:name_find|name_find]]**, **[[:develop:api:efl:object:method:provider_find|provider_find]]**, **[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**//, **[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**//, **[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**//, **[[:develop:api:efl:object:property:name|name]]** //**(get, set)**//\\
[[:develop:api:efl:net:server:fd|Efl.Net.Server.Fd]]\\
> **[[:develop:api:efl:net:server:fd:method:client_announce|client_announce]]** ''protected'', **[[:develop:api:efl:net:server:fd:method:process_incoming_data|process_incoming_data]]** ''protected''
===== Events =====

==== Inherited ====

[[:develop:api:efl:loop:fd|Efl.Loop.Fd]]\\
> **[[:develop:api:efl:loop:fd:event:error|error]]**, **[[:develop:api:efl:loop:fd:event:read|read]]**, **[[:develop:api:efl:loop:fd:event:write|write]]**\\
[[:develop:api:efl:net:server|Efl.Net.Server]]\\
> **[[:develop:api:efl:net:server:event:client_add|client,add]]**, **[[:develop:api:efl:net:server:event:client_rejected|client,rejected]]**, **[[:develop:api:efl:net:server:event:error|error]]**, **[[:develop:api:efl:net:server:event:serving|serving]]**\\
[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:event:callback_add|callback,add]]**, **[[:develop:api:efl:object:event:callback_del|callback,del]]**, **[[:develop:api:efl:object:event:del|del]]**