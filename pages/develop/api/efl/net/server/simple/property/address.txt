~~Title: Efl.Net.Server.Simple.address~~
===== Description =====

%%The address to which the server is bound.%%

%%The actual value depends on the type of server, such as an IPv4 (ip:port) or IPv6 ([ip]:port) formatted for a TCP/UDP server, the path if an Unix Local...%%

%%It's always resolved. If operations are working with domain names or URLs, these are the values the kernel reports. It's similar to getsockname() in behavior.%%

//Since 1.19//
{{page>:develop:api-include:efl:net:server:simple:property:address:description&nouser&nolink&nodate}}

===== Values =====

  * **address** - %%Address the server is bound to%%

//Overridden from [[:develop:api:efl:net:server:property:address|Efl.Net.Server.address]] **(get)**.//===== Signature =====

<code>
@property address @pure_virtual {
    get {
        values {
            address: free(string, free);
        }
    }
    set @protected {
        values {
            address: free(string, free);
        }
    }
}
</code>

===== C signature =====

<code c>
const char *efl_net_server_address_get(const Eo *obj);
void efl_net_server_address_set(Eo *obj, const char *address);
</code>

===== Implemented by =====

  * [[:develop:api:efl:net:server:property:address|Efl.Net.Server.address]]

