~~Title: Efl.Net.Ip_Address.address~~
===== Values =====

  * **address** - %%Address bytes. If AF_INET it's 4 bytes. If AF_INET6, it's 16 bytes. This matches exactly what is in struct sockaddr_in::sin_addr or struct sockaddr_in6:sin6_addr, see %%[[:develop:api:efl:net:ip_address:property:sockaddr|Efl.Net.Ip_Address.sockaddr]]%%%%
===== Description =====

%%The bytes representing the address.%%

%%May only be set once, afterwards the object is not changing.%%

%%Must be set after %%[[:develop:api:efl:net:ip_address:property:family|Efl.Net.Ip_Address.family]]%%.%%

//Since 1.19//
{{page>:develop:api-include:efl:net:ip_address:property:address:description&nouser&nolink&nodate}}


===== Signature =====

<code>
@property address {
    get {
        values {
            address: const(Eina.Slice);
        }
    }
    set {
        values {
            address: const(Eina.Slice);
        }
    }
}
</code>

===== C signature =====

<code c>
const Eina_Slice efl_net_ip_address_get(const Eo *obj);
void efl_net_ip_address_set(Eo *obj, const Eina_Slice address);
</code>

===== Implemented by =====

  * **Efl.Net.Ip_Address.address**

