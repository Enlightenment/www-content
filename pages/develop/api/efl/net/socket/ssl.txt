~~Title: Efl.Net.Socket.Ssl~~
====== Efl.Net.Socket.Ssl (class) ======

===== Description =====

%%A wrapper socket doing SSL (Secure Sockets Layer).%%

%%Use this wrapper around an existing socket to do secure communication, a common use is to apply it to TCP sockets created with %%[[:develop:api:class:efl:net:dialer:tcp|Efl.Net.Dialer.Tcp]]%% or %%[[:develop:api:class:efl:net:server:tcp|Efl.Net.Server.Tcp]]%% created with "client,add" event.%%

//Since 1.19//

{{page>:develop:api-include:efl:net:socket:ssl:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:loop_user|Efl.Loop_User]] //(class)// => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_net_socket_ssl [fillcolor = "black", label = "Efl.Net.Socket.Ssl", color = "gray15", fontcolor = "white", style = "filled"]
    efl_loop_user [fillcolor = "gray15", label = "Efl.Loop_User", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_net_socket [fillcolor = "gray15", label = "Efl.Net.Socket", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_reader [fillcolor = "gray15", label = "Efl.Io.Reader", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_writer [fillcolor = "gray15", label = "Efl.Io.Writer", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_closer [fillcolor = "gray15", label = "Efl.Io.Closer", color = "deepskyblue", fontcolor = "white", style = "filled"]

    efl_net_socket_ssl -> efl_loop_user
    efl_loop_user -> efl_object
    efl_net_socket_ssl -> efl_net_socket
    efl_net_socket -> efl_io_reader
    efl_net_socket -> efl_io_writer
    efl_net_socket -> efl_io_closer
}
</graphviz>

++++

++++ Full hierarchy |

  * [[:develop:api:efl:loop_user|Efl.Loop_User]] //(class)//
    * [[:develop:api:efl:object|Efl.Object]] //(class)//
  * [[:develop:api:efl:net:socket|Efl.Net.Socket]] //(interface)//
    * [[:develop:api:efl:io:reader|Efl.Io.Reader]] //(interface)//
    * [[:develop:api:efl:io:writer|Efl.Io.Writer]] //(interface)//
    * [[:develop:api:efl:io:closer|Efl.Io.Closer]] //(mixin)//


++++
===== Members =====

**[[:develop:api:efl:net:socket:ssl:method:adopt|adopt]]**
<code c>
void efl_net_socket_ssl_adopt(Eo *obj, Efl_Net_Socket *efl_net_socket, Efl_Net_Ssl_Context *ctx);
</code>

%%Adopt an Efl.Net.Dialer or regular Efl.Net.Socket that will be used for the actual communication.%%\\ 
\\ 
**[[:develop:api:efl:net:socket:ssl:property:hostname_override|hostname_override]]** //**(get, set)**//
<code c>
const char *efl_net_socket_ssl_hostname_override_get(const Eo *obj);
void efl_net_socket_ssl_hostname_override_set(Eo *obj, const char *hostname_override);
</code>

%%Overrides the hostname to use for this socket.%%\\ 
\\ 
**[[:develop:api:efl:net:socket:ssl:property:hostname_verify|hostname_verify]]** //**(get, set)**//
<code c>
Eina_Bool efl_net_socket_ssl_hostname_verify_get(const Eo *obj);
void efl_net_socket_ssl_hostname_verify_set(Eo *obj, Eina_Bool hostname_verify);
</code>

%%Define if hostname should be verified.%%\\ 
\\ 
**[[:develop:api:efl:net:socket:ssl:property:verify_mode|verify_mode]]** //**(get, set)**//
<code c>
Efl_Net_Ssl_Verify_Mode efl_net_socket_ssl_verify_mode_get(const Eo *obj);
void efl_net_socket_ssl_verify_mode_set(Eo *obj, Efl_Net_Ssl_Verify_Mode verify_mode);
</code>

%%How to verify the remote peer.%%\\ 
\\ 
**[[:develop:api:efl:net:socket:ssl:property:adopted|adopted]]** //**(get)**// ''protected''
<code c>
Eina_Bool efl_net_socket_ssl_adopted_get(const Eo *obj, Efl_Net_Socket **efl_net_socket, Efl_Net_Ssl_Context **ctx);
</code>

%%Return the adopted object, if any. Be careful!%%\\ 
\\ 

==== Inherited ====

[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:net:socket:ssl:method:close|close]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:net:socket:ssl:property:close_on_destructor|close_on_destructor]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:net:socket:ssl:property:close_on_exec|close_on_exec]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:net:socket:ssl:property:closed|closed]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:net:socket:ssl:method:read|read]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:net:socket:ssl:property:can_read|can_read]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:net:socket:ssl:property:eos|eos]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:io:writer|Efl.Io.Writer]].**[[:develop:api:efl:net:socket:ssl:method:write|write]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:writer|Efl.Io.Writer]].**[[:develop:api:efl:net:socket:ssl:property:can_write|can_write]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:loop_user|Efl.Loop_User]].**[[:develop:api:efl:loop_user:property:loop|loop]]** //**(get)**//
\\ 
[[:develop:api:efl:net:socket|Efl.Net.Socket]].**[[:develop:api:efl:net:socket:ssl:property:address_local|address_local]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:net:socket|Efl.Net.Socket]].**[[:develop:api:efl:net:socket:ssl:property:address_remote|address_remote]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:loop_user:property:parent|parent]]** //**(get, set)**// //[Overridden in [[:develop:api:efl:loop_user|Efl.Loop_User]]]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:net:socket:ssl:method:constructor|constructor]]** //[Overridden here]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:net:socket:ssl:method:destructor|destructor]]** //[Overridden here]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:net:socket:ssl:method:finalize|finalize]]** //[Overridden here]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_attach|composite_attach]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_detach|composite_detach]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:debug_name_override|debug_name_override]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:del|del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_freeze|event_freeze]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_thaw|event_thaw]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:name_find|name_find]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:provider_find|provider_find]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:name|name]]** //**(get, set)**//
\\ 

===== Events =====

**[[:develop:api:efl:net:socket:ssl:event:ssl_error|ssl,error]]**
<code c>
EFL_NET_SOCKET_SSL_EVENT_SSL_ERROR(Eina_Error)
</code>

%%An error such as %%[[:develop:api:var:efl:net:socket:ssl:error:handshake|Efl.Net.Socket.Ssl.Error.HANDSHAKE]]%%%%\\ 
\\ 
**[[:develop:api:efl:net:socket:ssl:event:ssl_ready|ssl,ready]]**
<code c>
EFL_NET_SOCKET_SSL_EVENT_SSL_READY(void)
</code>

%%Notifies the SSL handshake was done and the socket is now able to communicate%%\\ 
\\ 
==== Inherited ====

[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:io:closer:event:closed|closed]]**
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:io:reader:event:can_read_changed|can_read,changed]]**
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:io:reader:event:eos|eos]]**
\\ 
[[:develop:api:efl:io:writer|Efl.Io.Writer]].**[[:develop:api:efl:io:writer:event:can_write_changed|can_write,changed]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:callback_add|callback,add]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:callback_del|callback,del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:del|del]]**
\\ 
