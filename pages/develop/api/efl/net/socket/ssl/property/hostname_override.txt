~~Title: Efl.Net.Socket.Ssl.hostname_override~~
===== Signature =====

<code>
@property hostname_override {
    get {
        values {
            hostname_override: free(string, free) @nullable;
        }
    }
    set {
        values {
            hostname_override: free(string, free) @nullable;
        }
    }
}
</code>

===== C signature =====

<code c>
const char *efl_net_socket_ssl_hostname_override_get(const Eo *obj);
void efl_net_socket_ssl_hostname_override_set(Eo *obj, const char *hostname_override);
</code>

===== Values =====

  * **hostname_override** - %%Hostname for this socket%%
===== Description =====

%%Overrides the hostname to use for this socket.%%

%%Most of time this is useful if you're using an IP address but the server certificate only specifies DNS (names).%%

%%If NULL, then it will fetch from socket using %%[[:develop:api:efl:net:socket:property:address_remote|Efl.Net.Socket.address_remote]]%% or %%[[:develop:api:efl:net:dialer:property:address_dial|Efl.Net.Dialer.address_dial]]%%.%%

%%It's only used if %%[[:develop:api:efl:net:socket:ssl:property:hostname_verify|Efl.Net.Socket.Ssl.hostname_verify]]%% is %%''true''%%.%%

//Since 1.19//
{{page>:develop:api-include:efl:net:socket:ssl:property:hostname_override:description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Efl.Net.Socket.Ssl.hostname_override**

