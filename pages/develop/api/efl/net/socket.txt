~~Title: Efl.Net.Socket~~
====== Efl.Net.Socket (interface) ======

===== Description =====

%%The basic socket interface.%%

%%It is built upon the three core Input/Output interfaces: - %%[[:develop:api:efl:io:reader|Efl.Io.Reader]]%%: to receive data. - %%[[:develop:api:efl:io:writer|Efl.Io.Writer]]%%: to send data. - %%[[:develop:api:efl:io:closer|Efl.Io.Closer]]%%: to close the socket for further operations.%%

%%Thus it can be used with utilities like %%[[:develop:api:efl:io:copier|Efl.Io.Copier]]%%.%%

//Since 1.19//

{{page>:develop:api-include:efl:net:socket:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:io:reader|Efl.Io.Reader]] //(interface)//
++++ Full hierarchy |

  * [[:develop:api:efl:io:reader|Efl.Io.Reader]] //(interface)//
  * [[:develop:api:efl:io:writer|Efl.Io.Writer]] //(interface)//
  * [[:develop:api:efl:io:closer|Efl.Io.Closer]] //(mixin)//


++++
===== Members =====

**[[:develop:api:efl:net:socket:property:address_local|address_local]]** //**(get, set)**// ''protected set''\\
> %%The local address, similar to getsockname().%%
<code c>
const char *efl_net_socket_address_local_get(const Eo *obj);
void efl_net_socket_address_local_set(Eo *obj, const char *address);
</code>
\\
**[[:develop:api:efl:net:socket:property:address_remote|address_remote]]** //**(get, set)**// ''protected set''\\
> %%The remote address, similar to getpeername().%%
<code c>
const char *efl_net_socket_address_remote_get(const Eo *obj);
void efl_net_socket_address_remote_set(Eo *obj, const char *address);
</code>
\\

==== Inherited ====

^ [[:develop:api:efl:io:closer|Efl.Io.Closer]] ^^^
|  | **[[:develop:api:efl:io:closer:method:close|close]]** | %%Closes the Input/Output object.%% |
|  | **[[:develop:api:efl:io:closer:property:close_on_destructor|close_on_destructor]]** //**(get, set)**// | %%If true will automatically close() on object destructor.%% |
|  | **[[:develop:api:efl:io:closer:property:close_on_exec|close_on_exec]]** //**(get, set)**// | %%If true will automatically close resources on exec() calls.%% |
|  | **[[:develop:api:efl:io:closer:property:closed|closed]]** //**(get, set)**// | %%If true will notify object was closed.%% |
^ [[:develop:api:efl:io:reader|Efl.Io.Reader]] ^^^
|  ''protected set'' | **[[:develop:api:efl:io:reader:property:can_read|can_read]]** //**(get, set)**// | %%If %%''true''%% will notify %%[[:develop:api:efl:io:reader:method:read|Efl.Io.Reader.read]]%% can be called without blocking or failing.%% |
|  ''protected set'' | **[[:develop:api:efl:io:reader:property:eos|eos]]** //**(get, set)**// | %%If %%''true''%% will notify end of stream.%% |
|  | **[[:develop:api:efl:io:reader:method:read|read]]** | %%Reads data into a pre-allocated buffer.%% |
^ [[:develop:api:efl:io:writer|Efl.Io.Writer]] ^^^
|  ''protected set'' | **[[:develop:api:efl:io:writer:property:can_write|can_write]]** //**(get, set)**// | %%If %%''true''%% will notify %%[[:develop:api:efl:io:writer:method:write|Efl.Io.Writer.write]]%% can be called without blocking or failing.%% |
|  | **[[:develop:api:efl:io:writer:method:write|write]]** | %%Writes data from a pre-populated buffer.%% |

===== Events =====

==== Inherited ====

^ [[:develop:api:efl:io:closer|Efl.Io.Closer]] ^^^
|  | **[[:develop:api:efl:io:closer:event:closed|closed]]** | %%Notifies closed, when property is marked as true%% |
^ [[:develop:api:efl:io:reader|Efl.Io.Reader]] ^^^
|  | **[[:develop:api:efl:io:reader:event:can_read_changed|can_read,changed]]** | %%Notifies can_read property changed.%% |
|  | **[[:develop:api:efl:io:reader:event:eos|eos]]** | %%Notifies end of stream, when property is marked as true.%% |
^ [[:develop:api:efl:io:writer|Efl.Io.Writer]] ^^^
|  | **[[:develop:api:efl:io:writer:event:can_write_changed|can_write,changed]]** | %%Notifies can_write property changed.%% |
