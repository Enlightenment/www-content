~~Title: Efl.Net.Dialer~~
====== Efl.Net.Dialer (interface) ======

===== Description =====

%%Creates a client socket to reach a remote peer.%%

%%The connection process starts when %%[[:develop:api:efl:net:dialer:method:dial|Efl.Net.Dialer.dial]]%% is executed. This allows implementations to request more complex setups requiring a live object handle, which is not possible during construction.%%

%%The socket should be considered connected and ready to use only when "connected" event is dispatched. By then %%[[:develop:api:efl:io:reader:property:can_read|Efl.Io.Reader.can_read]]%% and %%[[:develop:api:efl:io:writer:property:can_write|Efl.Io.Writer.can_write]]%% should change accordingly.%%

%%Once the socket is closed, %%[[:develop:api:efl:io:closer:property:closed|Efl.Io.Closer.closed]]%% will be called and the "closed" event is dispatched.%%

//Since 1.19//

{{page>:develop:api-include:efl:net:dialer:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:net:socket|Efl.Net.Socket]] //(interface)// => [[:develop:api:efl:io:reader|Efl.Io.Reader]] //(interface)//
++++ Full hierarchy |

  * [[:develop:api:efl:net:socket|Efl.Net.Socket]] //(interface)//
    * [[:develop:api:efl:io:reader|Efl.Io.Reader]] //(interface)//
    * [[:develop:api:efl:io:writer|Efl.Io.Writer]] //(interface)//
    * [[:develop:api:efl:io:closer|Efl.Io.Closer]] //(mixin)//


++++
===== Members =====

**[[:develop:api:efl:net:dialer:property:address_dial|address_dial]]** //**(get, set)**// ''protected set''\\
> %%Returns the address given to %%[[:develop:api:efl:net:dialer:method:dial|Efl.Net.Dialer.dial]]%%.%%
<code c>
const char *efl_net_dialer_address_dial_get(const Eo *obj);
void efl_net_dialer_address_dial_set(Eo *obj, const char *address);
</code>
\\
**[[:develop:api:efl:net:dialer:property:connected|connected]]** //**(get, set)**// ''protected set''\\
> %%Returns whenever the socket is connected or not.%%
<code c>
Eina_Bool efl_net_dialer_connected_get(const Eo *obj);
void efl_net_dialer_connected_set(Eo *obj, Eina_Bool connected);
</code>
\\
**[[:develop:api:efl:net:dialer:method:dial|dial]]**\\
> %%Dials to the remote peer.%%
<code c>
Eina_Error efl_net_dialer_dial(Eo *obj, const char *address);
</code>
\\
**[[:develop:api:efl:net:dialer:property:proxy|proxy]]** //**(get, set)**//\\
> %%Controls/retrieves if the dialer should use a proxy.%%
<code c>
const char *efl_net_dialer_proxy_get(const Eo *obj);
void efl_net_dialer_proxy_set(Eo *obj, const char *proxy_url);
</code>
\\
**[[:develop:api:efl:net:dialer:property:timeout_dial|timeout_dial]]** //**(get, set)**//\\
> %%The timeout in seconds to use for dialing/connecting.%%
<code c>
double efl_net_dialer_timeout_dial_get(const Eo *obj);
void efl_net_dialer_timeout_dial_set(Eo *obj, double seconds);
</code>
\\

==== Inherited ====

^ [[:develop:api:efl:io:closer|Efl.Io.Closer]] ^^^
|  | **[[:develop:api:efl:io:closer:method:close|close]]** | %%Closes the Input/Output object.%% |
|  | **[[:develop:api:efl:io:closer:property:close_on_destructor|close_on_destructor]]** //**(get, set)**// | %%If true will automatically close() on object destructor.%% |
|  | **[[:develop:api:efl:io:closer:property:close_on_exec|close_on_exec]]** //**(get, set)**// | %%If true will automatically close resources on exec() calls.%% |
|  | **[[:develop:api:efl:io:closer:property:closed|closed]]** //**(get, set)**// | %%If true will notify object was closed.%% |
^ [[:develop:api:efl:io:reader|Efl.Io.Reader]] ^^^
|  ''protected set'' | **[[:develop:api:efl:io:reader:property:can_read|can_read]]** //**(get, set)**// | %%If %%''true''%% will notify %%[[:develop:api:efl:io:reader:method:read|Efl.Io.Reader.read]]%% can be called without blocking or failing.%% |
|  ''protected set'' | **[[:develop:api:efl:io:reader:property:eos|eos]]** //**(get, set)**// | %%If %%''true''%% will notify end of stream.%% |
|  | **[[:develop:api:efl:io:reader:method:read|read]]** | %%Reads data into a pre-allocated buffer.%% |
^ [[:develop:api:efl:io:writer|Efl.Io.Writer]] ^^^
|  ''protected set'' | **[[:develop:api:efl:io:writer:property:can_write|can_write]]** //**(get, set)**// | %%If %%''true''%% will notify %%[[:develop:api:efl:io:writer:method:write|Efl.Io.Writer.write]]%% can be called without blocking or failing.%% |
|  | **[[:develop:api:efl:io:writer:method:write|write]]** | %%Writes data from a pre-populated buffer.%% |
^ [[:develop:api:efl:net:socket|Efl.Net.Socket]] ^^^
|  ''protected set'' | **[[:develop:api:efl:net:socket:property:address_local|address_local]]** //**(get, set)**// | %%The local address, similar to getsockname().%% |
|  ''protected set'' | **[[:develop:api:efl:net:socket:property:address_remote|address_remote]]** //**(get, set)**// | %%The remote address, similar to getpeername().%% |

===== Events =====

**[[:develop:api:efl:net:dialer:event:connected|connected]]**\\
> %%Notifies the socket is connected to the remote peer.%%
<code c>
EFL_NET_DIALER_EVENT_CONNECTED(void)
</code>
\\ **[[:develop:api:efl:net:dialer:event:error|error]]**\\
> %%Some error happened and the socket stopped working.%%
<code c>
EFL_NET_DIALER_EVENT_ERROR(Eina_Error)
</code>
\\ **[[:develop:api:efl:net:dialer:event:resolved|resolved]]**\\
> %%Notifies %%[[:develop:api:efl:net:dialer:property:address_dial|Efl.Net.Dialer.address_dial]]%% was resolved to %%[[:develop:api:efl:net:socket:property:address_remote|Efl.Net.Socket.address_remote]]%%.%%
<code c>
EFL_NET_DIALER_EVENT_RESOLVED(const char *)
</code>
\\ ==== Inherited ====

^ [[:develop:api:efl:io:closer|Efl.Io.Closer]] ^^^
|  | **[[:develop:api:efl:io:closer:event:closed|closed]]** | %%Notifies closed, when property is marked as true%% |
^ [[:develop:api:efl:io:reader|Efl.Io.Reader]] ^^^
|  | **[[:develop:api:efl:io:reader:event:can_read_changed|can_read,changed]]** | %%Notifies can_read property changed.%% |
|  | **[[:develop:api:efl:io:reader:event:eos|eos]]** | %%Notifies end of stream, when property is marked as true.%% |
^ [[:develop:api:efl:io:writer|Efl.Io.Writer]] ^^^
|  | **[[:develop:api:efl:io:writer:event:can_write_changed|can_write,changed]]** | %%Notifies can_write property changed.%% |
