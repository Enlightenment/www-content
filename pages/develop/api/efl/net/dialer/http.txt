~~Title: Efl.Net.Dialer.Http~~
====== Efl.Net.Dialer.Http (class) ======

===== Description =====

%%HTTP Dialer (Client).%%

%%The effective URL in use, if %%[[:develop:api:class:efl:net:dialer:http:property:allow_redirects|Efl.Net.Dialer.Http.allow_redirects]]%% is %%''true''%% will be available as %%[[:develop:api:interface:efl:net:socket:property:address_remote|Efl.Net.Socket.address_remote]]%%. The %%[[:develop:api:interface:efl:net:socket:property:address_local|Efl.Net.Socket.address_local]]%% is an IP:PORT pair.%%

%%The dialer can do bi-directional information exchange. It can also do a PUT and upload a file, or GET and download one. Anoter case is to do a POST with some form values, including a file, and retrieve its headers and response body. To make usage more streamlined, choose your primary interest with %%[[:develop:api:class:efl:net:dialer:http:property:primary_mode|Efl.Net.Dialer.Http.primary_mode]]%% then get some properties such as %%[[:develop:api:mixin:efl:io:sizer:property:size|Efl.Io.Sizer.size]]%% to report or use what matters to your use case.%%

%%If %%[[:develop:api:class:efl:net:dialer:http:property:allow_redirects|Efl.Net.Dialer.Http.allow_redirects]]%% is %%''true''%%, multiple "connected" and "resolved" signals will be dispatched, one for each connection. Then %%[[:develop:api:class:efl:net:dialer:http:property:response_status|Efl.Net.Dialer.Http.response_status]]%% and %%[[:develop:api:class:efl:net:dialer:http:method:response_headers_get|Efl.Net.Dialer.Http.response_headers_get]]%% will keep changing. Using %%[[:develop:api:class:efl:net:dialer:http:method:response_headers_all_get|Efl.Net.Dialer.Http.response_headers_all_get]]%% one can see the whole history of headers and connections.%%

%%To enable debugging use EINA_LOG_LEVELS=ecore_con:4 environment variable.%%

%%If the proxy is NULL (default), then the system proxy will be used. On UNIX that's the environment variable %%''http_proxy''%% (or '%%''all_proxy''%%') is used if the given address doesn't match %%''no_proxy''%% patterns. To disable proxy use an empty string. If provided proxy must be one of the protocols:%%

%%- http://username:password@proxyserver:port - http://username@proxyserver:port - http://proxyserver:port - http://proxyserver  (default port 1080) - socks5://username:password@proxyserver:port (SOCKSv5) - socks5h://username@proxyserver:port (let socks server to resolve domain) - socks5://proxyserver:port - socks5://proxyserver (default port 1080) - socks4a://proxyserver:port (SOCKSv4 and let socks server to resolve domain) - socks4://proxyserver:port (SOCKSv4)%%

//Since 1.19//

{{page>:develop:api-include:efl:net:dialer:http:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:loop_user|Efl.Loop_User]] //(class)// => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_net_dialer_http [fillcolor = "black", label = "Efl.Net.Dialer.Http", color = "gray15", fontcolor = "white", style = "filled"]
    efl_loop_user [fillcolor = "gray15", label = "Efl.Loop_User", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_net_dialer [fillcolor = "gray15", label = "Efl.Net.Dialer", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_net_socket [fillcolor = "gray15", label = "Efl.Net.Socket", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_reader [fillcolor = "gray15", label = "Efl.Io.Reader", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_writer [fillcolor = "gray15", label = "Efl.Io.Writer", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_closer [fillcolor = "gray15", label = "Efl.Io.Closer", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_io_sizer [fillcolor = "gray15", label = "Efl.Io.Sizer", color = "deepskyblue", fontcolor = "white", style = "filled"]

    efl_net_dialer_http -> efl_loop_user
    efl_loop_user -> efl_object
    efl_net_dialer_http -> efl_net_dialer
    efl_net_dialer -> efl_net_socket
    efl_net_socket -> efl_io_reader
    efl_net_socket -> efl_io_writer
    efl_net_socket -> efl_io_closer
    efl_net_dialer_http -> efl_io_sizer
}
</graphviz>

++++

++++ Full hierarchy |

  * [[:develop:api:efl:loop_user|Efl.Loop_User]] //(class)//
    * [[:develop:api:efl:object|Efl.Object]] //(class)//
  * [[:develop:api:efl:net:dialer|Efl.Net.Dialer]] //(interface)//
    * [[:develop:api:efl:net:socket|Efl.Net.Socket]] //(interface)//
      * [[:develop:api:efl:io:reader|Efl.Io.Reader]] //(interface)//
      * [[:develop:api:efl:io:writer|Efl.Io.Writer]] //(interface)//
      * [[:develop:api:efl:io:closer|Efl.Io.Closer]] //(mixin)//
  * [[:develop:api:efl:io:sizer|Efl.Io.Sizer]] //(mixin)//


++++
===== Members =====

**[[:develop:api:efl:net:dialer:http:method:date_parse|date_parse]]**
<code c>
int64_t efl_net_dialer_http_date_parse(const Eo *obj, const char *str);
</code>

%%Parses the given string as time in seconds since 1/1/1970.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:method:date_serialize|date_serialize]]**
<code c>
char *efl_net_dialer_http_date_serialize(const Eo *obj, int64_t epochtime);
</code>

%%Serializes the given GMT time in seconds since 1/1/1970.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:method:request_header_add|request_header_add]]**
<code c>
void efl_net_dialer_http_request_header_add(Eo *obj, const char *key, const char *value);
</code>

%%Adds a request header 'key: value'.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:method:request_headers_clear|request_headers_clear]]**
<code c>
void efl_net_dialer_http_request_headers_clear(Eo *obj);
</code>

%%Clears all request headers.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:method:request_headers_get|request_headers_get]]**
<code c>
Eina_Iterator *efl_net_dialer_http_request_headers_get(Eo *obj);
</code>

%%Returns an iterator to the key-value pairs for request headers%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:method:response_headers_all_get|response_headers_all_get]]**
<code c>
Eina_Iterator *efl_net_dialer_http_response_headers_all_get(Eo *obj);
</code>

%%Returns an iterator to the key-value pairs for all response headers.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:method:response_headers_clear|response_headers_clear]]**
<code c>
void efl_net_dialer_http_response_headers_clear(Eo *obj);
</code>

%%Saves some memory by disposing the received headers%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:method:response_headers_get|response_headers_get]]**
<code c>
Eina_Iterator *efl_net_dialer_http_response_headers_get(Eo *obj);
</code>

%%Returns an iterator to the key-value pairs for the last response headers.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:allow_redirects|allow_redirects]]** //**(get, set)**//
<code c>
Eina_Bool efl_net_dialer_http_allow_redirects_get(const Eo *obj);
void efl_net_dialer_http_allow_redirects_set(Eo *obj, Eina_Bool allow_redirects);
</code>

%%Allows HTTP redirects to be followed.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:authentication|authentication]]** //**(get, set)**//
<code c>
void efl_net_dialer_http_authentication_get(const Eo *obj, const char **username, const char **password, Efl_Net_Http_Authentication_Method *method, Eina_Bool *restricted);
void efl_net_dialer_http_authentication_set(Eo *obj, const char *username, const char *password, Efl_Net_Http_Authentication_Method method, Eina_Bool restricted);
</code>

%%HTTP authentication to use.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:cookie_jar|cookie_jar]]** //**(get, set)**//
<code c>
const char *efl_net_dialer_http_cookie_jar_get(const Eo *obj);
void efl_net_dialer_http_cookie_jar_set(Eo *obj, const char *path);
</code>

%%This property sets the filename where to read and write cookies.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:http_version|http_version]]** //**(get, set)**//
<code c>
Efl_Net_Http_Version efl_net_dialer_http_version_get(const Eo *obj);
void efl_net_dialer_http_version_set(Eo *obj, Efl_Net_Http_Version http_version);
</code>

%%The HTTP version to use.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:method|method]]** //**(get, set)**//
<code c>
const char *efl_net_dialer_http_method_get(const Eo *obj);
void efl_net_dialer_http_method_set(Eo *obj, const char *method);
</code>

%%The HTTP method to use.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:primary_mode|primary_mode]]** //**(get, set)**//
<code c>
Efl_Net_Dialer_Http_Primary_Mode efl_net_dialer_http_primary_mode_get(const Eo *obj);
void efl_net_dialer_http_primary_mode_set(Eo *obj, Efl_Net_Dialer_Http_Primary_Mode primary_mode);
</code>

%%Is this request primarily a download or upload?%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:progress_download|progress_download]]** //**(get)**//
<code c>
void efl_net_dialer_http_progress_download_get(const Eo *obj, uint64_t *downloaded, uint64_t *total);
</code>

%%How many bytes were downloaded and how much was expected.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:progress_upload|progress_upload]]** //**(get)**//
<code c>
void efl_net_dialer_http_progress_upload_get(const Eo *obj, uint64_t *uploaded, uint64_t *total);
</code>

%%How many bytes were uploaded and how much was expected.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:request_content_length|request_content_length]]** //**(get, set)**//
<code c>
int64_t efl_net_dialer_http_request_content_length_get(const Eo *obj);
void efl_net_dialer_http_request_content_length_set(Eo *obj, int64_t length);
</code>

%%"Content-Length:" Header used for uploading/sending.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:response_content_length|response_content_length]]** //**(get, set)**// ''protected set''
<code c>
int64_t efl_net_dialer_http_response_content_length_get(const Eo *obj);
void efl_net_dialer_http_response_content_length_set(Eo *obj, int64_t length);
</code>

%%"Content-Length:" Header used for downloading/receiving.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:response_content_type|response_content_type]]** //**(get, set)**// ''protected set''
<code c>
const char *efl_net_dialer_http_response_content_type_get(const Eo *obj);
void efl_net_dialer_http_response_content_type_set(Eo *obj, const char *content_type);
</code>

%%"Content-Type:" Header used for downloading/receiving%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:response_status|response_status]]** //**(get)**//
<code c>
Efl_Net_Http_Status efl_net_dialer_http_response_status_get(const Eo *obj);
</code>

%%The HTTP response status of this request.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:ssl_certificate_authority|ssl_certificate_authority]]** //**(get, set)**//
<code c>
const char *efl_net_dialer_http_ssl_certificate_authority_get(const Eo *obj);
void efl_net_dialer_http_ssl_certificate_authority_set(Eo *obj, const char *path);
</code>

%%Overrides the CA (Certificate Authority) path or directory.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:ssl_certificate_revocation_list|ssl_certificate_revocation_list]]** //**(get, set)**//
<code c>
const char *efl_net_dialer_http_ssl_certificate_revocation_list_get(const Eo *obj);
void efl_net_dialer_http_ssl_certificate_revocation_list_set(Eo *obj, const char *file);
</code>

%%Defines a CRL (Certificate Revocation List) path to use.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:ssl_verify|ssl_verify]]** //**(get, set)**//
<code c>
void efl_net_dialer_http_ssl_verify_get(const Eo *obj, Eina_Bool *peer, Eina_Bool *hostname);
void efl_net_dialer_http_ssl_verify_set(Eo *obj, Eina_Bool peer, Eina_Bool hostname);
</code>

%%If remote peer's SSL certificate should be verified.%%\\ 
\\ 
**[[:develop:api:efl:net:dialer:http:property:user_agent|user_agent]]** //**(get, set)**//
<code c>
const char *efl_net_dialer_http_user_agent_get(const Eo *obj);
void efl_net_dialer_http_user_agent_set(Eo *obj, const char *ser_agent);
</code>

%%The User-Agent to specify.%%\\ 
\\ 

==== Inherited ====

[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:net:dialer:http:method:close|close]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:net:dialer:http:property:close_on_destructor|close_on_destructor]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:net:dialer:http:property:close_on_exec|close_on_exec]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:net:dialer:http:property:closed|closed]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:net:dialer:http:method:read|read]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:net:dialer:http:property:can_read|can_read]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:net:dialer:http:property:eos|eos]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:io:sizer|Efl.Io.Sizer]].**[[:develop:api:efl:net:dialer:http:method:resize|resize]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:sizer|Efl.Io.Sizer]].**[[:develop:api:efl:net:dialer:http:property:size|size]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:writer|Efl.Io.Writer]].**[[:develop:api:efl:net:dialer:http:method:write|write]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:writer|Efl.Io.Writer]].**[[:develop:api:efl:net:dialer:http:property:can_write|can_write]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:loop_user|Efl.Loop_User]].**[[:develop:api:efl:loop_user:property:loop|loop]]** //**(get)**//
\\ 
[[:develop:api:efl:net:dialer|Efl.Net.Dialer]].**[[:develop:api:efl:net:dialer:http:method:dial|dial]]** //[Overridden here]//
\\ 
[[:develop:api:efl:net:dialer|Efl.Net.Dialer]].**[[:develop:api:efl:net:dialer:http:property:address_dial|address_dial]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:net:dialer|Efl.Net.Dialer]].**[[:develop:api:efl:net:dialer:http:property:connected|connected]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:net:dialer|Efl.Net.Dialer]].**[[:develop:api:efl:net:dialer:http:property:proxy|proxy]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:net:dialer|Efl.Net.Dialer]].**[[:develop:api:efl:net:dialer:http:property:timeout_dial|timeout_dial]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:net:socket|Efl.Net.Socket]].**[[:develop:api:efl:net:dialer:http:property:address_local|address_local]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:net:socket|Efl.Net.Socket]].**[[:develop:api:efl:net:dialer:http:property:address_remote|address_remote]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:loop_user:property:parent|parent]]** //**(get, set)**// //[Overridden in [[:develop:api:efl:loop_user|Efl.Loop_User]]]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:net:dialer:http:method:constructor|constructor]]** //[Overridden here]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:net:dialer:http:method:destructor|destructor]]** //[Overridden here]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_attach|composite_attach]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_detach|composite_detach]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:debug_name_override|debug_name_override]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:del|del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_freeze|event_freeze]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_thaw|event_thaw]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:finalize|finalize]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:name_find|name_find]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:provider_find|provider_find]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:name|name]]** //**(get, set)**//
\\ 

===== Events =====

**[[:develop:api:efl:net:dialer:http:event:headers_done|headers,done]]**
<code c>
EFL_NET_DIALER_HTTP_EVENT_HEADERS_DONE(void)
</code>

%%Notifies all headers were parsed and are available.%%\\ 
\\ 
==== Inherited ====

[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:io:closer:event:closed|closed]]**
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:io:reader:event:can_read_changed|can_read,changed]]**
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:io:reader:event:eos|eos]]**
\\ 
[[:develop:api:efl:io:sizer|Efl.Io.Sizer]].**[[:develop:api:efl:io:sizer:event:size_changed|size,changed]]**
\\ 
[[:develop:api:efl:io:writer|Efl.Io.Writer]].**[[:develop:api:efl:io:writer:event:can_write_changed|can_write,changed]]**
\\ 
[[:develop:api:efl:net:dialer|Efl.Net.Dialer]].**[[:develop:api:efl:net:dialer:event:connected|connected]]**
\\ 
[[:develop:api:efl:net:dialer|Efl.Net.Dialer]].**[[:develop:api:efl:net:dialer:event:error|error]]**
\\ 
[[:develop:api:efl:net:dialer|Efl.Net.Dialer]].**[[:develop:api:efl:net:dialer:event:resolved|resolved]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:callback_add|callback,add]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:callback_del|callback,del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:del|del]]**
\\ 
