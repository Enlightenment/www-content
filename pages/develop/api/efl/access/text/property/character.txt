~~Title: Efl.Access.Text.character~~
===== Signature =====

<code>
@property character @beta @pure_virtual {
    get @protected {
        keys {
            offset: int;
        }
        values {
            character: Eina.Unicode;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Unicode efl_access_text_character_get(const Eo *obj, int offset);
</code>

===== Keys =====

  * **offset** - %%Position in text.%%
===== Values =====

  * **character** - %%Character at offset. 0 when out-of bounds offset has been given. Codepoints between DC80 and DCFF indicates that string includes invalid UTF8 chars.%%
===== Description =====

%%Gets single character present in accessible widget's text at given offset.%%

{{page>:develop:api-include:efl:access:text:property:character:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Access.Text.character**

