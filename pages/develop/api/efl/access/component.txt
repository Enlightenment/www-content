~~Title: Efl.Access.Component~~
====== Efl.Access.Component (mixin) ======

===== Description =====

%%AT-SPI component mixin%%

{{page>:develop:api-include:efl:access:component:description&nouser&nolink&nodate}}

===== Members =====

**[[:develop:api:efl:access:component:method:accessible_at_point_get|accessible_at_point_get]]** ''protected''\\
> %%Gets top component object occupying space at given coordinates.%%
<code c>
Efl_Object *efl_access_component_accessible_at_point_get(Eo *obj, Eina_Bool screen_coords, int x, int y);
</code>
\\
**[[:develop:api:efl:access:component:property:alpha|alpha]]** //**(get)**// ''protected''\\
> %%Gets alpha of accessible widget.%%
<code c>
double efl_access_component_alpha_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:access:component:method:contains|contains]]** ''protected''\\
> %%Contains accessible widget%%
<code c>
Eina_Bool efl_access_component_contains(Eo *obj, Eina_Bool screen_coords, int x, int y);
</code>
\\
**[[:develop:api:efl:access:component:property:extents|extents]]** //**(get, set)**// ''protected''\\
> %%Geometry of accessible widget.%%
<code c>
Eina_Rect efl_access_component_extents_get(const Eo *obj, Eina_Bool screen_coords);
Eina_Bool efl_access_component_extents_set(Eo *obj, Eina_Bool screen_coords, Eina_Rect rect);
</code>
\\
**[[:develop:api:efl:access:component:method:focus_grab|focus_grab]]** ''protected''\\
> %%Focuses accessible widget.%%
<code c>
Eina_Bool efl_access_component_focus_grab(Eo *obj);
</code>
\\
**[[:develop:api:efl:access:component:property:layer|layer]]** //**(get)**// ''protected''\\
> %%Evas layer of accessible widget.%%
<code c>
int efl_access_component_layer_get(const Eo *obj);
</code>
\\
**[[:develop:api:efl:access:component:property:position|position]]** //**(get, set)**// ''protected''\\
> %%Position of accessible widget.%%
<code c>
void efl_access_component_position_get(const Eo *obj, Eina_Bool screen_coords, int *x, int *y);
Eina_Bool efl_access_component_position_set(Eo *obj, Eina_Bool screen_coords, int x, int y);
</code>
\\
**[[:develop:api:efl:access:component:property:size|size]]** //**(get, set)**// ''protected''\\
> %%Size of accessible widget.%%
<code c>
void efl_access_component_size_get(const Eo *obj, int *w, int *h);
Eina_Bool efl_access_component_size_set(Eo *obj, int w, int h);
</code>
\\
**[[:develop:api:efl:access:component:property:z_order|z_order]]** //**(get)**// ''protected''\\
> %%Gets the depth at which the component is shown in relation to other components in the same container.%%
<code c>
int efl_access_component_z_order_get(const Eo *obj);
</code>
\\

===== Events =====

