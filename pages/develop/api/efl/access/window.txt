~~Title: Efl.Access.Window~~
====== Efl.Access.Window (interface) ======

===== Description =====

%%Elementary accessible window interface%%

{{page>:develop:api-include:efl:access:window:description&nouser&nolink&nodate}}

===== Inheritance =====


++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_access_window [fillcolor = "dodgerblue4", label = "Efl.Access.Window", color = "cornflowerblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

++++ Full hierarchy |



++++
===== Members =====

===== Events =====

**[[:develop:api:efl:access:window:event:window_activated|window,activated]]**
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_ACTIVATED(void)
</code>

%%Called when window has been activated. (unfocused)%%\\ 
\\ 
**[[:develop:api:efl:access:window:event:window_created|window,created]]**
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_CREATED(void)
</code>

%%Called when new window has been created.%%\\ 
\\ 
**[[:develop:api:efl:access:window:event:window_deactivated|window,deactivated]]**
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_DEACTIVATED(void)
</code>

%%Called when window has been deactivated (unfocused).%%\\ 
\\ 
**[[:develop:api:efl:access:window:event:window_destroyed|window,destroyed]]**
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_DESTROYED(void)
</code>

%%Called when window has been destroyed.%%\\ 
\\ 
**[[:develop:api:efl:access:window:event:window_maximized|window,maximized]]**
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_MAXIMIZED(void)
</code>

%%Called when window has been maximmized%%\\ 
\\ 
**[[:develop:api:efl:access:window:event:window_minimized|window,minimized]]**
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_MINIMIZED(void)
</code>

%%Called when window has been minimized%%\\ 
\\ 
**[[:develop:api:efl:access:window:event:window_restored|window,restored]]**
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_RESTORED(void)
</code>

%%Called when window has been restored%%\\ 
\\ 
