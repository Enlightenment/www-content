~~Title: Efl.Access.Window~~
====== Efl.Access.Window (interface) ======

===== Description =====

%%Elementary accessible window interface%%

{{page>:develop:api-include:efl:access:window:description&nouser&nolink&nodate}}

===== Inheritance =====


++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_access_window [fillcolor = "dodgerblue4", label = "Efl.Access.Window", color = "cornflowerblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

++++ Full hierarchy |



++++
===== Members =====

===== Events =====

**[[:develop:api:efl:access:window:event:window_activated|window,activated]]**\\
> %%Called when window has been activated. (unfocused)%%
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_ACTIVATED(void)
</code>
\\ **[[:develop:api:efl:access:window:event:window_created|window,created]]**\\
> %%Called when new window has been created.%%
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_CREATED(void)
</code>
\\ **[[:develop:api:efl:access:window:event:window_deactivated|window,deactivated]]**\\
> %%Called when window has been deactivated (unfocused).%%
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_DEACTIVATED(void)
</code>
\\ **[[:develop:api:efl:access:window:event:window_destroyed|window,destroyed]]**\\
> %%Called when window has been destroyed.%%
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_DESTROYED(void)
</code>
\\ **[[:develop:api:efl:access:window:event:window_maximized|window,maximized]]**\\
> %%Called when window has been maximmized%%
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_MAXIMIZED(void)
</code>
\\ **[[:develop:api:efl:access:window:event:window_minimized|window,minimized]]**\\
> %%Called when window has been minimized%%
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_MINIMIZED(void)
</code>
\\ **[[:develop:api:efl:access:window:event:window_restored|window,restored]]**\\
> %%Called when window has been restored%%
<code c>
EFL_ACCESS_WINDOW_EVENT_WINDOW_RESTORED(void)
</code>
\\ 