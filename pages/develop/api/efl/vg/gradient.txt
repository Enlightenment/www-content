~~Title: Efl.VG.Gradient~~
====== Efl.VG.Gradient (class) ======

===== Description =====

%%Efl vectopr graphics gradient abstract class%%

{{page>:develop:api-include:efl:vg:gradient:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:vg|Efl.VG]] //(class)// => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Full hierarchy |

  * [[:develop:api:efl:vg|Efl.VG]] //(class)//
    * [[:develop:api:efl:object|Efl.Object]] //(class)//
    * [[:develop:api:efl:gfx|Efl.Gfx]] //(interface)//
    * [[:develop:api:efl:gfx:color|Efl.Gfx.Color]] //(mixin)//
    * [[:develop:api:efl:gfx:stack|Efl.Gfx.Stack]] //(interface)//
    * [[:develop:api:efl:duplicate|Efl.Duplicate]] //(interface)//
  * [[:develop:api:efl:gfx:gradient|Efl.Gfx.Gradient]] //(interface)//


++++
===== Members =====

**[[:develop:api:efl:vg:gradient:method:duplicate|duplicate]]**// [Overridden from [[:develop:api:efl:duplicate|Efl.Duplicate]]]//\\
> %%Creates a carbon copy of this object and returns it.%%
<code c>
Efl_Duplicate *efl_duplicate(const Eo *obj);
</code>
\\
**[[:develop:api:efl:vg:gradient:method:interpolate|interpolate]]**// [Overridden from [[:develop:api:efl:vg|Efl.VG]]]//\\
> %%Interpolate a given vector graphics object%%
<code c>
Eina_Bool efl_vg_interpolate(Eo *obj, const Efl_VG *from, const Efl_VG *to, double pos_map);
</code>
\\
**[[:develop:api:efl:vg:gradient:property:spread|spread]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx:gradient|Efl.Gfx.Gradient]]]//\\
> 
<code c>
Efl_Gfx_Gradient_Spread efl_gfx_gradient_spread_get(const Eo *obj);
void efl_gfx_gradient_spread_set(Eo *obj, Efl_Gfx_Gradient_Spread s);
</code>
\\
**[[:develop:api:efl:vg:gradient:property:stop|stop]]** //**(get, set)**//// [Overridden from [[:develop:api:efl:gfx:gradient|Efl.Gfx.Gradient]]]//\\
> 
<code c>
void efl_gfx_gradient_stop_get(const Eo *obj, const Efl_Gfx_Gradient_Stop **colors, unsigned int *length);
void efl_gfx_gradient_stop_set(Eo *obj, const Efl_Gfx_Gradient_Stop *colors, unsigned int length);
</code>
\\

==== Inherited ====

^ [[:develop:api:efl:gfx|Efl.Gfx]] ^^^
|  | **[[:develop:api:efl:gfx:property:scale|scale]]** //**(get, set)**// | %%The scaling factor of an object.%% |
^ [[:develop:api:efl:gfx:color|Efl.Gfx.Color]] ^^^
|  | **[[:develop:api:efl:gfx:color:property:color_code|color_code]]** //**(get, set)**// |  |
^ [[:develop:api:efl:gfx:stack|Efl.Gfx.Stack]] ^^^
|  | **[[:develop:api:efl:gfx:stack:property:layer|layer]]** //**(get, set)**// |  |
^ [[:develop:api:efl:object|Efl.Object]] ^^^
|  | **[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**// | %%Allow an object to be deleted by unref even if it has a parent.%% |
|  | **[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]** | %%Get an iterator on all childrens%% |
|  | **[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**// | %%A human readable comment for the object%% |
|  | **[[:develop:api:efl:object:method:composite_attach|composite_attach]]** | %%Make an object a composite object of another.%% |
|  | **[[:develop:api:efl:object:method:composite_detach|composite_detach]]** | %%Detach a composite object from another object.%% |
|  | **[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]** | %%Check if an object is part of a composite object.%% |
|  | **[[:develop:api:efl:object:method:debug_name_override|debug_name_override]]** | %%Build a read-only name for this object used for debugging.%% |
|  | **[[:develop:api:efl:object:method:del|del]]** | %%Unrefs the object and reparents it to NULL.%% |
|  | **[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]** | %%Add an event callback forwarder for an event and an object.%% |
|  | **[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]** | %%Remove an event callback forwarder for an event and an object.%% |
|  | **[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]** | %%Stop the current callback call.%% |
|  | **[[:develop:api:efl:object:method:event_freeze|event_freeze]]** | %%Freeze events of object.%% |
|  | **[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**// | %%Return freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]** | %%Freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**// | %%Return freeze events of object.%% |
|  ''class'' | **[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]** | %%Thaw events of object.%% |
|  | **[[:develop:api:efl:object:method:event_thaw|event_thaw]]** | %%Thaw events of object.%% |
|  | **[[:develop:api:efl:object:method:finalize|finalize]]** | %%Called at the end of #eo_add. Should not be called, just overridden.%% |
|  | **[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**// | %%True if the object is already finalized, otherwise false.%% |
|  | **[[:develop:api:efl:object:property:name|name]]** //**(get, set)**// | %%The name of the object.%% |
|  | **[[:develop:api:efl:object:method:name_find|name_find]]** | %%Find a child object with the given name and return it.%% |
|  | **[[:develop:api:efl:object:method:provider_find|provider_find]]** | %%Searches upwards in the object tree for a provider which knows the given class/interface.%% |
^ [[:develop:api:efl:vg|Efl.VG]] ^^^
|  | **[[:develop:api:efl:vg:property:above|above]]** //**(get)**// | %%Get the Evas object stacked right above %%''obj''%%%% |
|  | **[[:develop:api:efl:vg:property:below|below]]** //**(get)**// | %%Get the Evas object stacked right below %%''obj''%%%% |
|  | **[[:develop:api:efl:vg:method:bounds_get|bounds_get]]** | %%Give the bounding box in screen coordinates as being drawn.%% |
|  | **[[:develop:api:efl:vg:property:color|color]]** //**(get, set)**// |  |
|  | **[[:develop:api:efl:vg:method:constructor|constructor]]** | %%Call the object's constructor.%% |
|  | **[[:develop:api:efl:vg:method:destructor|destructor]]** | %%Call the object's destructor.%% |
|  | **[[:develop:api:efl:vg:property:geometry|geometry]]** //**(get, set)**// | %%Rectangular geometry that combines both position and size.%% |
|  | **[[:develop:api:efl:vg:method:lower|lower]]** | %%Lower %%''obj''%% to the bottom of its layer.%% |
|  | **[[:develop:api:efl:vg:property:mask|mask]]** //**(get, set)**// | %%Vector graphics object mask%% |
|  | **[[:develop:api:efl:vg:property:name|name]]** //**(get, set)**// |  |
|  | **[[:develop:api:efl:vg:property:origin|origin]]** //**(get, set)**// |  |
|  | **[[:develop:api:efl:vg:property:parent|parent]]** //**(get, set)**// | %%The parent of an object.%% |
|  | **[[:develop:api:efl:vg:property:position|position]]** //**(get, set)**// | %%The 2D position of a canvas object.%% |
|  | **[[:develop:api:efl:vg:method:raise|raise]]** | %%Raise %%''obj''%% to the top of its layer.%% |
|  | **[[:develop:api:efl:vg:property:size|size]]** //**(get, set)**// | %%The 2D size of a canvas object.%% |
|  | **[[:develop:api:efl:vg:method:stack_above|stack_above]]** | %%Stack %%''obj''%% immediately %%''above''%%%% |
|  | **[[:develop:api:efl:vg:method:stack_below|stack_below]]** | %%Stack %%''obj''%% immediately %%''below''%%%% |
|  | **[[:develop:api:efl:vg:property:transformation|transformation]]** //**(get, set)**// |  |
|  | **[[:develop:api:efl:vg:property:visible|visible]]** //**(get, set)**// | %%The visibility of a canvas object.%% |

===== Events =====

==== Inherited ====

^ [[:develop:api:efl:gfx|Efl.Gfx]] ^^^
|  | **[[:develop:api:efl:gfx:event:hide|hide]]** | %%Object just became invisible.%% |
|  | **[[:develop:api:efl:gfx:event:move|move]]** | %%Object was moved, its position during the event is the new one.%% |
|  | **[[:develop:api:efl:gfx:event:resize|resize]]** | %%Object was resized, its size during the event is the new one.%% |
|  | **[[:develop:api:efl:gfx:event:show|show]]** | %%Object just became visible.%% |
^ [[:develop:api:efl:gfx:stack|Efl.Gfx.Stack]] ^^^
|  | **[[:develop:api:efl:gfx:stack:event:restack|restack]]** | %%Object stacking was changed.%% |
^ [[:develop:api:efl:object|Efl.Object]] ^^^
|  | **[[:develop:api:efl:object:event:callback_add|callback,add]]** | %%A callback was added.%% |
|  | **[[:develop:api:efl:object:event:callback_del|callback,del]]** | %%A callback was deleted.%% |
|  | **[[:develop:api:efl:object:event:del|del]]** | %%Object is being deleted.%% |
