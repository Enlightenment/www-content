~~Title: Efl.Loop.Message.Future.Handler: message,future~~
===== Description =====

%%No description supplied.%%
{{page>:develop:api-include:efl:loop:message:future:handler:event:message_future:description&nouser&nolink&nodate}}

===== Signature =====

<code>
message,future: free(Efl.Loop.Message.Future, efl_del);
</code>

===== C information =====

<code c>
EFL_LOOP_MESSAGE_FUTURE_HANDLER_EVENT_MESSAGE_FUTURE(Efl_Loop_Message_Future *)
</code>

===== C usage =====

<code c>
static void
on_efl_loop_message_future_handler_event_message_future(void *data, const Efl_Event *event)
{
    Efl_Loop_Message_Future *info = event->info;
    Eo *obj = event->object;
    Data *d = data;

    /* event hander code */
}

static void
setup_event_handler(Eo *obj, Data *d)
{
    efl_event_callback_add(obj, EFL_LOOP_MESSAGE_FUTURE_HANDLER_EVENT_MESSAGE_FUTURE, on_efl_loop_message_future_handler_event_message_future, d);
}

</code>

