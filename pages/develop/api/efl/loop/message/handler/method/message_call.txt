~~Title: Efl.Loop.Message.Handler.message_call~~
===== Description =====

%%Overide me (implement) then call super after calling the right callback type if you specialize the message type.%%
{{page>:develop:api-include:efl:loop:message:handler:method:message_call:description&nouser&nolink&nodate}}

===== Signature =====

<code>
message_call {
    params {
        @in message: free(Efl.Loop.Message, efl_del);
    }
}
</code>

===== C signature =====

<code c>
void efl_loop_message_handler_message_call(Eo *obj, Efl_Loop_Message *message);
</code>

===== Parameters =====

  * **message** //(in)// - %%Generic message event type%%

===== Implemented by =====

  * **Efl.Loop.Message.Handler.message_call**

