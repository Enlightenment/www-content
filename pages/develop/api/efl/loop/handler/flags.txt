~~Title: Efl.Loop.Handler.Flags~~
===== Description =====

%%A set of flags that can be OR'd together to indicate which are desired%%

{{page>:develop:api-include:efl:loop:handler:flags:description&nouser&nolink&nodate}}

===== Fields =====

{{page>:develop:api-include:efl:loop:handler:flags:fields&nouser&nolink&nodate}}

  * **none** - %%No I/O is desired (generally useless)%%
  * **read** - %%Reading is desired%%
  * **write** - %%Writing is desired%%
  * **error** - %%Error channel input is desired%%

===== Signature =====

<code>
enum Efl.Loop.Handler.Flags {
    none: 0,
    read: 1,
    write: 2,
    error: 4
}
</code>

===== C signature =====

<code c>
typedef enum {
    EFL_LOOP_HANDLER_FLAGS_NONE = 0,
    EFL_LOOP_HANDLER_FLAGS_READ = 1,
    EFL_LOOP_HANDLER_FLAGS_WRITE = 2,
    EFL_LOOP_HANDLER_FLAGS_ERROR = 4
} Efl_Loop_Handler_Flags;
</code>

