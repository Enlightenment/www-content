~~Title: Efl.Io.Buffer~~
====== Efl.Io.Buffer (class) ======

===== Description =====

%%Generic In-memory buffer of data to be used as I/O.%%

%%This class offers both input and output, which can be used at the same time since %%[[:develop:api:efl:io:reader:method:read|Efl.Io.Reader.read]]%% and %%[[:develop:api:efl:io:writer:method:write|Efl.Io.Writer.write]]%% use different offsets/position internally.%%

%%One can get temporary direct access to internal buffer with %%[[:develop:api:efl:io:buffer:property:slice|Efl.Io.Buffer.slice]]%% or steal the buffer with %%[[:develop:api:efl:io:buffer:method:binbuf_steal|Efl.Io.Buffer.binbuf_steal]]%%.%%

%%A fixed sized buffer can be implemented by setting %%[[:develop:api:efl:io:buffer:property:limit|Efl.Io.Buffer.limit]]%% followed by %%[[:develop:api:efl:io:buffer:method:preallocate|Efl.Io.Buffer.preallocate]]%%%%

//Since 1.19//

{{page>:develop:api-include:efl:io:buffer:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_io_buffer [fillcolor = "black", label = "Efl.Io.Buffer", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]
    efl_io_reader [fillcolor = "gray15", label = "Efl.Io.Reader", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_writer [fillcolor = "gray15", label = "Efl.Io.Writer", color = "cornflowerblue", fontcolor = "white", style = "filled"]
    efl_io_closer [fillcolor = "gray15", label = "Efl.Io.Closer", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_io_sizer [fillcolor = "gray15", label = "Efl.Io.Sizer", color = "deepskyblue", fontcolor = "white", style = "filled"]
    efl_io_positioner [fillcolor = "gray15", label = "Efl.Io.Positioner", color = "deepskyblue", fontcolor = "white", style = "filled"]

    efl_io_buffer -> efl_object
    efl_io_buffer -> efl_io_reader
    efl_io_buffer -> efl_io_writer
    efl_io_buffer -> efl_io_closer
    efl_io_buffer -> efl_io_sizer
    efl_io_buffer -> efl_io_positioner
}
</graphviz>

++++

++++ Full hierarchy |

  * [[:develop:api:efl:object|Efl.Object]] //(class)//
  * [[:develop:api:efl:io:reader|Efl.Io.Reader]] //(interface)//
  * [[:develop:api:efl:io:writer|Efl.Io.Writer]] //(interface)//
  * [[:develop:api:efl:io:closer|Efl.Io.Closer]] //(mixin)//
  * [[:develop:api:efl:io:sizer|Efl.Io.Sizer]] //(mixin)//
  * [[:develop:api:efl:io:positioner|Efl.Io.Positioner]] //(mixin)//


++++
===== Members =====

**[[:develop:api:efl:io:buffer:method:adopt_readonly|adopt_readonly]]**
<code c>
void efl_io_buffer_adopt_readonly(Eo *obj, const Eina_Slice slice);
</code>

%%Adopt a read-only slice as buffer's backing store.%%\\ 
\\ 
**[[:develop:api:efl:io:buffer:method:adopt_readwrite|adopt_readwrite]]**
<code c>
void efl_io_buffer_adopt_readwrite(Eo *obj, Eina_Rw_Slice slice);
</code>

%%Adopt a read-write slice as buffer's backing store.%%\\ 
\\ 
**[[:develop:api:efl:io:buffer:method:binbuf_steal|binbuf_steal]]**
<code c>
Eina_Binbuf *efl_io_buffer_binbuf_steal(Eo *obj);
</code>

%%Steals the internal buffer memory and returns it as a binbuf.%%\\ 
\\ 
**[[:develop:api:efl:io:buffer:method:preallocate|preallocate]]**
<code c>
void efl_io_buffer_preallocate(Eo *obj, size_t size);
</code>

%%Immediately pre-allocate a buffer of at least a given size.%%\\ 
\\ 
**[[:develop:api:efl:io:buffer:property:limit|limit]]** //**(get, set)**//
<code c>
size_t efl_io_buffer_limit_get(const Eo *obj);
void efl_io_buffer_limit_set(Eo *obj, size_t size);
</code>

%%Limit how big the buffer can grow.%%\\ 
\\ 
**[[:develop:api:efl:io:buffer:property:position_read|position_read]]** //**(get, set)**//
<code c>
uint64_t efl_io_buffer_position_read_get(const Eo *obj);
Eina_Bool efl_io_buffer_position_read_set(Eo *obj, uint64_t position);
</code>

%%The position used by %%[[:develop:api:efl:io:reader:method:read|Efl.Io.Reader.read]]%%.%%\\ 
\\ 
**[[:develop:api:efl:io:buffer:property:position_write|position_write]]** //**(get, set)**//
<code c>
uint64_t efl_io_buffer_position_write_get(const Eo *obj);
Eina_Bool efl_io_buffer_position_write_set(Eo *obj, uint64_t position);
</code>

%%The position used by %%[[:develop:api:efl:io:writer:method:write|Efl.Io.Writer.write]]%%.%%\\ 
\\ 
**[[:develop:api:efl:io:buffer:property:slice|slice]]** //**(get)**//
<code c>
Eina_Slice efl_io_buffer_slice_get(const Eo *obj);
</code>

%%Get a temporary access to buffer's internal memory.%%\\ 
\\ 

==== Inherited ====

[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:io:buffer:method:close|close]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:io:buffer:property:close_on_destructor|close_on_destructor]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:io:buffer:property:close_on_exec|close_on_exec]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:io:buffer:property:closed|closed]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:positioner|Efl.Io.Positioner]].**[[:develop:api:efl:io:buffer:method:seek|seek]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:positioner|Efl.Io.Positioner]].**[[:develop:api:efl:io:buffer:property:position|position]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:io:buffer:method:read|read]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:io:buffer:property:can_read|can_read]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:io:buffer:property:eos|eos]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:io:sizer|Efl.Io.Sizer]].**[[:develop:api:efl:io:buffer:method:resize|resize]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:sizer|Efl.Io.Sizer]].**[[:develop:api:efl:io:buffer:property:size|size]]** //**(get, set)**// //[Overridden here]//
\\ 
[[:develop:api:efl:io:writer|Efl.Io.Writer]].**[[:develop:api:efl:io:buffer:method:write|write]]** //[Overridden here]//
\\ 
[[:develop:api:efl:io:writer|Efl.Io.Writer]].**[[:develop:api:efl:io:buffer:property:can_write|can_write]]** //**(get, set)**// //[Overridden here]// ''protected set''
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:io:buffer:method:destructor|destructor]]** //[Overridden here]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:io:buffer:method:finalize|finalize]]** //[Overridden here]//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_attach|composite_attach]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_detach|composite_detach]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:constructor|constructor]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:debug_name_override|debug_name_override]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:del|del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_freeze|event_freeze]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:event_thaw|event_thaw]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:name_find|name_find]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:method:provider_find|provider_find]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:name|name]]** //**(get, set)**//
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:property:parent|parent]]** //**(get, set)**//
\\ 

===== Events =====

**[[:develop:api:efl:io:buffer:event:position_read_changed|position_read,changed]]**
<code c>
EFL_IO_BUFFER_EVENT_POSITION_READ_CHANGED(void)
</code>

%%Notifies %%[[:develop:api:efl:io:buffer:property:position_read|Efl.Io.Buffer.position_read]]%% changed%%\\ 
\\ 
**[[:develop:api:efl:io:buffer:event:position_write_changed|position_write,changed]]**
<code c>
EFL_IO_BUFFER_EVENT_POSITION_WRITE_CHANGED(void)
</code>

%%Notifies %%[[:develop:api:efl:io:buffer:property:position_write|Efl.Io.Buffer.position_write]]%% changed%%\\ 
\\ 
**[[:develop:api:efl:io:buffer:event:reallocated|reallocated]]**
<code c>
EFL_IO_BUFFER_EVENT_REALLOCATED(void)
</code>

%%Notifies the internal buffer was reallocated, thus whatever was returned by %%[[:develop:api:efl:io:buffer:property:slice|Efl.Io.Buffer.slice]]%% becomes invalid%%\\ 
\\ 
==== Inherited ====

[[:develop:api:efl:io:closer|Efl.Io.Closer]].**[[:develop:api:efl:io:closer:event:closed|closed]]**
\\ 
[[:develop:api:efl:io:positioner|Efl.Io.Positioner]].**[[:develop:api:efl:io:positioner:event:position_changed|position,changed]]**
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:io:reader:event:can_read_changed|can_read,changed]]**
\\ 
[[:develop:api:efl:io:reader|Efl.Io.Reader]].**[[:develop:api:efl:io:reader:event:eos|eos]]**
\\ 
[[:develop:api:efl:io:sizer|Efl.Io.Sizer]].**[[:develop:api:efl:io:sizer:event:size_changed|size,changed]]**
\\ 
[[:develop:api:efl:io:writer|Efl.Io.Writer]].**[[:develop:api:efl:io:writer:event:can_write_changed|can_write,changed]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:callback_add|callback,add]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:callback_del|callback,del]]**
\\ 
[[:develop:api:efl:object|Efl.Object]].**[[:develop:api:efl:object:event:del|del]]**
\\ 
