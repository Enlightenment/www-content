~~Title: Efl.Io.Manager~~
====== Efl.Io.Manager (class) ======

===== Description =====

%%Class representing an asynchronous file operation.%%

{{page>:develop:api-include:efl:io:manager:description&nouser&nolink&nodate}}

===== Inheritance =====

 => [[:develop:api:efl:loop_user|Efl.Loop_User]] //(class)// => [[:develop:api:efl:object|Efl.Object]] //(class)//
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_io_manager [fillcolor = "black", label = "Efl.Io.Manager", color = "gray15", fontcolor = "white", style = "filled"]
    efl_loop_user [fillcolor = "gray15", label = "Efl.Loop_User", color = "gray15", fontcolor = "white", style = "filled"]
    efl_object [fillcolor = "gray15", label = "Efl.Object", color = "gray15", fontcolor = "white", style = "filled"]

    efl_io_manager -> efl_loop_user
    efl_loop_user -> efl_object
}
</graphviz>

++++

++++ Full hierarchy |

  * [[:develop:api:efl:loop_user|Efl.Loop_User]] //(class)//
    * [[:develop:api:efl:object|Efl.Object]] //(class)//


++++
===== Members =====

**[[:develop:api:efl:io:manager:method:close|close]]**\\
> %%Closes an open Eina.File.%%
<code c>
Eina_Future *efl_io_manager_close(Eo *obj, Eina_File *file);
</code>
\\
**[[:develop:api:efl:io:manager:method:direct_ls|direct_ls]]**\\
> %%Lists entries in a given path with more information.%%
<code c>
Efl_Future *efl_io_manager_direct_ls(Eo *obj, const char *path, Eina_Bool recursive);
</code>
\\
**[[:develop:api:efl:io:manager:method:ls|ls]]**\\
> %%Lists entries in a given path. See @ref eina_file_ls().%%
<code c>
Eina_Future *efl_io_manager_ls(Eo *obj, const char *path, EflIoPath paths);
</code>
\\
**[[:develop:api:efl:io:manager:method:open|open]]**\\
> %%Opens a file.%%
<code c>
Eina_Future *efl_io_manager_open(Eo *obj, const char *path, Eina_Bool shared);
</code>
\\
**[[:develop:api:efl:io:manager:method:stat_ls|stat_ls]]**\\
> %%Lists entries in a given path with stat information.%%
<code c>
Efl_Future *efl_io_manager_stat_ls(Eo *obj, const char *path, Eina_Bool recursive);
</code>
\\
**[[:develop:api:efl:io:manager:method:stat|stat]]**\\
> %%Get stat info on a given file/directory.%%
<code c>
Eina_Future *efl_io_manager_stat(Eo *obj, const char *path);
</code>
\\
**[[:develop:api:efl:io:manager:method:xattr_ls|xattr_ls]]**\\
> %%Lists all extended attributes asynchronously.%%
<code c>
Efl_Future *efl_io_manager_xattr_ls(Eo *obj, const char *path);
</code>
\\
**[[:develop:api:efl:io:manager:property:xattr|xattr]]** //**(get, set)**//\\
> %%Retrieves or sets information of a given extended attribute.%%
<code c>
Eina_Future *efl_io_manager_xattr_get(const Eo *obj, const char *path, const char *attribute);
Eina_Future *efl_io_manager_xattr_set(Eo *obj, const char *path, const char *attribute, Eina_Binbuf *data, Eina_Xattr_Flags flags);
</code>
\\

==== Inherited ====

[[:develop:api:efl:loop_user|Efl.Loop_User]]\\
> **[[:develop:api:efl:loop_user:property:loop|loop]]** //**(get)**//, **[[:develop:api:efl:loop_user:property:parent|parent]]** //**(get, set)**//\\
[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:method:children_iterator_new|children_iterator_new]]**, **[[:develop:api:efl:object:method:composite_attach|composite_attach]]**, **[[:develop:api:efl:object:method:composite_detach|composite_detach]]**, **[[:develop:api:efl:object:method:composite_part_is|composite_part_is]]**, **[[:develop:api:efl:object:method:constructor|constructor]]**, **[[:develop:api:efl:object:method:debug_name_override|debug_name_override]]**, **[[:develop:api:efl:object:method:del|del]]**, **[[:develop:api:efl:object:method:destructor|destructor]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_add|event_callback_forwarder_add]]**, **[[:develop:api:efl:object:method:event_callback_forwarder_del|event_callback_forwarder_del]]**, **[[:develop:api:efl:object:method:event_callback_stop|event_callback_stop]]**, **[[:develop:api:efl:object:method:event_freeze|event_freeze]]**, **[[:develop:api:efl:object:method:event_global_freeze|event_global_freeze]]**, **[[:develop:api:efl:object:method:event_global_thaw|event_global_thaw]]**, **[[:develop:api:efl:object:method:event_thaw|event_thaw]]**, **[[:develop:api:efl:object:method:finalize|finalize]]**, **[[:develop:api:efl:object:method:name_find|name_find]]**, **[[:develop:api:efl:object:method:provider_find|provider_find]]**, **[[:develop:api:efl:object:property:allow_parent_unref|allow_parent_unref]]** //**(get, set)**//, **[[:develop:api:efl:object:property:comment|comment]]** //**(get, set)**//, **[[:develop:api:efl:object:property:event_freeze_count|event_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:event_global_freeze_count|event_global_freeze_count]]** //**(get)**//, **[[:develop:api:efl:object:property:finalized|finalized]]** //**(get)**//, **[[:develop:api:efl:object:property:name|name]]** //**(get, set)**//
===== Events =====

==== Inherited ====

[[:develop:api:efl:object|Efl.Object]]\\
> **[[:develop:api:efl:object:event:callback_add|callback,add]]**, **[[:develop:api:efl:object:event:callback_del|callback,del]]**, **[[:develop:api:efl:object:event:del|del]]**