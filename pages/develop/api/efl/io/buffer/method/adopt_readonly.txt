~~Title: Efl.Io.Buffer.adopt_readonly~~
===== Description =====

%%Adopt a read-only slice as buffer's backing store.%%

%%The slice memory will not be copied and must remain alive during the buffer's lifetime. Usually this is guaranteed by some global static-const memory or some parent object and this buffer being a view of that -- be aware of parent memory remaining alive, such as "slice,changed" events.%%

//Since 1.19//
{{page>:develop:api-include:efl:io:buffer:method:adopt_readonly:description&nouser&nolink&nodate}}

===== Signature =====

<code>
adopt_readonly {
    params {
        @in slice: const(Eina.Slice);
    }
}
</code>

===== C signature =====

<code c>
void efl_io_buffer_adopt_readonly(Eo *obj, const Eina_Slice slice);
</code>

===== Parameters =====

  * **slice** //(in)// - %%Slice to adopt as read-only%%

===== Implemented by =====

  * **Efl.Io.Buffer.adopt_readonly**

