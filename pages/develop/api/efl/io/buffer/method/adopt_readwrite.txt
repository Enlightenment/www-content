~~Title: Efl.Io.Buffer.adopt_readwrite~~
===== Signature =====

<code>
adopt_readwrite {
    params {
        @in slice: Eina.Rw_Slice;
    }
}
</code>

===== C signature =====

<code c>
void efl_io_buffer_adopt_readwrite(Eo *obj, Eina_Rw_Slice slice);
</code>

===== Parameters =====

  * **slice** //(in)// - %%Slice to adopt as read-write%%

===== Description =====

%%Adopt a read-write slice as buffer's backing store.%%

%%The slice memory will not be copied and must remain alive during buffer's lifetime. Usually this is guaranteed by some global static memory or some parent object and this buffer being a view of that -- be aware of parent memory remaining alive, such as "slice,changed" events.%%

%%The memory will be disposed using free() and reallocated using realloc().%%

//Since 1.19//
{{page>:develop:api-include:efl:io:buffer:method:adopt_readwrite:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Io.Buffer.adopt_readwrite**

