<title>Elm.Object.Select_Mode</title>
===== Signature =====

<code>
enum Elm.Object.Select_Mode {
    default: 0,
    always,
    none,
    display_only,
    max
}
</code>

===== C signature =====

<code c>
typedef enum {
    ELM_OBJECT_SELECT_MODE_DEFAULT = 0,
    ELM_OBJECT_SELECT_MODE_ALWAYS,
    ELM_OBJECT_SELECT_MODE_NONE,
    ELM_OBJECT_SELECT_MODE_DISPLAY_ONLY,
    ELM_OBJECT_SELECT_MODE_MAX
} Elm_Object_Select_Mode;
</code>

===== Description =====

%%Possible values for the #ELM_OBJECT_SELECT_MODE policy.%%

//Since 1.7//

{{page>:develop:user:enum:elm:object:select_mode:description&nouser&nolink&nodate}}

===== Fields =====

{{page>:develop:user:enum:elm:object:select_mode:fields&nouser&nolink&nodate}}

  * **default** - %%default select mode. Once an item is selected, it would stay highlighted and not going to call selected callback again even it was clicked. Items can get focus.%%
  * **always** - %%always select mode. Item selected callbacks will be called every time for click events, even after the item was already selected. Items can get focus.%%
  * **none** - %%no select mode. Items will never be highlighted and selected but the size will be adjusted by the finger size configuration. Items can't get focus.%%
  * **display_only** - %%no select mode with no finger size rule. Items will never be highlighted and selected and ignore the finger size. So the item size can be reduced below than the finger size configuration. Items can't get focus.%%
  * **max** - %%canary value: any value greater or equal to ELM_OBJECT_SELECT_MODE_MAX is forbidden.%%

