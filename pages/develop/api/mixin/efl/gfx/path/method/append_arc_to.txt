<title>Efl.Gfx.Path.append_arc_to</title>
===== Signature =====

<code>
append_arc_to {
    params {
        @in x: double;
        @in y: double;
        @in rx: double;
        @in ry: double;
        @in angle: double;
        @in large_arc: bool;
        @in sweep: bool;
    }
}
</code>

===== C signature =====

<code c>
void efl_gfx_path_append_arc_to(Eo *obj, double x, double y, double rx, double ry, double angle, Eina_Bool large_arc, Eina_Bool sweep);
</code>

===== Parameters =====

  * **x** //(in)// - %%X co-ordinate of end point of the arc.%%
  * **y** //(in)// - %%Y co-ordinate of end point of the arc.%%
  * **rx** //(in)// - %%Radius of arc in x direction.%%
  * **ry** //(in)// - %%Radius of arc in y direction.%%
  * **angle** //(in)// - %%X-axis rotation , normally 0.%%
  * **large_arc** //(in)// - %%Defines whether to draw the larger arc or smaller arc joining two point.%%
  * **sweep** //(in)// - %%Defines whether the arc will be drawn counter-clockwise or clockwise from current point to the end point taking into account the large_arc property.%%

===== Description =====

%%Append an arc that connects from the current point int the point list to the given point (x,y). The arc is defined by the given radius in  x-direction (rx) and radius in y direction (ry).%%

%%Use this api if you know the end point's of the arc otherwise use more convenient function %%[[:develop:api:mixin:efl:gfx:path:method:append_arc|Efl.Gfx.Path.append_arc]]%%.%%

//Since 1.18//
{{page>:develop:user:mixin:efl:gfx:path:method:append_arc_to:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Gfx.Path.append_arc_to**

