~~Title: Efl.Gfx.Path.append_cubic_to~~
===== Signature =====

<code>
append_cubic_to {
    params {
        @in ctrl_x0: double;
        @in ctrl_y0: double;
        @in ctrl_x1: double;
        @in ctrl_y1: double;
        @in x: double;
        @in y: double;
    }
}
</code>

===== C signature =====

<code c>
void efl_gfx_path_append_cubic_to(Eo *obj, double ctrl_x0, double ctrl_y0, double ctrl_x1, double ctrl_y1, double x, double y);
</code>

===== Parameters =====

  * **ctrl_x0** //(in)// - %%X co-ordinate of 1st control point.%%
  * **ctrl_y0** //(in)// - %%Y co-ordinate of 1st control point.%%
  * **ctrl_x1** //(in)// - %%X co-ordinate of 2nd control point.%%
  * **ctrl_y1** //(in)// - %%Y co-ordinate of 2nd control point.%%
  * **x** //(in)// - %%X co-ordinate of end point of the line.%%
  * **y** //(in)// - %%Y co-ordinate of end point of the line.%%

===== Description =====

%%Adds a cubic Bezier curve between the current position and the given end point (x,y) using the control points specified by (ctrl_x0, ctrl_y0), and (ctrl_x1, ctrl_y1). After the path is drawn, the current position is updated to be at the end point of the path.%%

//Since 1.18//
{{page>:develop:api:user:mixin:efl:gfx:path:method:append_cubic_to:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Gfx.Path.append_cubic_to**

