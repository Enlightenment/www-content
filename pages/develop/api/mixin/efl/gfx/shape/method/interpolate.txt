<title>Efl.Gfx.Shape.interpolate</title>
===== Signature =====

<code>
interpolate {
    params {
        @in from: free(const(Efl.Object), efl_del);
        @in to: free(const(Efl.Object), efl_del);
        @in pos_map: double;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_gfx_shape_interpolate(Eo *obj, const Efl_Object *from, const Efl_Object *to, double pos_map);
</code>

===== Parameters =====

  * **from** //(in)// - %%Source shape%%
  * **to** //(in)// - %%Destination shape%%
  * **pos_map** //(in)// - %%Position map in range 0.0 to 1.0%%

===== Description =====

%%Creates intermediary shape part-way between two shapes%%

%%Sets the data properties of %%''obj''%% as the linear interpolation of the %%''from''%% and %%''to''%% objects by %%''pos_map''%%.  In addition to interpolating the path data, the two shapes' dash length, fill color, and stroke style are also interpolated.%%

%%See also %%[[:develop:api:mixin:efl:gfx:path:method:interpolate|Efl.Gfx.Path.interpolate]]%%.%%
{{page>:develop:api:user:mixin:efl:gfx:shape:method:interpolate:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Gfx.Shape.interpolate**

