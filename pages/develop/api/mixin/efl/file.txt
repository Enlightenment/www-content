~~Title: Efl.File~~
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_file [fillcolor = "deepskyblue4", label = "Efl.File", color = "deepskyblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:develop:api:mixin:efl:file|Efl.File]] //(mixin)//**

===== Description =====

%%Efl file interface%%

{{page>:develop:api:user:mixin:efl:file:description&nouser&nolink&nodate}}

===== Members =====

**[[:develop:api:mixin:efl:file:method:save|save]]**
<code c>
Eina_Bool efl_file_save(const Eo *obj, const char *file, const char *key, const char *flags);
</code>

%%Save the given image object's contents to an (image) file.%%\\ 
\\ 
**[[:develop:api:mixin:efl:file:property:file|file]]** //**(get, set)**//
<code c>
void efl_file_get(const Eo *obj, const char **file, const char **key);
Eina_Bool efl_file_set(Eo *obj, const char *file, const char *key);
</code>

\\ 
**[[:develop:api:mixin:efl:file:property:load_error|load_error]]** //**(get)**//
<code c>
Efl_Image_Load_Error efl_file_load_error_get(const Eo *obj);
</code>

%%Gets the (last) file loading error for a given Edje object%%\\ 
\\ 
**[[:develop:api:mixin:efl:file:property:mmap|mmap]]** //**(get, set)**//
<code c>
void efl_file_mmap_get(const Eo *obj, const Eina_File **f, const char **key);
Eina_Bool efl_file_mmap_set(Eo *obj, const Eina_File *f, const char *key);
</code>

\\ 

