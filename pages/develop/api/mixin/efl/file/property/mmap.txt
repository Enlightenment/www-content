~~Title: Efl.File.mmap~~
===== Signature =====

<code>
@property mmap @pure_virtual {
    get {
        values {
            f: ptr(const(Eina.File));
            key: free(string, free) @optional;
        }
    }
    set {
        values {
            f: ptr(const(Eina.File));
            key: free(string, free) @optional;
        }
        return: bool;
    }
}
</code>

===== C signature =====

<code c>
void efl_file_mmap_get(const Eo *obj, const Eina_File **f, const char **key);
Eina_Bool efl_file_mmap_set(Eo *obj, const Eina_File *f, const char *key);
</code>

===== Values =====

  * **f** - %%The handler to an Eina_File that will be used as image source%%
  * **key** - %%The group that the image belongs to, in case  it's an EET(including Edje case) file. This can be used as a key inside evas image cache if this is a normal image file not eet file.%%
===== Description =====




{{page>:develop:api:user:mixin:efl:file:property:mmap:description&nouser&nolink&nodate}}

==== Getter ====

%%Get the source mmaped file from where an image object must fetch the real image data (it must be an Eina_File).%%

%%If the file supports multiple data stored in it (as Eet files do), you can get the key to be used as the index of the image in this file.%%

//Since 1.10//


{{page>:develop:api:user:mixin:efl:file:property:mmap:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Set the source mmaped file from where an image object must fetch the real image data (it must be an Eina_File).%%

%%If the file supports multiple data stored in it (as Eet files do), you can specify the key to be used as the index of the image in this file.%%

//Since 1.8//
{{page>:develop:api:user:mixin:efl:file:property:mmap:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Efl.File.mmap**

