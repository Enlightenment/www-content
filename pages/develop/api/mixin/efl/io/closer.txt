<title>Efl.Io.Closer</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_io_closer [fillcolor = "deepskyblue4", label = "Efl.Io.Closer", color = "deepskyblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:develop:api:mixin:efl:io:closer|Efl.Io.Closer]] //(mixin)//**

===== Description =====

%%Generic interface for objects that can close themselves.%%

%%This interface allows external objects to transparently close an input or output stream, cleaning up its resources.%%

%%Calls to %%[[:develop:api:mixin:efl:io:closer:method:close|Efl.Io.Closer.close]]%%() may or may not block, that's not up to this interface to specify.%%

//Since 1.19//

{{page>:develop:user:mixin:efl:io:closer:description&nouser&nolink&nodate}}

===== Members =====

**[[:develop:api:mixin:efl:io:closer:method:close|close]]**
<code c>
Eina_Error efl_io_closer_close(Eo *obj);
</code>

%%Closes the Input/Output object.%%\\ 
\\ 
**[[:develop:api:mixin:efl:io:closer:property:close_on_destructor|close_on_destructor]]** //**(get, set)**//
<code c>
Eina_Bool efl_io_closer_close_on_destructor_get(const Eo *obj);
void efl_io_closer_close_on_destructor_set(Eo *obj, Eina_Bool close_on_destructor);
</code>

%%If true will automatically close() on object destructor.%%\\ 
\\ 
**[[:develop:api:mixin:efl:io:closer:property:close_on_exec|close_on_exec]]** //**(get, set)**//
<code c>
Eina_Bool efl_io_closer_close_on_exec_get(const Eo *obj);
Eina_Bool efl_io_closer_close_on_exec_set(Eo *obj, Eina_Bool close_on_exec);
</code>

%%If true will automatically close resources on exec() calls.%%\\ 
\\ 
**[[:develop:api:mixin:efl:io:closer:property:closed|closed]]** //**(get, set)**//
<code c>
Eina_Bool efl_io_closer_closed_get(const Eo *obj);
Eina_Bool efl_io_closer_closed_set(Eo *obj, Eina_Bool is_closed);
</code>

%%If true will notify object was closed.%%\\ 
\\ 

===== Events =====

**[[:develop:api:mixin:efl:io:closer:event:closed|closed]]**
<code c>
EFL_IO_CLOSER_EVENT_CLOSED(void)
</code>

%%Notifies closed, when property is marked as true%%\\ 
\\ 
