~~Title: Efl.Input.Interface: hold~~
===== Signature =====

<code>
hold: free(Efl.Input.Hold, efl_del);
</code>

===== C information =====

<code c>
EFL_EVENT_HOLD(Efl_Input_Hold *)
</code>

===== C usage =====

<code c>
static void
on_efl_event_hold(void *data, const Efl_Event *event)
{
    Efl_Input_Hold *info = event->info;
    Eo *obj = event->object;
    Data *d = data;

    /* event hander code */
}

static void
setup_event_handler(Eo *obj, Data *d)
{
    efl_event_callback_add(obj, EFL_EVENT_HOLD, on_efl_event_hold, d);
}

</code>

===== Description =====

%%All input events are on hold or resumed.%%

//Since 1.19//
{{page>:develop:api:user:interface:efl:input:interface:event:hold:description&nouser&nolink&nodate}}

