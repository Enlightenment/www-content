<title>Efl.Observer.update</title>
===== Signature =====

<code>
update @pure_virtual {
    params {
        @in obs: free(Efl.Object, efl_del);
        @in key: free(string, free);
        @in data: void_ptr;
    }
}
</code>

===== C signature =====

<code c>
void efl_observer_update(Eo *obj, Efl_Object *obs, const char *key, void *data);
</code>

===== Parameters =====

  * **obs** //(in)// - %%An observable object%%
  * **key** //(in)// - %%A key to classify observer groups%%
  * **data** //(in)// - %%Required data to update the observer, usually passed by observable object%%

===== Description =====

%%Update observer according to the changes of observable object.%%

//Since 1.19//
{{page>:develop:user:interface:efl:observer:method:update:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Observer.update**

