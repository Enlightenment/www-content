<title>Efl.Text.Style</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_text_style [fillcolor = "dodgerblue4", label = "Efl.Text.Style", color = "cornflowerblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:develop:api:interface:efl:text:style|Efl.Text.Style]] //(interface)//**

===== Description =====

%%Style to apply to the text%%

%%A style can be coloring, effects, underline, strikethrough etc.%%

//Since 1.20//

{{page>:develop:api:user:interface:efl:text:style:description&nouser&nolink&nodate}}

===== Members =====

**[[:develop:api:interface:efl:text:style:property:backing_color|backing_color]]** //**(get, set)**//
<code c>
void efl_text_backing_color_get(const Eo *obj, unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a);
void efl_text_backing_color_set(Eo *obj, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
</code>

%%Backing color%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:backing_type|backing_type]]** //**(get, set)**//
<code c>
Efl_Text_Style_Backing_Type efl_text_backing_type_get(const Eo *obj);
void efl_text_backing_type_set(Eo *obj, Efl_Text_Style_Backing_Type type);
</code>

%%Enable or disable backing type%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:effect_type|effect_type]]** //**(get, set)**//
<code c>
Efl_Text_Style_Effect_Type efl_text_effect_type_get(const Eo *obj);
void efl_text_effect_type_set(Eo *obj, Efl_Text_Style_Effect_Type type);
</code>

%%Type of effect used for the displayed text%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:gfx_filter|gfx_filter]]** //**(get, set)**//
<code c>
const char *efl_text_gfx_filter_get(const Eo *obj);
void efl_text_gfx_filter_set(Eo *obj, const char *code);
</code>

%%Program that applies a special filter%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:glow2_color|glow2_color]]** //**(get, set)**//
<code c>
void efl_text_glow2_color_get(const Eo *obj, unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a);
void efl_text_glow2_color_set(Eo *obj, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
</code>

%%Second color of the glow effect%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:glow_color|glow_color]]** //**(get, set)**//
<code c>
void efl_text_glow_color_get(const Eo *obj, unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a);
void efl_text_glow_color_set(Eo *obj, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
</code>

%%Color of glow effect%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:normal_color|normal_color]]** //**(get, set)**//
<code c>
void efl_text_normal_color_get(const Eo *obj, unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a);
void efl_text_normal_color_set(Eo *obj, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
</code>

%%Color of text, excluding style%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:outline_color|outline_color]]** //**(get, set)**//
<code c>
void efl_text_outline_color_get(const Eo *obj, unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a);
void efl_text_outline_color_set(Eo *obj, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
</code>

%%Color of outline effect%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:shadow_color|shadow_color]]** //**(get, set)**//
<code c>
void efl_text_shadow_color_get(const Eo *obj, unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a);
void efl_text_shadow_color_set(Eo *obj, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
</code>

%%Color of shadow effect%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:shadow_direction|shadow_direction]]** //**(get, set)**//
<code c>
Efl_Text_Style_Shadow_Direction efl_text_shadow_direction_get(const Eo *obj);
void efl_text_shadow_direction_set(Eo *obj, Efl_Text_Style_Shadow_Direction type);
</code>

%%Direction of shadow effect%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:strikethrough_color|strikethrough_color]]** //**(get, set)**//
<code c>
void efl_text_strikethrough_color_get(const Eo *obj, unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a);
void efl_text_strikethrough_color_set(Eo *obj, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
</code>

%%Color of strikethrough_style%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:strikethrough_type|strikethrough_type]]** //**(get, set)**//
<code c>
Efl_Text_Style_Strikethrough_Type efl_text_strikethrough_type_get(const Eo *obj);
void efl_text_strikethrough_type_set(Eo *obj, Efl_Text_Style_Strikethrough_Type type);
</code>

%%Type of strikethrough style%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:underline2_color|underline2_color]]** //**(get, set)**//
<code c>
void efl_text_underline2_color_get(const Eo *obj, unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a);
void efl_text_underline2_color_set(Eo *obj, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
</code>

%%Color of underline2 style%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:underline2_type|underline2_type]]** //**(get, set)**//
<code c>
Efl_Text_Style_Underline_Type efl_text_underline2_type_get(const Eo *obj);
void efl_text_underline2_type_set(Eo *obj, Efl_Text_Style_Underline_Type type);
</code>

%%Type of underline2 style%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:underline_color|underline_color]]** //**(get, set)**//
<code c>
void efl_text_underline_color_get(const Eo *obj, unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a);
void efl_text_underline_color_set(Eo *obj, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
</code>

%%Color of normal underline style%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:underline_dashed_color|underline_dashed_color]]** //**(get, set)**//
<code c>
void efl_text_underline_dashed_color_get(const Eo *obj, unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a);
void efl_text_underline_dashed_color_set(Eo *obj, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
</code>

%%Color of dashed underline style%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:underline_dashed_gap|underline_dashed_gap]]** //**(get, set)**//
<code c>
int efl_text_underline_dashed_gap_get(const Eo *obj);
void efl_text_underline_dashed_gap_set(Eo *obj, int gap);
</code>

%%Gap of dashed underline style%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:underline_dashed_width|underline_dashed_width]]** //**(get, set)**//
<code c>
int efl_text_underline_dashed_width_get(const Eo *obj);
void efl_text_underline_dashed_width_set(Eo *obj, int width);
</code>

%%Width of dashed underline style%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:underline_height|underline_height]]** //**(get, set)**//
<code c>
double efl_text_underline_height_get(const Eo *obj);
void efl_text_underline_height_set(Eo *obj, double height);
</code>

%%Height of underline style%%\\ 
\\ 
**[[:develop:api:interface:efl:text:style:property:underline_type|underline_type]]** //**(get, set)**//
<code c>
Efl_Text_Style_Underline_Type efl_text_underline_type_get(const Eo *obj);
void efl_text_underline_type_set(Eo *obj, Efl_Text_Style_Underline_Type type);
</code>

%%Sets an underline style on the text%%\\ 
\\ 

