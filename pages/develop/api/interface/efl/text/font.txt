~~Title: Efl.Text.Font~~
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_text_font [fillcolor = "dodgerblue4", label = "Efl.Text.Font", color = "cornflowerblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:develop:api:interface:efl:text:font|Efl.Text.Font]] //(interface)//**

===== Description =====

%%Font settings of the text%%

//Since 1.20//

{{page>:develop:api:user:interface:efl:text:font:description&nouser&nolink&nodate}}

===== Members =====

**[[:develop:api:interface:efl:text:font:property:font_bitmap_scalable|font_bitmap_scalable]]** //**(get, set)**//
<code c>
Efl_Text_Font_Bitmap_Scalable efl_text_font_bitmap_scalable_get(const Eo *obj);
void efl_text_font_bitmap_scalable_set(Eo *obj, Efl_Text_Font_Bitmap_Scalable scalable);
</code>

%%The bitmap fonts have fixed size glyphs for several available sizes. Basically, it is not scalable. But, it needs to be scalable for some use cases. (ex. colorful emoji fonts)%%\\ 
\\ 
**[[:develop:api:interface:efl:text:font:property:font_fallbacks|font_fallbacks]]** //**(get, set)**//
<code c>
const char *efl_text_font_fallbacks_get(const Eo *obj);
void efl_text_font_fallbacks_set(Eo *obj, const char *font_fallbacks);
</code>

%%Comma-separated list of font fallbacks%%\\ 
\\ 
**[[:develop:api:interface:efl:text:font:property:font_lang|font_lang]]** //**(get, set)**//
<code c>
const char *efl_text_font_lang_get(const Eo *obj);
void efl_text_font_lang_set(Eo *obj, const char *lang);
</code>

%%Specific language of the displayed font%%\\ 
\\ 
**[[:develop:api:interface:efl:text:font:property:font_slant|font_slant]]** //**(get, set)**//
<code c>
Efl_Text_Font_Slant efl_text_font_slant_get(const Eo *obj);
void efl_text_font_slant_set(Eo *obj, Efl_Text_Font_Slant style);
</code>

%%Type of slant of the displayed font%%\\ 
\\ 
**[[:develop:api:interface:efl:text:font:property:font_source|font_source]]** //**(get, set)**//
<code c>
const char *efl_text_font_source_get(const Eo *obj);
void efl_text_font_source_set(Eo *obj, const char *font_source);
</code>

%%The source that will be used to lookup the font of the text%%\\ 
\\ 
**[[:develop:api:interface:efl:text:font:property:font_weight|font_weight]]** //**(get, set)**//
<code c>
Efl_Text_Font_Weight efl_text_font_weight_get(const Eo *obj);
void efl_text_font_weight_set(Eo *obj, Efl_Text_Font_Weight font_weight);
</code>

%%Type of weight of the displayed font%%\\ 
\\ 
**[[:develop:api:interface:efl:text:font:property:font_width|font_width]]** //**(get, set)**//
<code c>
Efl_Text_Font_Width efl_text_font_width_get(const Eo *obj);
void efl_text_font_width_set(Eo *obj, Efl_Text_Font_Width width);
</code>

%%Type of width of the displayed font%%\\ 
\\ 
**[[:develop:api:interface:efl:text:font:property:font|font]]** //**(get, set)**//
<code c>
void efl_text_font_get(const Eo *obj, const char **font, int *size);
void efl_text_font_set(Eo *obj, const char *font, int size);
</code>

%%The font name and size that is used for the displayed text%%\\ 
\\ 

