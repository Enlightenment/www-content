<title>Efl.Player</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_player [fillcolor = "dodgerblue4", label = "Efl.Player", color = "cornflowerblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:develop:api:interface:efl:player|Efl.Player]] //(interface)//**

===== Description =====

%%Efl media player interface%%

{{page>:develop:api:user:interface:efl:player:description&nouser&nolink&nodate}}

===== Members =====

**[[:develop:api:interface:efl:player:property:length|length]]** //**(get)**//
<code c>
double efl_player_length_get(const Eo *obj);
</code>

%%Get the length of play for the media file.%%\\ 
\\ 
**[[:develop:api:interface:efl:player:property:mute|mute]]** //**(get, set)**//
<code c>
Eina_Bool efl_player_mute_get(const Eo *obj);
void efl_player_mute_set(Eo *obj, Eina_Bool mute);
</code>

%%This property controls the audio mute state.%%\\ 
\\ 
**[[:develop:api:interface:efl:player:property:play_speed|play_speed]]** //**(get, set)**//
<code c>
double efl_player_play_speed_get(const Eo *obj);
void efl_player_play_speed_set(Eo *obj, double speed);
</code>

%%Control the play speed of the media file.%%\\ 
\\ 
**[[:develop:api:interface:efl:player:property:playable|playable]]** //**(get)**//
<code c>
Eina_Bool efl_player_playable_get(const Eo *obj);
</code>

%%Whether or not the object data can be played.%%\\ 
\\ 
**[[:develop:api:interface:efl:player:property:play|play]]** //**(get, set)**//
<code c>
Eina_Bool efl_player_play_get(const Eo *obj);
void efl_player_play_set(Eo *obj, Eina_Bool play);
</code>

\\ 
**[[:develop:api:interface:efl:player:property:position|position]]** //**(get, set)**//
<code c>
double efl_player_position_get(const Eo *obj);
void efl_player_position_set(Eo *obj, double sec);
</code>

\\ 
**[[:develop:api:interface:efl:player:property:progress|progress]]** //**(get)**//
<code c>
double efl_player_progress_get(const Eo *obj);
</code>

%%Get how much of the file has been played.%%\\ 
\\ 
**[[:develop:api:interface:efl:player:property:seekable|seekable]]** //**(get)**//
<code c>
Eina_Bool efl_player_seekable_get(const Eo *obj);
</code>

%%Get whether the media file is seekable.%%\\ 
\\ 
**[[:develop:api:interface:efl:player:property:volume|volume]]** //**(get, set)**//
<code c>
double efl_player_volume_get(const Eo *obj);
void efl_player_volume_set(Eo *obj, double volume);
</code>

%%Control the audio volume.%%\\ 
\\ 

