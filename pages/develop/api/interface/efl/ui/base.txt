<title>Efl.Ui.Base</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_ui_base [fillcolor = "dodgerblue4", label = "Efl.Ui.Base", color = "cornflowerblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:develop:api:interface:efl:ui:base|Efl.Ui.Base]] //(interface)//**

===== Description =====

%%A common interface for UI objects.%%

{{page>:develop:user:interface:efl:ui:base:description&nouser&nolink&nodate}}

===== Members =====

**[[:develop:api:interface:efl:ui:base:property:base_scale|base_scale]]** //**(get)**//
<code c>
double efl_ui_base_scale_get(const Eo *obj);
</code>

%%The base scale of a layout object (read-only).%%\\ 
\\ 
**[[:develop:api:interface:efl:ui:base:property:language|language]]** //**(get, set)**//
<code c>
const char *efl_ui_language_get(const Eo *obj);
void efl_ui_language_set(Eo *obj, const char *language);
</code>

%%The (human) language for this object.%%\\ 
\\ 
**[[:develop:api:interface:efl:ui:base:property:mirrored_automatic|mirrored_automatic]]** //**(get, set)**//
<code c>
Eina_Bool efl_ui_mirrored_automatic_get(const Eo *obj);
void efl_ui_mirrored_automatic_set(Eo *obj, Eina_Bool automatic);
</code>

%%Whether the property %%[[:develop:api:interface:efl:ui:base:property:mirrored|Efl.Ui.Base.mirrored]]%% should be set automatically.%%\\ 
\\ 
**[[:develop:api:interface:efl:ui:base:property:mirrored|mirrored]]** //**(get, set)**//
<code c>
Eina_Bool efl_ui_mirrored_get(const Eo *obj);
void efl_ui_mirrored_set(Eo *obj, Eina_Bool rtl);
</code>

%%Whether this object should be mirrored.%%\\ 
\\ 
**[[:develop:api:interface:efl:ui:base:property:scale|scale]]** //**(get, set)**//
<code c>
double efl_ui_scale_get(const Eo *obj);
void efl_ui_scale_set(Eo *obj, double scale);
</code>

%%The scaling factor of an object.%%\\ 
\\ 

