<title>Efl.Gfx.Fill</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_gfx_fill [fillcolor = "dodgerblue4", label = "Efl.Gfx.Fill", color = "cornflowerblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:develop:api:interface:efl:gfx:fill|Efl.Gfx.Fill]] //(interface)//**

===== Description =====

%%Efl graphics fill interface%%

{{page>:develop:api:user:interface:efl:gfx:fill:description&nouser&nolink&nodate}}

===== Members =====

**[[:develop:api:interface:efl:gfx:fill:property:fill_auto|fill_auto]]** //**(get, set)**//
<code c>
Eina_Bool efl_gfx_fill_auto_get(const Eo *obj);
void efl_gfx_fill_auto_set(Eo *obj, Eina_Bool filled);
</code>

%%Binds the object's %%[[:develop:api:interface:efl:gfx:fill:property:fill|Efl.Gfx.Fill.fill]]%% property to its actual geometry.%%\\ 
\\ 
**[[:develop:api:interface:efl:gfx:fill:property:fill|fill]]** //**(get, set)**//
<code c>
Eina_Rect efl_gfx_fill_get(const Eo *obj);
void efl_gfx_fill_set(Eo *obj, Eina_Rect fill);
</code>

%%Specifies how to tile an image to fill its rectangle geometry.%%\\ 
\\ 

