~~Title: Efl.Image.Load.load_size~~
===== Signature =====

<code>
@property load_size @pure_virtual {
    get {
        values {
            size: Eina.Size2D;
        }
    }
    set {
        values {
            size: Eina.Size2D;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Size2D efl_image_load_size_get(const Eo *obj);
void efl_image_load_size_set(Eo *obj, Eina_Size2D size);
</code>

===== Values =====

  * **size** - %%The image load size.%%
===== Description =====

%%The load size of an image.%%

%%The image will be loaded into memory as if it was the specified size instead of its original size. This can save a lot of memory, and is important for scalable types like svg.%%

%%By default, the load size is not specified, so it is 0x0.%%


{{page>:develop:api:user:interface:efl:image:load:property:load_size:description&nouser&nolink&nodate}}

==== Getter ====

%%Returns the requested load size.%%


{{page>:develop:api:user:interface:efl:image:load:property:load_size:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Requests the canvas to load the image at the given size.%%

%%EFL will try to load the image at the requested size, but does not guarantee an exact match between the request and the loaded image dimensions.%%
{{page>:develop:api:user:interface:efl:image:load:property:load_size:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Efl.Image.Load.load_size**

