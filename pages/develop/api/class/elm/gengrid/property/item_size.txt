<title>Elm.Gengrid.item_size</title>
===== Signature =====

<code>
@property item_size {
    get {
        values {
            w: int;
            h: int;
        }
    }
    set {
        values {
            w: int;
            h: int;
        }
    }
}
</code>

===== C signature =====

<code c>
void elm_obj_gengrid_item_size_get(const Eo *obj, int *w, int *h);
void elm_obj_gengrid_item_size_set(Eo *obj, int w, int h);
</code>

===== Values =====

  * **w** - %%The items' width.%%
  * **h** - %%The items' height.%%
===== Description =====



{{page>:develop:user:class:elm:gengrid:property:item_size:description&nouser&nolink&nodate}}

==== Getter ====

%%Get the size set for the items of a given gengrid widget.%%

%%Use %%''null''%% pointers on the size values you're not interested in: they'll be ignored by the function.%%
</note>

{{page>:develop:user:class:elm:gengrid:property:item_size:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Set the size for the items of a given gengrid widget.%%

%%A gengrid, after creation, has still no information on the size to give to each of its cells. So, you most probably will end up with squares one @ref Fingers "finger" wide, the default size. Use this function to force a custom size for you items, making them as big as you wish.%%{{page>:develop:user:class:elm:gengrid:property:item_size:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Elm.Gengrid.item_size**

