~~Title: Elm.Toolbar.shrink_mode~~
===== Signature =====

<code>
@property shrink_mode {
    get {
        values {
            shrink_mode: Elm.Toolbar.Shrink_Mode;
        }
    }
    set {
        values {
            shrink_mode: Elm.Toolbar.Shrink_Mode;
        }
    }
}
</code>

===== C signature =====

<code c>
Elm_Toolbar_Shrink_Mode elm_obj_toolbar_shrink_mode_get(const Eo *obj);
void elm_obj_toolbar_shrink_mode_set(Eo *obj, Elm_Toolbar_Shrink_Mode shrink_mode);
</code>

===== Values =====

  * **shrink_mode** - %%Toolbar's items display behavior%%
===== Description =====

%%Control the item displaying mode of a given toolbar widget %%''obj''%%.%%

%%The toolbar won't scroll under #ELM_TOOLBAR_SHRINK_NONE mode, but it will enforce a minimum size, so that all the items will fit inside it. It won't scroll and won't show the items that don't fit under #ELM_TOOLBAR_SHRINK_HIDE mode. Finally, it'll scroll under #ELM_TOOLBAR_SHRINK_SCROLL mode, and it will create a button to aggregate items which didn't fit with the #ELM_TOOLBAR_SHRINK_MENU mode.%%

%%If shrink mode is changed, Toolbar will send one of the following signal to each item for informing the current shrink mode. "elm,state,shrink,default" "elm,state,shrink,hide" "elm,state,shrink,scroll" "elm,state,shrink,menu" "elm,state,shrink,expand"%%

<note warning>
%%This function's behavior will clash with those of elm_scroller_policy_set(), so use either one of them, but not both.%%
</note>
{{page>:develop:api:user:class:elm:toolbar:property:shrink_mode:description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Elm.Toolbar.shrink_mode**

