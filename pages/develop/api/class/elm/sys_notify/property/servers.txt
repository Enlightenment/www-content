~~Title: Elm.Sys_Notify.servers~~
===== Signature =====

<code>
@property servers {
    get {
        values {
            servers: Elm.Sys_Notify.Server;
        }
    }
    set {
        values {
            servers: Elm.Sys_Notify.Server;
        }
        return: bool;
    }
}
</code>

===== C signature =====

<code c>
Elm_Sys_Notify_Server elm_obj_sys_notify_servers_get(const Eo *obj);
Eina_Bool elm_obj_sys_notify_servers_set(Eo *obj, Elm_Sys_Notify_Server servers);
</code>

===== Values =====

  * **servers** - %%Binary mask of servers to enable. If a server is not present in the binary mask but was previously registered, it will be unregistered.%%
===== Description =====




{{page>:develop:api:user:class:elm:sys_notify:property:servers:description&nouser&nolink&nodate}}

==== Getter ====

%%Get the notification servers that have been registered%%

//Since 1.17//


{{page>:develop:api:user:class:elm:sys_notify:property:servers:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Set the notifications server to be used.%%

<note>
%%This is an advanced function that should be used only to fullfill very specific purposes. Use elm_need_sys_notify() which activates the default available notification servers.%%
</note>

//Since 1.17//
{{page>:develop:api:user:class:elm:sys_notify:property:servers:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Elm.Sys_Notify.servers**

