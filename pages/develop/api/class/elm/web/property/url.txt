~~Title: Elm.Web.url~~
===== Signature =====

<code>
@property url @pure_virtual {
    get {
        values {
            url: free(string, free);
        }
    }
    set {
        values {
            url: free(string, free);
        }
        return: bool;
    }
}
</code>

===== C signature =====

<code c>
const char *elm_obj_web_url_get(const Eo *obj);
Eina_Bool elm_obj_web_url_set(Eo *obj, const char *url);
</code>

===== Values =====

  * **url** - %%The URL to set.%%
===== Description =====




{{page>:develop:api:user:class:elm:web:property:url:description&nouser&nolink&nodate}}

==== Getter ====

%%Get the current URL for the object.%%

%%The returned string must not be freed and is guaranteed to be stringshared.%%


{{page>:develop:api:user:class:elm:web:property:url:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Sets the URL for the web object.%%

%%It must be a full URL, with resource included, in the form http://www.enlightenment.org or file:///tmp/something.html%%
{{page>:develop:api:user:class:elm:web:property:url:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Elm.Web.url**

