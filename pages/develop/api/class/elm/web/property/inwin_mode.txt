~~Title: Elm.Web.inwin_mode~~
===== Signature =====

<code>
@property inwin_mode @pure_virtual {
    get {
        values {
            value: bool;
        }
    }
    set {
        values {
            value: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool elm_obj_web_inwin_mode_get(const Eo *obj);
void elm_obj_web_inwin_mode_set(Eo *obj, Eina_Bool value);
</code>

===== Values =====

  * **value** - %%%%''true''%% if dialog will be opened as Inwin, %%''false''%% otherwise%%
===== Description =====




{{page>:develop:api:user:class:elm:web:property:inwin_mode:description&nouser&nolink&nodate}}

==== Getter ====

%%Get whether Inwin mode is set for the current object.%%


{{page>:develop:api:user:class:elm:web:property:inwin_mode:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Sets the default dialogs to use an Inwin instead of a normal window.%%

%%If set, then the default implementation for the JavaScript dialogs and file selector will be opened in an Inwin. Otherwise they will use a normal separated window.%%
{{page>:develop:api:user:class:elm:web:property:inwin_mode:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Elm.Web.inwin_mode**

