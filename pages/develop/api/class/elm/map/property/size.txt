<title>Elm.Map.size</title>
//Overridden from [[:develop:api:class:elm:widget:property:size|Efl.Gfx.size]] **(set)**.//===== Signature =====

<code>
@property size @pure_virtual {
    get {
        values {
            size: Eina.Size2D;
        }
    }
    set {
        values {
            size: Eina.Size2D;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Size2D efl_gfx_size_get(const Eo *obj);
void efl_gfx_size_set(Eo *obj, Eina_Size2D size);
</code>

===== Values =====

  * **size** - %%A 2D size in pixel units.%%
===== Description =====

%%The 2D size of a canvas object.%%

{{page>:develop:api:user:class:elm:map:property:size:description&nouser&nolink&nodate}}

==== Getter ====

%%Retrieves the (rectangular) size of the given Evas object.%%

{{page>:develop:api:user:class:elm:map:property:size:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Changes the size of the given object.%%

%%Note that setting the actual size of an object might be the job of its container, so this function might have no effect. Look at %%''Efl''%%.Gfx.Size.Hint instead, when manipulating widgets.%%{{page>:develop:api:user:class:elm:map:property:size:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * [[:develop:api:interface:efl:gfx:property:size|Efl.Gfx.size]]
  * [[:develop:api:class:efl:canvas:object:property:size|Efl.Canvas.Object.size]]
  * [[:develop:api:class:elm:widget:property:size|Elm.Widget.size]]
  * **Elm.Map.size**

