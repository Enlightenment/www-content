<title>Elm.Genlist.block_count</title>
===== Signature =====

<code>
@property block_count {
    get {
        values {
            count: int;
        }
    }
    set {
        values {
            count: int;
        }
    }
}
</code>

===== C signature =====

<code c>
int elm_obj_genlist_block_count_get(const Eo *obj);
void elm_obj_genlist_block_count_set(Eo *obj, int count);
</code>

===== Values =====

  * **count** - %%Maximum number of items within an item block. Default is 32.%%
===== Description =====



{{page>:develop:api:user:class:elm:genlist:property:block_count:description&nouser&nolink&nodate}}

==== Getter ====

%%Get the maximum number of items within an item block.%%

{{page>:develop:api:user:class:elm:genlist:property:block_count:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Set the maximum number of items within an item block.%%

%%This will configure the block count to tune to the target with particular performance matrix.%%

%%A block of objects will be used to reduce the number of operations due to many objects in the screen. It can determine the visibility, or if the object has changed, it theme needs to be updated, etc. doing this kind of calculation to the entire block, instead of per object.%%

%%The default value for the block count is enough for most lists, so unless you know you will have a lot of objects visible in the screen at the same time, don't try to change this.%%{{page>:develop:api:user:class:elm:genlist:property:block_count:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Elm.Genlist.block_count**

