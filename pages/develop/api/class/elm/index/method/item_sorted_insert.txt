<title>Elm.Index.item_sorted_insert</title>
===== Signature =====

<code>
item_sorted_insert {
    params {
        @in letter: free(string, free);
        @in func: Evas_Smart_Cb @optional;
        @in data: const(void_ptr) @optional;
        @in cmp_func: Eina_Compare_Cb;
        @in cmp_data_func: Eina_Compare_Cb @optional;
    }
    return: free(Elm.Widget.Item, efl_del);
}
</code>

===== C signature =====

<code c>
Elm_Widget_Item *elm_obj_index_item_sorted_insert(Eo *obj, const char *letter, Evas_Smart_Cb func, const void *data, Eina_Compare_Cb cmp_func, Eina_Compare_Cb cmp_data_func);
</code>

===== Parameters =====

  * **letter** //(in)// - %%Letter under which the item should be indexed%%
  * **func** //(in)// - %%The function to call when the item is clicked.%%
  * **data** //(in)// - %%The item data to set for the index's item%%
  * **cmp_func** //(in)// - %%The comparing function to be used to sort index items by index item handles%%
  * **cmp_data_func** //(in)// - %%A fallback function to be called for the sorting of index items by item data). It will be used when %%''cmp_func''%% returns $0 (equality), which means an index item with provided item data already exists. To decide which data item should be pointed to by the index item in question, %%''cmp_data_func''%% will be used. If %%''cmp_data_func''%% returns a non-negative value, the previous index item data will be replaced by the given %%''item''%% pointer. If the previous data need to be freed, it should be done by the %%''cmp_data_func''%% function, because all references to it will be lost. If this function is not provided (%%''NULL''%% is given), index items will be duplicated, if %%''cmp_func''%% returns $0.%%

===== Description =====

%%Insert a new item into the given index widget, using %%''cmp_func''%% function to sort items (by item handles).%%

%%Despite the most common usage of the %%''letter''%% argument is for single char strings, one could use arbitrary strings as index entries.%%

%%%%''item''%% will be the pointer returned back on $"changed", "delay,changed" and $"selected" smart events.%%
{{page>:develop:user:class:elm:index:method:item_sorted_insert:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Elm.Index.item_sorted_insert**

