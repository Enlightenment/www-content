<title>Elm.Colorselector.palette_name</title>
===== Signature =====

<code>
@property palette_name {
    get {
        values {
            palette_name: free(string, free);
        }
    }
    set {
        values {
            palette_name: free(string, free);
        }
    }
}
</code>

===== C signature =====

<code c>
const char *elm_obj_colorselector_palette_name_get(const Eo *obj);
void elm_obj_colorselector_palette_name_set(Eo *obj, const char *palette_name);
</code>

===== Values =====

  * **palette_name** - %%Name of palette%%
===== Description =====



{{page>:develop:user:class:elm:colorselector:property:palette_name:description&nouser&nolink&nodate}}

==== Getter ====

%%Get current palette's name%%

%%Returns the currently set palette name using which colors will be saved/loaded in to config.%%

{{page>:develop:user:class:elm:colorselector:property:palette_name:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Set current palette's name%%

%%When colorpalette name is set, colors will be loaded from and saved to config using the set name. If no name is set then colors will be loaded from or saved to "default" config.%%{{page>:develop:user:class:elm:colorselector:property:palette_name:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Elm.Colorselector.palette_name**

