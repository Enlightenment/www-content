<title>Elm.Mapbuf.enabled</title>
===== Signature =====

<code>
@property enabled {
    get {
        values {
            enabled: bool;
        }
    }
    set {
        values {
            enabled: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool elm_private_mapbuf_enabled_get(const Eo *obj);
void elm_private_mapbuf_enabled_set(Eo *obj, Eina_Bool enabled);
</code>

===== Values =====

  * **enabled** - %%The enabled state.%%
===== Description =====



{{page>:develop:user:class:elm:mapbuf:property:enabled:description&nouser&nolink&nodate}}

==== Getter ====

%%Get a value whether map is enabled or not.%%

{{page>:develop:user:class:elm:mapbuf:property:enabled:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Enable or disable the map.%%

%%This enables the map that is set or disables it. On enable, the object geometry will be saved, and the new geometry will change (position and size) to reflect the map geometry set.%%

%%Also, when enabled, alpha and smooth states will be used, so if the content isn't solid, alpha should be enabled, for example, otherwise a black rectangle will fill the content.%%

%%When disabled, the stored map will be freed and geometry prior to enabling the map will be restored.%%

%%It's disabled by default.%%{{page>:develop:user:class:elm:mapbuf:property:enabled:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Elm.Mapbuf.enabled**

