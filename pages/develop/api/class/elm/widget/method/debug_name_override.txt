<title>Elm.Widget.debug_name_override</title>
//Overridden from [[:develop:api:class:efl:canvas:group:method:debug_name_override|Efl.Object.debug_name_override]].//===== Signature =====

<code>
debug_name_override {
    params {
        @in sb: ptr(free(Eina.Strbuf, eina_strbuf_free));
    }
}
</code>

===== C signature =====

<code c>
void efl_debug_name_override(Eo *obj, Eina_Strbuf *sb);
</code>

===== Parameters =====

  * **sb** //(in)// - %%A string buffer, must not be %%''null''%%.%%

===== Description =====

%%Build a read-only name for this object used for debugging.%%

%%Multiple calls using efl_super() can be chained in order to build the entire debug name, from parent to child classes. In C the usual way to build the string is as follows:%%

%%efl_debug_name_override(efl_super(obj, MY_CLASS), sb); eina_strbuf_append_printf(sb, "new_information");%%

%%In general, more debug information should be added to %%''sb''%% after calling the super function.%%

//Since 1.21//
{{page>:develop:api:user:class:elm:widget:method:debug_name_override:description&nouser&nolink&nodate}}

===== Implemented by =====

  * [[:develop:api:class:efl:object:method:debug_name_override|Efl.Object.debug_name_override]]
  * [[:develop:api:class:efl:canvas:object:method:debug_name_override|Efl.Canvas.Object.debug_name_override]]
  * [[:develop:api:class:efl:canvas:group:method:debug_name_override|Efl.Canvas.Group.debug_name_override]]
  * **Elm.Widget.debug_name_override**

