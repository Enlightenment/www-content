~~Title: Elm.Widget.focus_allow~~
===== Signature =====

<code>
@property focus_allow {
    get {
        values {
            can_focus: bool;
        }
    }
    set {
        values {
            can_focus: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_ui_widget_focus_allow_get(const Eo *obj);
void efl_ui_widget_focus_allow_set(Eo *obj, Eina_Bool can_focus);
</code>

===== Values =====

  * **can_focus** - %%Whether the object is focusable.%%
===== Description =====

%%The ability for a widget to be focused.%%

%%Unfocusable objects do nothing when programmatically focused. The nearest focusable parent object the one really getting focus. Also, when they receive mouse input, they will get the event, but not take away the focus from where it was previously.%%

<note>
%%Objects which are meant to be interacted with by input events are created able to be focused, by default. All the others are not.%%
</note>

%%This property's default value depends on the widget (eg. a box is not focusable, but a button is).%%
{{page>:develop:api:user:class:elm:widget:property:focus_allow:description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Elm.Widget.focus_allow**

