~~Title: Elm.Widget.disabled~~
===== Signature =====

<code>
@property disabled {
    get {
        values {
            disabled: bool (false);
        }
    }
    set {
        values {
            disabled: bool (false);
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_ui_widget_disabled_get(const Eo *obj);
void efl_ui_widget_disabled_set(Eo *obj, Eina_Bool disabled);
</code>

===== Values =====

  * **disabled** - %%%%''true''%% if the widget is disabled.%%
===== Description =====

%%Whether the widget is enabled (accepts and reacts to user inputs).%%

%%Each widget may handle the disabled state differently, but overall disabled widgets shall not respond to any input events. This is %%''false''%% by default, meaning the widget is enabled.%%


{{page>:develop:api:user:class:elm:widget:property:disabled:description&nouser&nolink&nodate}}

==== Getter ====

%%Returns whether the widget is disabled.%%

%%This will return %%''true''%% if any widget in the parent hierarchy is disabled. Re-enabling that parent may in turn change the disabled state of this widget.%%


{{page>:develop:api:user:class:elm:widget:property:disabled:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Enables or disables this widget.%%

%%Disabling a widget will disable all its children recursively, but only this widget will be marked as disabled internally.%%
{{page>:develop:api:user:class:elm:widget:property:disabled:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Elm.Widget.disabled**

