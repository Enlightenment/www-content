~~Title: Elm.Glview: destroyed~~
===== Signature =====

<code>
destroyed;
</code>

===== C information =====

<code c>
ELM_GLVIEW_EVENT_DESTROYED(void)
</code>

===== C usage =====

<code c>
static void
on_elm_glview_event_destroyed(void *data, const Efl_Event *event)
{
    void info = event->info;
    Eo *obj = event->object;
    Data *d = data;

    /* event hander code */
}

static void
setup_event_handler(Eo *obj, Data *d)
{
    efl_event_callback_add(obj, ELM_GLVIEW_EVENT_DESTROYED, on_elm_glview_event_destroyed, d);
}

</code>

===== Description =====

%%Event dispatched when GLView object is deleted.%%

%%The registered destroyed function gets called when GLView object is deleted. Callback function allows glview to hide all the rendering context/surface  details and have the user just call GL calls that they desire  when delete happens.%%
{{page>:develop:api:user:class:elm:glview:event:destroyed:description&nouser&nolink&nodate}}

