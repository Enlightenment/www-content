<title>Eldbus.Model.Arguments.children_slice_get</title>
//Overridden from [[:develop:api:interface:efl:model:method:children_slice_get|Efl.Model.children_slice_get]].//===== Signature =====

<code>
children_slice_get @pure_virtual {
    params {
        @in start: uint;
        @in count: uint;
    }
    return: free(future<free(accessor<free(Efl.Object, efl_del)>, eina_accessor_free)>, efl_del);
}
</code>

===== C signature =====

<code c>
Efl_Future *efl_model_children_slice_get(Eo *obj, unsigned int start, unsigned int count);
</code>

===== Parameters =====

  * **start** //(in)// - %%Range begin - start from here.%%
  * **count** //(in)// - %%Range size. If count is 0, start is ignored.%%

===== Description =====

%%Get children slice OR full range.%%

%%children_slice_get behaves in two different ways, it may provide the slice if %%''count''%% is non-zero OR full range otherwise.%%

%%Since 'slice' is a range, for example if we have 20 childs a slice could be the range from 3(start) with 4(count), see:%%

%%child 0  [no] child 1  [no] child 2  [no] child 3  [yes] child 4  [yes] child 5  [yes] child 6  [yes] child 7  [no]%%

%%Optionally the user can call children_count_get to know the number of children so a valid range can be known in advance.%%

%%See %%[[:develop:api:interface:efl:model:method:children_count_get|Efl.Model.children_count_get]]%%%%

//Since 1.14//
{{page>:develop:api:user:class:eldbus:model:arguments:method:children_slice_get:description&nouser&nolink&nodate}}

===== Implemented by =====

  * [[:develop:api:interface:efl:model:method:children_slice_get|Efl.Model.children_slice_get]]
  * **Eldbus.Model.Arguments.children_slice_get**

