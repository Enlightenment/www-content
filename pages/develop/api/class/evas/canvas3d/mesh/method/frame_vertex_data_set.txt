~~Title: Evas.Canvas3D.Mesh.frame_vertex_data_set~~
===== Signature =====

<code>
frame_vertex_data_set {
    params {
        @in frame: int;
        @in attrib: Evas.Canvas3D.Vertex_Attrib;
        @in stride: int;
        @in data: const(void_ptr);
    }
}
</code>

===== C signature =====

<code c>
void evas_canvas3d_mesh_frame_vertex_data_set(Eo *obj, int frame, Evas_Canvas3D_Vertex_Attrib attrib, int stride, const void *data);
</code>

===== Parameters =====

  * **frame** //(in)// - %%The number of the key frame.%%
  * **attrib** //(in)// - %%Vertex attribute ID.%%
  * **stride** //(in)// - %%Stride to go to the next vertex (in bytes).%%
  * **data** //(in)// - %%Pointer to the vertex data buffer.%%

===== Description =====

%%Set the vertex data of the key frame of the given mesh.%%

%%This function make evas read from the given buffer whenever it requires. If you want to release the buffer after calling this function, use %%[[:develop:api:class:evas:canvas3d:mesh:method:frame_vertex_data_copy_set|Evas.Canvas3D.Mesh.frame_vertex_data_copy_set]]%% instead.%%

%%After setting the vertex data, further modifications should be protected by map/unmap pair.%%

%%See also %%[[:develop:api:class:evas:canvas3d:mesh:method:frame_vertex_data_map|Evas.Canvas3D.Mesh.frame_vertex_data_map]]%%, %%[[:develop:api:class:evas:canvas3d:mesh:method:frame_vertex_data_unmap|Evas.Canvas3D.Mesh.frame_vertex_data_unmap]]%%.%%
{{page>:develop:api:user:class:evas:canvas3d:mesh:method:frame_vertex_data_set:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Evas.Canvas3D.Mesh.frame_vertex_data_set**

