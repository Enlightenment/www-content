<title>Evas.Canvas.focus</title>
===== Signature =====

<code>
@property focus {
    get {
        return: free(Efl.Canvas.Object, efl_del) @warn_unused;
    }
}
</code>

===== C signature =====

<code c>
Efl_Canvas_Object *evas_canvas_focus_get(const Eo *obj);
</code>

===== Description =====

%%Retrieve the object focused by the default seat.%%

%%Focused objects will be the ones having key events delivered to, which the programmer can act upon by means of @ref evas_object_event_callback_add usage.%%

%%Most users wouldn't be dealing directly with Evas' focused objects. Instead, they would be using a higher level library for that (like a toolkit, as Elementary) to handle focus and who's receiving input for them.%%
</note>

%%This call returns the object that currently has focus on the canvas %%''e''%% or %%''null''%%, if none.%%

%%See also @ref evas_object_focus_set, @ref evas_object_focus_get, @ref evas_object_key_grab, @ref evas_object_key_ungrab, %%[[:develop:api:class:evas:canvas:property:seat_focus|Evas.Canvas.seat_focus.get]]%%, %%[[:develop:api:class:efl:canvas:object:method:seat_focus_check|Efl.Canvas.Object.seat_focus_check]]%%, %%[[:develop:api:class:efl:canvas:object:method:seat_focus_add|Efl.Canvas.Object.seat_focus_add]]%%, %%[[:develop:api:class:efl:canvas:object:method:seat_focus_del|Efl.Canvas.Object.seat_focus_del]]%%.%%
{{page>:develop:user:class:evas:canvas:property:focus:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Evas.Canvas.focus**

