<title>Evas.Box.remove</title>
===== Signature =====

<code>
remove {
    params {
        @in child: free(Efl.Canvas.Object, efl_del) @nonull;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool evas_obj_box_remove(Eo *obj, Efl_Canvas_Object *child);
</code>

===== Parameters =====

  * **child** //(in)// - %%The handle to the child object to be removed.%%

===== Description =====

%%Remove a given object from a box object, unparenting it again.%%

%%On removal, you'll get an unparented object again, just as it was before you inserted it in the box. The _Evas_Object_Box_Api.option_free box smart callback will be called automatically for you and, also, the $"child,removed" smart event will take place.%%

%%This call will trigger the box's _Evas_Object_Box_Api.remove smart function.%%
</note>
{{page>:develop:api:user:class:evas:box:method:remove:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Evas.Box.remove**

