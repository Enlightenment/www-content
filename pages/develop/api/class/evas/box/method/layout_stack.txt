<title>Evas.Box.layout_stack</title>
===== Signature =====

<code>
layout_stack {
    params {
        @in priv: ptr(Evas_Object_Box_Data);
        @in data: void_ptr;
    }
}
</code>

===== C signature =====

<code c>
void evas_obj_box_layout_stack(Eo *obj, Evas_Object_Box_Data *priv, void *data);
</code>

===== Parameters =====

  * **priv** //(in)// - %%Private data pointer%%
  * **data** //(in)// - %%Data pointer%%

===== Description =====

%%Layout function which sets the box o to a stacking box%%

%%In a stacking box, all children will be given the same size -- the box's own size -- and they will be stacked one above the other, so that the first object in %%''o''%%'s internal list of child elements will be the bottommost in the stack.%%

%%Box's properties: No box properties are used.%%

%%Child element's properties: %%''padding_l''%% and %%''padding_r''%% sum up to the required width of the child element. The %%''align_x''%% property tells the relative position of this overall child width in its allocated cell ($0.0 to extreme left, $1.0 to extreme right). A value of $-1.0 to %%''align_x''%% makes the box try to resize this child element to the exact width of its cell (respecting the min and max hints on the child's width and accounting for its horizontal padding properties). The same applies to the vertical axis.%%
{{page>:develop:api:user:class:evas:box:method:layout_stack:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Evas.Box.layout_stack**

