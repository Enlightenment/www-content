<title>Efl.Net.Session.connect</title>
===== Signature =====

<code>
connect {
    params {
        @in online_required: bool;
        @in technologies_allowed: Efl.Net.Session.Technology;
    }
}
</code>

===== C signature =====

<code c>
void efl_net_session_connect(Eo *obj, Eina_Bool online_required, Efl_Net_Session_Technology technologies_allowed);
</code>

===== Parameters =====

  * **online_required** //(in)// - %%If %%''false''%%, access points with local state are enough. If %%''true''%%, the access point must be in online state, with a validated internet connection%%
  * **technologies_allowed** //(in)// - %%Bitwise OR of technologies to allow%%

===== Description =====

%%Asks the session to be connected.%%

%%This method doesn't need to be called if all an application want is to monitor the connectivity state, like a poller that will only try to access the webservice when there is an existing connection without triggering one.%%

%%This method is subject to backend policy. For instance, ConnMan uses https://github.com/aldebaran/connman/blob/master/doc/session-policy-format.txt%%

//Since 1.19//
{{page>:develop:api:user:class:efl:net:session:method:connect:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Net.Session.connect**

