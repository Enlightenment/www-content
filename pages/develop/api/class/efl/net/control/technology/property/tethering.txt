~~Title: Efl.Net.Control.Technology.tethering~~
===== Signature =====

<code>
@property tethering {
    get {
        values {
            enabled: bool;
            identifier: free(string, free) @optional;
            passphrase: free(string, free) @optional;
        }
    }
    set {
        values {
            enabled: bool;
            identifier: free(string, free) @optional;
            passphrase: free(string, free) @optional;
        }
    }
}
</code>

===== C signature =====

<code c>
void efl_net_control_technology_tethering_get(const Eo *obj, Eina_Bool *enabled, const char **identifier, const char **passphrase);
void efl_net_control_technology_tethering_set(Eo *obj, Eina_Bool enabled, const char *identifier, const char *passphrase);
</code>

===== Values =====

  * **enabled** - %%Whenever to enable or disable tethering for this technology%%
  * **identifier** - %%The name to identify this tethering, in WiFi it will translate to SSID.%%
  * **passphrase** - %%The passphrase for this tethering access, in WiFi it will translate to WPA passphrase.%%
===== Description =====

%%Tethering allows the default access point to be bridged to all clients connected through the technology.%%

%%A common case is to use the device as a router, such as a phone doing tethering allows a laptop to connect to 4G network.%%

//Since 1.19//
{{page>:develop:api:user:class:efl:net:control:technology:property:tethering:description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Efl.Net.Control.Technology.tethering**

