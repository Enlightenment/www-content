<title>Efl.Net.Ip_Address.create</title>
===== Signature =====

<code>
create @class {
    params {
        @in port: uint16;
        @in address: const(Eina.Slice);
    }
    return: free(Efl.Net.Ip_Address, efl_del);
}
</code>

===== C signature =====

<code c>
Efl_Net_Ip_Address *efl_net_ip_address_create(const Eo *obj, uint16_t port, const Eina_Slice address);
</code>

===== Parameters =====

  * **port** //(in)// - %%Port number in Host/Native endianess%%
  * **address** //(in)// - %%Address bytes. If 4 bytes, AF_INET will be used. If 16 bytes, AF_INET6 will be used. All other sizes will result in failure.%%

===== Description =====

%%Creates an object given family, port and address.%%

%%This is a convenience to create an object in a single call. To create based on 'struct sockaddr', see %%[[:develop:api:class:efl:net:ip_address:method:create_sockaddr|Efl.Net.Ip_Address.create_sockaddr]]%%. To create from string, see %%[[:develop:api:class:efl:net:ip_address:method:parse|Efl.Net.Ip_Address.parse]]%%.%%

//Since 1.19//
{{page>:develop:api:user:class:efl:net:ip_address:method:create:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Net.Ip_Address.create**

