~~Title: Efl.Ui.Win.win_role~~
===== Signature =====

<code>
@property win_role {
    get {
        values {
            role: free(string, free);
        }
    }
    set {
        values {
            role: free(string, free);
        }
    }
}
</code>

===== C signature =====

<code c>
const char *efl_ui_win_role_get(const Eo *obj);
void efl_ui_win_role_set(Eo *obj, const char *role);
</code>

===== Values =====

  * **role** - %%The role to set.%%
===== Description =====

%%The role of the window.%%

%%It is a hint of how the Window Manager should handle it. Unlike %%[[:develop:api:class:efl:ui:win:property:win_type|Efl.Ui.Win.win_type]]%% and %%[[:develop:api:class:efl:ui:win:property:win_name|Efl.Ui.Win.win_name]]%% this can be changed at runtime.%%


{{page>:develop:api:user:class:efl:ui:win:property:win_role:description&nouser&nolink&nodate}}

==== Getter ====

%%Get the role of the window.%%

%%The returned string is an internal one and should not be freed or modified. It will also be invalid if a new role is set or if the window is destroyed.%%


{{page>:develop:api:user:class:efl:ui:win:property:win_role:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Set the role of the window.%%
{{page>:develop:api:user:class:efl:ui:win:property:win_role:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Efl.Ui.Win.win_role**

