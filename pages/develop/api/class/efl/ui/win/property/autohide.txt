~~Title: Efl.Ui.Win.autohide~~
===== Signature =====

<code>
@property autohide {
    get {
        values {
            autohide: bool;
        }
    }
    set {
        values {
            autohide: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_ui_win_autohide_get(const Eo *obj);
void efl_ui_win_autohide_set(Eo *obj, Eina_Bool autohide);
</code>

===== Values =====

  * **autohide** - %%If %%''true''%%, the window will automatically hide itself when closed.%%
===== Description =====

%%Window's autohide state.%%

%%When closing the window in any way outside of the program control, like pressing the X button in the titlebar or using a command from the Window Manager, a "delete,request" signal is emitted to indicate that this event occurred and the developer can take any action, which may include, or not, destroying the window object.%%

%%When this property is set to %%''true''%%, the window will be automatically hidden when this event occurs, after the signal is emitted. If this property is %%''false''%%, nothing will happen, beyond the event emission.%%

%%C applications can use this option along with the quit policy %%''ELM_POLICY_QUIT_LAST_WINDOW_HIDDEN''%% which allows exiting EFL's main loop when all the windows are hidden.%%

<note>
%%%%''autodel''%% and %%''autohide''%% are not mutually exclusive. The window will be deleted if both are set to %%''true''%%.%%
</note>
{{page>:develop:api:user:class:efl:ui:win:property:autohide:description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Efl.Ui.Win.autohide**

