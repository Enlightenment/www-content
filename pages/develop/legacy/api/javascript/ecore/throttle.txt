===== Javascript binding API - Ecore Throttle =====

[[api:javascript:ecore|Back to the JS Ecore page]]

**DRAFT**

These functions manage the amount of "voluntary throttling" ecore will do to its main loop while running. This is intended to be used to limit animations and wakeups when in a strict power management state. The higher the current throttle value (which can be retrieved by ''efl.Ecore.Throttle.get()''), the more throttling takes place. If the current throttle value is 0, then no throttling takes place at all.

The value represents how long the ecore main loop will sleep (in seconds) before it goes into a fully idle state waiting for events, input or timing events to wake it up. For example, if the current throttle level is 0.5, then after every time the main loop cycles and goes into idle after processing all events, the main loop will explicitly sleep for 0.5 seconds before sitting and waiting for incoming events or timeouts, thus preventing animation, async IO and network handling etc. for that period of time. Of course these events, data and timeouts will be buffered, thus not losing anything, simply delaying when they get handled by the throttle value.

==== Functions ====

=== adjust(amount) ===

Syntax

<code javascript>
    efl.Ecore.Throttle.adjust(amount);
</code>

Parameters

   * amount - A number with the amount, in seconds, that will be changed on the throttling setting. Can be positive (increase throttle) or negative (decrease throttle).

Changes the throttling value by ''amount''.

=== get() ===

Syntax

<code javascript>
    var throttle = efl.Ecore.Throttle.get();
</code>

Return value

   * integer - The amount of throttling.