<title>Efl.Io.Sizer</title>
++++ Inheritance graph |

<graphviz>
digraph hierarchy {
    bgcolor = "transparent"
    size = "6"
    rankdir = "TB"

    node [shape = "box"]
    edge [color = "gray35"]

    efl_io_sizer [fillcolor = "deepskyblue4", label = "Efl.Io.Sizer", color = "deepskyblue", fontcolor = "white", style = "filled"]

}
</graphviz>

++++

===== Inheritance hierarchy =====

  * **[[:develop:efl:auto:mixin:efl:io:sizer|Efl.Io.Sizer]] //(mixin)//**

===== Description =====

%%Generic interface for objects that can resize or report size of themselves.%%

%%This interface allows external objects to transparently resize or report its size.%%

//Since 1.19//

{{page>:develop:efl:user:mixin:efl:io:sizer:description&nouser&nolink&nodate}}

===== Members =====

**[[:develop:efl:auto:mixin:efl:io:sizer:method:resize|resize]]**
<code c>
Eina_Error efl_io_sizer_resize(Eo *obj, uint64_t size);
</code>

%%Resize object%%\\ 
\\ 
**[[:develop:efl:auto:mixin:efl:io:sizer:property:size|size]]** //**(get, set)**//
<code c>
uint64_t efl_io_sizer_size_get(const Eo *obj);
Eina_Bool efl_io_sizer_size_set(Eo *obj, uint64_t size);
</code>

%%Size property%%\\ 
\\ 

===== Events =====

**[[:develop:efl:auto:mixin:efl:io:sizer:event:size_changed|size,changed]]**
<code c>
EFL_IO_SIZER_EVENT_SIZE_CHANGED(void)
</code>

%%Notifies size changed%%\\ 
\\ 
