<title>Efl.Gfx.Path.append_scubic_to</title>
===== Signature =====

<code>
append_scubic_to {
    params {
        @in x: double;
        @in y: double;
        @in ctrl_x: double;
        @in ctrl_y: double;
    }
}
</code>

===== C signature =====

<code c>
void efl_gfx_path_append_scubic_to(Eo *obj, double x, double y, double ctrl_x, double ctrl_y);
</code>

===== Parameters =====

  * **x** //(in)// - %%X co-ordinate of end point of the line.%%
  * **y** //(in)// - %%Y co-ordinate of end point of the line.%%
  * **ctrl_x** //(in)// - %%X co-ordinate of 2nd control point.%%
  * **ctrl_y** //(in)// - %%Y co-ordinate of 2nd control point.%%

===== Description =====

%%Same as efl_gfx_path_append_cubic_to() api only difference is that it uses the current control point to draw the bezier.%%

%%See also %%[[:develop:efl:auto:mixin:efl:gfx:path:method:append_cubic_to|Efl.Gfx.Path.append_cubic_to]]%%.%%

//Since 1.18//
{{page>:develop:efl:user:mixin:efl:gfx:path:method:append_scubic_to:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Gfx.Path.append_scubic_to**

