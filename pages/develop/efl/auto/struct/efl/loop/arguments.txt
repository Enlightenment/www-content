<title>Efl.Loop.Arguments</title>
===== Signature =====

<code>
struct Efl.Loop.Arguments {
    argv: const(array<const(stringshare)>);
    initialization: bool;
}
</code>

===== C signature =====

<code c>
typedef struct _Efl_Loop_Arguments {
    const Eina_Array *argv;
    Eina_Bool initialization;
} Efl_Loop_Arguments;
</code>

===== Description =====

%%EFL loop arguments data structure%%

{{page>:docs:efl:user:struct:efl:loop:arguments:description&nodate&nolink&nouser}}

===== Fields =====

{{page>:docs:efl:user:struct:efl:loop:arguments:fields&nodate&nolink&nouser}}

  * **argv** - %%Array with loop arguments%%
  * **initialization** - %%Set to %%''true''%% when the program should initialize its internal state. This happen once per process instance.%%

