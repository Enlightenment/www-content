<title>Evas.Canvas3D.Vertex_Assembly</title>
===== Signature =====

<code>
enum Evas.Canvas3D.Vertex_Assembly {
    points: 0,
    lines,
    line_strip,
    line_loop,
    triangles,
    triangle_strip,
    triangle_fan
}
</code>

===== C signature =====

<code c>
typedef enum {
    EVAS_CANVAS3D_VERTEX_ASSEMBLY_POINTS = 0,
    EVAS_CANVAS3D_VERTEX_ASSEMBLY_LINES,
    EVAS_CANVAS3D_VERTEX_ASSEMBLY_LINE_STRIP,
    EVAS_CANVAS3D_VERTEX_ASSEMBLY_LINE_LOOP,
    EVAS_CANVAS3D_VERTEX_ASSEMBLY_TRIANGLES,
    EVAS_CANVAS3D_VERTEX_ASSEMBLY_TRIANGLE_STRIP,
    EVAS_CANVAS3D_VERTEX_ASSEMBLY_TRIANGLE_FAN
} Evas_Canvas3D_Vertex_Assembly;
</code>

===== Description =====

%%Vertex assembly modes. Vertex assembly represents how the vertices are organized into geometric primitives.%%

//Since 1.10//

{{page>:docs:efl:user:enum:evas:canvas3d:vertex_assembly:description&nodate&nolink&nouser}}

===== Fields =====

{{page>:docs:efl:user:enum:evas:canvas3d:vertex_assembly:fields&nodate&nolink&nouser}}

  * **points** - %%A vertex is rendered as a point%%
  * **lines** - %%Two vertices are organized as a line%%
  * **line_strip** - %%Vertices are organized as a connected line path%%
  * **line_loop** - %%Vertices are organized as a closed line path%%
  * **triangles** - %%Three vertices are organized as a triangle%%
  * **triangle_strip** - %%Vertices are organized as connected triangles%%
  * **triangle_fan** - %%Vertices are organized as a triangle fan%%

