<title>Efl.Gfx.Size.Hint.Aspect</title>
===== Signature =====

<code>
enum Efl.Gfx.Size.Hint.Aspect {
    none: 0,
    neither: 1,
    horizontal: 2,
    vertical: 3,
    both: 4
}
</code>

===== C signature =====

<code c>
typedef enum {
    EFL_GFX_SIZE_HINT_ASPECT_NONE = 0,
    EFL_GFX_SIZE_HINT_ASPECT_NEITHER = 1,
    EFL_GFX_SIZE_HINT_ASPECT_HORIZONTAL = 2,
    EFL_GFX_SIZE_HINT_ASPECT_VERTICAL = 3,
    EFL_GFX_SIZE_HINT_ASPECT_BOTH = 4
} Efl_Gfx_Size_Hint_Aspect;
</code>

===== Description =====

%%Aspect types/policies for scaling size hints.%%

%%See also %%''Efl''%%.Gfx.Size.Hint.aspect.%%

{{page>:develop:efl:user:enum:efl:gfx:size:hint:aspect:description&nouser&nolink&nodate}}

===== Fields =====

{{page>:develop:efl:user:enum:efl:gfx:size:hint:aspect:fields&nouser&nolink&nodate}}

  * **none** - %%No preference on either direction of the container for aspect ratio control.%%
  * **neither** - %%Same effect as disabling aspect ratio preference%%
  * **horizontal** - %%Use all horizontal container space to place an object, using the given aspect.%%
  * **vertical** - %%Use all vertical container space to place an object, using the given aspect.%%
  * **both** - %%Use all horizontal and vertical container spaces to place an object (never growing it out of those bounds), using the given aspect.%%

