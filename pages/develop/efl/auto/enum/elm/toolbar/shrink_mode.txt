<title>Elm.Toolbar.Shrink_Mode</title>
===== Signature =====

<code>
enum Elm.Toolbar.Shrink_Mode {
    none: 0,
    hide,
    scroll,
    menu,
    expand,
    last
}
</code>

===== C signature =====

<code c>
typedef enum {
    ELM_TOOLBAR_SHRINK_NONE = 0,
    ELM_TOOLBAR_SHRINK_HIDE,
    ELM_TOOLBAR_SHRINK_SCROLL,
    ELM_TOOLBAR_SHRINK_MENU,
    ELM_TOOLBAR_SHRINK_EXPAND,
    ELM_TOOLBAR_SHRINK_LAST
} Elm_Toolbar_Shrink_Mode;
</code>

===== Description =====

%%Set toolbar's items display behavior, it can be scrollable, show a menu with exceeding items, or simply hide them.%%

%%Default value is #ELM_TOOLBAR_SHRINK_MENU. It reads value from elm config.%%

%%Values don't work as bitmask, only one can be chosen.%%

%%See also %%[[:develop:efl:auto:class:elm:toolbar:property:shrink_mode|Elm.Toolbar.shrink_mode.set]]%%, %%[[:develop:efl:auto:class:elm:toolbar:property:shrink_mode|Elm.Toolbar.shrink_mode.get]]%%.%%

{{page>:develop:efl:user:enum:elm:toolbar:shrink_mode:description&nouser&nolink&nodate}}

===== Fields =====

{{page>:develop:efl:user:enum:elm:toolbar:shrink_mode:fields&nouser&nolink&nodate}}

  * **none** - %%Set toolbar minimum size to fit all the items.%%
  * **hide** - %%Hide exceeding items.%%
  * **scroll** - %%Allow accessing exceeding items through a scroller.%%
  * **menu** - %%Inserts a button to pop up a menu with exceeding items.%%
  * **expand** - %%Expand all items according the size of the toolbar.%%
  * **last** - %%Indicates error if returned by elm_toolbar_shrink_mode_get()%%

