<title>Elm.Map.Zoom_Mode</title>
===== Signature =====

<code>
enum Elm.Map.Zoom_Mode {
    manual: 0,
    auto_fit,
    auto_fill,
    last
}
</code>

===== C signature =====

<code c>
typedef enum {
    ELM_MAP_ZOOM_MODE_MANUAL = 0,
    ELM_MAP_ZOOM_MODE_AUTO_FIT,
    ELM_MAP_ZOOM_MODE_AUTO_FILL,
    ELM_MAP_ZOOM_MODE_LAST
} Elm_Map_Zoom_Mode;
</code>

===== Description =====

%%Set map's zoom behavior. It can be set to manual or automatic.%%

%%Default value is #ELM_MAP_ZOOM_MODE_MANUAL.%%

%%Values <b> don't </b> work as bitmask, only one can be chosen.%%

%%Valid sizes are 2^zoom, consequently the map may be smaller than the scroller view.%%

%%See %%[[:docs:efl:auto:class:elm:map:property:zoom_mode|Elm.Map.zoom_mode.set]]%%() See %%[[:docs:efl:auto:class:elm:map:property:zoom_mode|Elm.Map.zoom_mode.get]]%%()%%

{{page>:docs:efl:user:enum:elm:map:zoom_mode:description&nodate&nolink&nouser}}

===== Fields =====

{{page>:docs:efl:user:enum:elm:map:zoom_mode:fields&nodate&nolink&nouser}}

  * **manual** - %%Zoom controlled manually by elm_map_zoom_set(). It's set by default.%%
  * **auto_fit** - %%Zoom until map fits inside the scroll frame with no pixels outside this area.%%
  * **auto_fill** - %%Zoom until map fills scroll, ensuring no pixels are left unfilled.%%
  * **last** - %%Sentinel value to indicate last enum field during iteration%%

