<title>Efl.Gfx.Size.Hint.hint_base</title>
===== Signature =====

<code>
@property hint_base @pure_virtual {
    get {
        values {
            sz: Eina.Size2D;
        }
    }
    set {
        values {
            sz: Eina.Size2D;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Size2D efl_gfx_size_hint_base_get(const Eo *obj);
void efl_gfx_size_hint_base_set(Eo *obj, Eina_Size2D sz);
</code>

===== Values =====

  * **sz** - %%Base size (hint) in pixels.%%
===== Description =====

%%Base size for objects with sizing restrictions.%%

%%This is not a size enforcement in any way, it's just a hint that should be used whenever appropriate.%%

%%%%[[:develop:efl:auto:interface:efl:gfx:size:hint:property:hint_base|Efl.Gfx.Size.Hint.hint_base]]%% + N x %%[[:develop:efl:auto:interface:efl:gfx:size:hint:property:hint_step|Efl.Gfx.Size.Hint.hint_step]]%% is what is calculated for object sizing restrictions.%%

%%See also %%[[:develop:efl:auto:interface:efl:gfx:size:hint:property:hint_step|Efl.Gfx.Size.Hint.hint_step]]%%.%%{{page>:develop:efl:user:interface:efl:gfx:size:hint:property:hint_base:description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Efl.Gfx.Size.Hint.hint_base**
  * [[:develop:efl:auto:class:efl:ui:win:property:hint_base|Efl.Ui.Win.hint_base]]

