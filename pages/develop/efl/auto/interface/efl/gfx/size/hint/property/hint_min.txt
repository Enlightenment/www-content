<title>Efl.Gfx.Size.Hint.hint_min</title>
===== Signature =====

<code>
@property hint_min @pure_virtual {
    get {
        values {
            w: int;
            h: int;
        }
    }
    set {
        values {
            w: int;
            h: int;
        }
    }
}
</code>

===== C signature =====

<code c>
void efl_gfx_size_hint_min_get(const Eo *obj, int *w, int *h);
void efl_gfx_size_hint_min_set(Eo *obj, int w, int h);
</code>

===== Values =====

  * **w** - %%Integer to use as the maximum width hint.%%
  * **h** - %%Integer to use as the maximum height hint.%%
===== Description =====

%%Hints on the object's minimum size.%%

%%This is not a size enforcement in any way, it's just a hint that should be used whenever appropriate. The object container is in charge of fetching this property and placing the object accordingly.%%

%%Value 0 will be treated as unset hint components, when queried by managers.%%

%%This property is meant to be set by applications and not by EFL itself. Use this to request a specific size (treated as minimum size).%%
</note>{{page>:docs:efl:user:interface:efl:gfx:size:hint:property:hint_min:description&nodate&nolink&nouser}}


===== Implemented by =====

  * **Efl.Gfx.Size.Hint.hint_min**
  * [[:docs:efl:auto:class:efl:canvas:object:property:hint_min|Efl.Canvas.Object.hint_min]]

