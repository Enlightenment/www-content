<title>Efl.Ui.Item.selected</title>
===== Signature =====

<code>
@property selected @pure_virtual {
    get {
        values {
            selected: bool;
        }
    }
    set {
        values {
            selected: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_ui_item_selected_get(const Eo *obj);
void efl_ui_item_selected_set(Eo *obj, Eina_Bool selected);
</code>

===== Values =====

  * **selected** - %%The selection state.%%
===== Description =====

%%Indicates whether this item is currently selected.%%

{{page>:develop:efl:user:interface:efl:ui:item:property:selected:description&nouser&nolink&nodate}}

==== Getter ====

%%Get the selected state of this item.%%

{{page>:develop:efl:user:interface:efl:ui:item:property:selected:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Set the selected state of %%''item''%%.%%

%%This sets the selected state of the given item %%''it''%%. %%''true''%% for selected, %%''false''%% for not selected.%%

%%If a new item is selected the previously selected will be unselected. Previously selected item can be retrieved with %%[[:develop:efl:auto:interface:efl:ui:menu:property:selected_item|Efl.Ui.Menu.selected_item.get]]%%.%%

%%Selected items will be highlighted.%%{{page>:develop:efl:user:interface:efl:ui:item:property:selected:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Efl.Ui.Item.selected**
  * [[:develop:efl:auto:class:elm:menu:item:property:selected|Elm.Menu.Item.selected]]
  * [[:develop:efl:auto:class:elm:toolbar:item:property:selected|Elm.Toolbar.Item.selected]]
  * [[:develop:efl:auto:class:elm:ctxpopup:item:property:selected|Elm.Ctxpopup.Item.selected]]

