<title>Efl.Pack.Linear.pack_at</title>
===== Signature =====

<code>
pack_at @pure_virtual {
    params {
        @in subobj: free(Efl.Gfx, efl_del);
        @in index: int;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_pack_at(Eo *obj, Efl_Gfx *subobj, int index);
</code>

===== Parameters =====

  * **subobj** //(in)// - %%Item to pack at given index.%%
  * **index** //(in)// - %%A position.%%

===== Description =====

%%Inserts %%''subobj''%% at the specified %%''index''%%.%%

%%Valid range: -%%''count''%% to +%%''count''%%. -1 refers to the last element. Out of range indices will trigger an append.%%

%%When this container is deleted, it will request deletion on the given %%''subobj''%%. Use %%[[:develop:efl:auto:interface:efl:pack:method:unpack|Efl.Pack.unpack]]%% to remove %%''subobj''%% from this container without deleting it.%%
{{page>:develop:efl:user:interface:efl:pack:linear:method:pack_at:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Efl.Pack.Linear.pack_at**
  * [[:develop:efl:auto:class:efl:ui:flip:method:pack_at|Efl.Ui.Flip.pack_at]]
  * [[:develop:efl:auto:class:efl:canvas:layout:part_box:method:pack_at|Efl.Canvas.Layout.Part_Box.pack_at]]
  * [[:develop:efl:auto:class:efl:ui:box:method:pack_at|Efl.Ui.Box.pack_at]]
  * [[:develop:efl:auto:class:efl:ui:layout:part:box:method:pack_at|Efl.Ui.Layout.Part.Box.pack_at]]

