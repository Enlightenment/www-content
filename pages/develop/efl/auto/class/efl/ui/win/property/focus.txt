<title>Efl.Ui.Win.focus</title>
//Overridden from [[:develop:efl:auto:class:elm:widget:property:focus|Elm.Widget.focus]] **(get)**.//===== Signature =====

<code>
@property focus {
    get {
        values {
            focus: bool (false);
        }
    }
    set {
        values {
            focus: bool (false);
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool elm_obj_widget_focus_get(const Eo *obj);
void elm_obj_widget_focus_set(Eo *obj, Eina_Bool focus);
</code>

===== Values =====

  * **focus** - %%Whether the object is focused.%%
===== Description =====

%%Whether the object is focused for inputs.%%

%%If an object is focused it will be the first to receive keyboard inputs. Only visible, non-disabled objects can be focused.%%

%%Focus can be disabled by setting %%[[:develop:efl:auto:class:elm:widget:property:focus_allow|Elm.Widget.focus_allow]]%% to %%''false''%%.%%

{{page>:develop:efl:user:class:efl:ui:win:property:focus:description&nouser&nolink&nodate}}

==== Getter ====

%%Gets whether this object is currently focused.%%

{{page>:develop:efl:user:class:efl:ui:win:property:focus:getter_description&nouser&nolink&nodate}}

==== Setter ====

%%Set or unsets the focus on this widget.%%

%%When you set focus to this object, if it can handle focus, will take the focus away from the one who had it previously and will, for now on, be the one receiving input events. Unsetting focus will remove the focus from this object, passing it back to the previous element as defined by the focus manager policy.%%
</note>{{page>:develop:efl:user:class:efl:ui:win:property:focus:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * [[:develop:efl:auto:class:elm:widget:property:focus|Elm.Widget.focus]]
  * **Efl.Ui.Win.focus**

