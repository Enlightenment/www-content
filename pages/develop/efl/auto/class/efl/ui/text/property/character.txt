<title>Efl.Ui.Text.character</title>
//Overridden from [[:develop:efl:auto:interface:efl:access:text:property:character|Efl.Access.Text.character]] **(get)**.//===== Signature =====

<code>
@property character @pure_virtual {
    get @protected {
        keys {
            offset: int;
        }
        values {
            character: Eina.Unicode;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Unicode efl_access_text_character_get(const Eo *obj, int offset);
</code>

===== Keys =====

  * **offset** - %%Position in text.%%
===== Values =====

  * **character** - %%Character at offset. 0 when out-of bounds offset has been given. Codepoints between DC80 and DCFF indicates that string includes invalid UTF8 chars.%%
===== Description =====

%%Gets single character present in accessible widget's text at given offset.%%
{{page>:develop:efl:user:class:efl:ui:text:property:character:description&nouser&nolink&nodate}}

===== Implemented by =====

  * [[:develop:efl:auto:interface:efl:access:text:property:character|Efl.Access.Text.character]]
  * [[:develop:efl:auto:class:elm:entry:property:character|Elm.Entry.character]]
  * **Efl.Ui.Text.character**

