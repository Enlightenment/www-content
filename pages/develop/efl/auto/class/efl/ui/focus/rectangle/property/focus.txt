<title>Efl.Ui.Focus.Rectangle.focus</title>
//Overridden from [[:develop:efl:auto:mixin:efl:ui:focus:object:property:focus|Efl.Ui.Focus.Object.focus]] **(get, set)**.//===== Signature =====

<code>
@property focus {
    get {
        values {
            focus: bool;
        }
    }
    set {
        values {
            focus: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool efl_ui_focus_object_focus_get(const Eo *obj);
void efl_ui_focus_object_focus_set(Eo *obj, Eina_Bool focus);
</code>

===== Values =====

  * **focus** - %%The state in which the object should be put%%
===== Description =====

%%This gets called by the manager and should never be called by someone else.%%

%%It can be used by an implementation of a focus object to adapt to changes that are needed.%%

%%The function is emitting the focus state events, if focus is different to the previous state.%%

//Since 1.20//{{page>:develop:efl:user:class:efl:ui:focus:rectangle:property:focus:description&nouser&nolink&nodate}}


===== Implemented by =====

  * [[:develop:efl:auto:mixin:efl:ui:focus:object:property:focus|Efl.Ui.Focus.Object.focus]]
  * [[:develop:efl:auto:class:elm:widget:property:focus|Elm.Widget.focus]]
  * [[:develop:efl:auto:class:efl:ui:focus:composition:adapter:property:focus|Efl.Ui.Focus.Composition.Adapter.focus]]
  * [[:develop:efl:auto:class:elm:toolbar:item:property:focus|Elm.Toolbar.Item.focus]]
  * [[:develop:efl:auto:class:elm:color:item:property:focus|Elm.Color.Item.focus]]
  * **Efl.Ui.Focus.Rectangle.focus**
  * [[:develop:efl:auto:class:elm:calendar:item:property:focus|Elm.Calendar.Item.focus]]

