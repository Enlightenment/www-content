<title>Efl.Io.File.read</title>
//Overridden from [[:develop:efl:auto:mixin:efl:io:reader:fd:method:read|Efl.Io.Reader.read]].//===== Signature =====

<code>
read @pure_virtual {
    params {
        @inout rw_slice: Eina.Rw_Slice @nonull;
    }
    return: Eina.Error;
}
</code>

===== C signature =====

<code c>
Eina_Error efl_io_reader_read(Eo *obj, Eina_Rw_Slice rw_slice);
</code>

===== Parameters =====

  * **rw_slice** //(inout)// - %%Provides a pre-allocated memory to be filled up to rw_slice.len. It will be populated and the length will be set to the actually used amount of bytes, which can be smaller than the request.%%

===== Description =====

%%Reads data into a pre-allocated buffer.%%

%%This operation will be executed immediately and may or may not block the caller thread for some time. The details of blocking behavior is to be defined by the implementation and may be subject to other parameters such as non-blocking flags, maximum timeout or even retry attempts.%%

%%You can understand this method as read(2) libc function.%%

//Since 1.19//
{{page>:develop:efl:user:class:efl:io:file:method:read:description&nouser&nolink&nodate}}

===== Implemented by =====

  * [[:develop:efl:auto:interface:efl:io:reader:method:read|Efl.Io.Reader.read]]
  * [[:develop:efl:auto:class:efl:net:dialer:websocket:method:read|Efl.Net.Dialer.Websocket.read]]
  * [[:develop:efl:auto:class:efl:net:dialer:http:method:read|Efl.Net.Dialer.Http.read]]
  * [[:develop:efl:auto:class:efl:net:socket:fd:method:read|Efl.Net.Socket.Fd.read]]
  * [[:develop:efl:auto:class:efl:net:socket:udp:method:read|Efl.Net.Socket.Udp.read]]
  * [[:develop:efl:auto:class:efl:net:socket:ssl:method:read|Efl.Net.Socket.Ssl.read]]
  * [[:develop:efl:auto:class:efl:net:server:udp:client:method:read|Efl.Net.Server.Udp.Client.read]]
  * [[:develop:efl:auto:class:efl:net:socket:windows:method:read|Efl.Net.Socket.Windows.read]]
  * [[:develop:efl:auto:mixin:efl:io:reader:fd:method:read|Efl.Io.Reader.Fd.read]]
  * **Efl.Io.File.read**
  * [[:develop:efl:auto:class:efl:io:stdin:method:read|Efl.Io.Stdin.read]]
  * [[:develop:efl:auto:class:efl:io:queue:method:read|Efl.Io.Queue.read]]
  * [[:develop:efl:auto:class:efl:io:buffer:method:read|Efl.Io.Buffer.read]]
  * [[:develop:efl:auto:class:efl:io:buffered_stream:method:read|Efl.Io.Buffered_Stream.read]]

