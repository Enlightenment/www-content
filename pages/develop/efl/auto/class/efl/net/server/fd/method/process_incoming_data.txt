<title>Efl.Net.Server.Fd.process_incoming_data</title>
===== Signature =====

<code>
process_incoming_data @protected {}
</code>

===== C signature =====

<code c>
void efl_net_server_fd_process_incoming_data(Eo *obj);
</code>

===== Description =====

%%When the socket has data to be read, process it.%%

%%By default this method will call accept() and then decide if %%[[:docs:efl:auto:class:efl:net:server:fd:method:client_add|Efl.Net.Server.Fd.client_add]]%% or %%[[:docs:efl:auto:class:efl:net:server:fd:method:client_reject|Efl.Net.Server.Fd.client_reject]]%% must be executed, however it may be replaced with something else, such as in SOCK_DGRAM (UDP) there is no accept(), only recvfrom().%%

%%It is called straight from %%[[:docs:efl:auto:class:efl:loop:fd|Efl.Loop.Fd]]%% "read" event handler and is provided as a method to allow easy extending of the class for various purposes.%%

//Since 1.19//
{{page>:docs:efl:user:class:efl:net:server:fd:method:process_incoming_data:description&nodate&nolink&nouser}}

===== Implemented by =====

  * **Efl.Net.Server.Fd.process_incoming_data**
  * [[:docs:efl:auto:class:efl:net:server:udp:method:process_incoming_data|Efl.Net.Server.Udp.process_incoming_data]]

