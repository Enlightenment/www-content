<title>Efl.Net.Dialer.Simple.line_delimiter</title>
//Overridden from [[:docs:efl:auto:class:efl:io:buffered_stream:property:line_delimiter|Efl.Io.Buffered_Stream.line_delimiter]] **(get, set)**.//===== Signature =====

<code>
@property line_delimiter {
    get {
        values {
            slice: Eina.Slice;
        }
    }
    set {
        values {
            slice: Eina.Slice;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Slice efl_io_buffered_stream_line_delimiter_get(const Eo *obj);
void efl_io_buffered_stream_line_delimiter_set(Eo *obj, Eina_Slice slice);
</code>

===== Values =====

  * **slice** - %%The contents may contain 0 and will be copied%%
===== Description =====

%%If set, incoming data will be checked for the delimiter and "line" events are The line may include the delimiter, unless it's end-of-stream on %%[[:docs:efl:auto:class:efl:io:buffered_stream:property:max_queue_size_input|Efl.Io.Buffered_Stream.max_queue_size_input]]%% was reached.%%

//Since 1.19//

{{page>:docs:efl:user:class:efl:net:dialer:simple:property:line_delimiter:description&nodate&nolink&nouser}}

==== Setter ====

%%Change line delimiter to use. If empty, no delimiter is to be used%%

//Since 1.19//{{page>:docs:efl:user:class:efl:net:dialer:simple:property:line_delimiter:getter_description&nodate&nolink&nouser}}


===== Implemented by =====

  * [[:docs:efl:auto:class:efl:io:buffered_stream:property:line_delimiter|Efl.Io.Buffered_Stream.line_delimiter]]
  * **Efl.Net.Dialer.Simple.line_delimiter**

