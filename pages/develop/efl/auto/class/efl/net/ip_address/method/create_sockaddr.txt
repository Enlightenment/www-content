<title>Efl.Net.Ip_Address.create_sockaddr</title>
===== Signature =====

<code>
create_sockaddr @class {
    params {
        @in sockaddr: const(void_ptr) @nonull;
    }
    return: own(Efl.Net.Ip_Address);
}
</code>

===== C signature =====

<code c>
Efl_Net_Ip_Address *efl_net_ip_address_create_sockaddr(const Eo *obj, const void *sockaddr);
</code>

===== Parameters =====

  * **sockaddr** //(in)// - %%The pointer to struct sockaddr-compatible handle as per <netinet/in.h>.%%

===== Description =====

%%Creates an object given sockaddr%%

%%This is a convenience to create an object in a single call. To create based on native port and address bytes, use %%[[:docs:efl:auto:class:efl:net:ip_address:method:create|Efl.Net.Ip_Address.create]]%%, to create from string use %%[[:docs:efl:auto:class:efl:net:ip_address:method:parse|Efl.Net.Ip_Address.parse]]%%.%%

//Since 1.19//
{{page>:docs:efl:user:class:efl:net:ip_address:method:create_sockaddr:description&nodate&nolink&nouser}}

===== Implemented by =====

  * **Efl.Net.Ip_Address.create_sockaddr**

