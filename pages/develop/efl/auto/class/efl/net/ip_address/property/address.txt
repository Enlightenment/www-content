<title>Efl.Net.Ip_Address.address</title>
===== Signature =====

<code>
@property address {
    get {
        values {
            address: Eina.Slice;
        }
    }
    set {
        values {
            address: Eina.Slice;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Slice efl_net_ip_address_get(const Eo *obj);
void efl_net_ip_address_set(Eo *obj, Eina_Slice address);
</code>

===== Values =====

  * **address** - %%Address bytes. If AF_INET it's 4 bytes. If AF_INET6, it's 16 bytes. This matches exactly what is in struct sockaddr_in::sin_addr or struct sockaddr_in6:sin6_addr, see %%[[:docs:efl:auto:class:efl:net:ip_address:property:sockaddr|Efl.Net.Ip_Address.sockaddr]]%%%%
===== Description =====

%%The bytes representing the address.%%

%%May only be set once, afterwards the object is not changing.%%

%%Must be set after %%[[:docs:efl:auto:class:efl:net:ip_address:property:family|Efl.Net.Ip_Address.family]]%%.%%

//Since 1.19//{{page>:docs:efl:user:class:efl:net:ip_address:property:address:description&nodate&nolink&nouser}}


===== Implemented by =====

  * **Efl.Net.Ip_Address.address**

