<title>Evas.Canvas.key_lock_add</title>
===== Signature =====

<code>
key_lock_add {
    params {
        @in keyname: free(string, free) @nonull;
    }
}
</code>

===== C signature =====

<code c>
void evas_canvas_key_lock_add(Eo *obj, const char *keyname);
</code>

===== Parameters =====

  * **keyname** //(in)// - %%The name of the key to add to the locks list.%%

===== Description =====

%%Adds the %%''keyname''%% key to the current list of lock keys.%%

%%Locks are keys like caps lock, num lock or scroll lock, i.e., keys which are meant to be pressed once -- toggling a binary state which is bound to it -- and thus altering the behavior of all  subsequently pressed keys somehow, depending on its state. Evas is so that these keys can be defined by the user.%%

%%This allows custom locks to be added to the evas system at run time. It is then possible to set and unset lock keys programmatically for other parts of the program to check and act on. Programmers using Evas would check for lock keys on key event callbacks using @ref evas_key_lock_is_set.%%

%%If the programmer instantiates the canvas by means of the ecore_evas_new() family of helper functions, Ecore will take care of registering on it all standard lock keys: "Caps_Lock", "Num_Lock", "Scroll_Lock".%%
</note>
{{page>:develop:efl:user:class:evas:canvas:method:key_lock_add:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Evas.Canvas.key_lock_add**

