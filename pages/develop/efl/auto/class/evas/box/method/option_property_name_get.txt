<title>Evas.Box.option_property_name_get</title>
===== Signature =====

<code>
option_property_name_get @const {
    params {
        @in property: int;
    }
    return: free(string, free) @warn_unused;
}
</code>

===== C signature =====

<code c>
const char *evas_obj_box_option_property_name_get(const Eo *obj, int property);
</code>

===== Parameters =====

  * **property** //(in)// - %%The numerical identifier of the option being searched, for its name.%%

===== Description =====

%%Get the name of the property of the child elements of the box o which have id as identifier%%

%%This call won't do anything for a canonical Evas box. Only users which have subclassed it, setting custom box items options (see #Evas_Object_Box_Option) on it, would benefit from this function. They'd have to implement it and set it to be the _Evas_Object_Box_Api.property_name_get smart class function of the box, which is originally set to %%''null''%%.%%
</note>
{{page>:develop:efl:user:class:evas:box:method:option_property_name_get:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Evas.Box.option_property_name_get**

