<title>Evas.Box.remove_at</title>
===== Signature =====

<code>
remove_at {
    params {
        @in pos: uint;
    }
    return: bool;
}
</code>

===== C signature =====

<code c>
Eina_Bool evas_obj_box_remove_at(Eo *obj, unsigned int pos);
</code>

===== Parameters =====

  * **pos** //(in)// - %%The numeric position (starting from $0) of the child object to be removed.%%

===== Description =====

%%Remove an object, bound to a given position in a box object, unparenting it again.%%

%%On removal, you'll get an unparented object again, just as it was before you inserted it in the box. The %%''option_free''%% box smart callback will be called automatically for you and, also, the $"child,removed" smart event will take place.%%

%%This function will fail if the given position is invalid, given %%''o''%%'s internal list of elements.%%
</note>

%%This call will trigger the box's _Evas_Object_Box_Api.remove_at smart function.%%
</note>
{{page>:develop:efl:user:class:evas:box:method:remove_at:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Evas.Box.remove_at**

