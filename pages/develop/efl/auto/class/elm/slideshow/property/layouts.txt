<title>Elm.Slideshow.layouts</title>
===== Signature =====

<code>
@property layouts {
    get {
        return: free(const(list<free(string, free)>), eina_list_free);
    }
}
</code>

===== C signature =====

<code c>
const Eina_List *elm_obj_slideshow_layouts_get(const Eo *obj);
</code>

===== Description =====

%%Returns the list of layout names available, for a given slideshow widget.%%

%%Slideshow layouts will change how the widget is to dispose each image item in its viewport, with regard to cropping, scaling, etc.%%

%%The layouts, which come from %%''obj''%%'s theme, must be an EDC data item name $"layouts" on the theme file, with (prefix) names of EDC programs actually implementing them.%%

%%The available layouts for slideshows on the default theme are "fullscreen" (item images with original aspect, scaled to touch top and down slideshow borders or, if the image's height is not enough, left and right slideshow borders) and "not_fullscreen" (the same behavior as the "fullscreen" one, but always leaving 10% of the slideshow's dimensions of distance between the item image's borders and the slideshow borders, for each axis)-%%

%%The stringshared strings get no new references exclusive to the user grabbing the list, here, so if you'd like to use them out of this call's context, you'd better @ref eina_stringshare_ref them.%%
</note>
{{page>:develop:efl:user:class:elm:slideshow:property:layouts:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Elm.Slideshow.layouts**

