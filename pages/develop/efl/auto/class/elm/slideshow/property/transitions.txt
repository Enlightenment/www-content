<title>Elm.Slideshow.transitions</title>
===== Signature =====

<code>
@property transitions {
    get {
        return: const(list<string>);
    }
}
</code>

===== C signature =====

<code c>
const Eina_List *elm_obj_slideshow_transitions_get(const Eo *obj);
</code>

===== Description =====

%%Returns the list of sliding transition/effect names available, for a given slideshow widget.%%

%%The transitions, which come from %%''obj''%%'s theme, must be an EDC data item named $"transitions" on the theme file, with (prefix) names of EDC programs actually implementing them.%%

%%The available transitions for slideshows on the default theme are "fade" (the current item fades out, while the new one fades in to the slideshow's viewport), "black_fade" (the current item fades to black, and just then, the new item will fade in), "horizontal" (the current item slides horizontally, until it gets out of the slideshow's viewport, while the new item comes from the left to take its place), "vertical" (the current item slides vertically, until it gets out of the slideshow's viewport, while the new item comes from the bottom to take its place), "square" (the new item starts to appear from the middle of the current one, but with a tiny size, growing until its target (full) size and covering the old one.%%

%%The stringshared strings get no new references exclusive to the user grabbing the list, here, so if you'd like to use them out of this call's context, you'd better @ref eina_stringshare_ref them. Also the list is an internal list and so is only valid for as long as the slideshow object is valid and has not internally changed its list for some reason, so make a copy if you need it around.%%
</note>
{{page>:docs:efl:user:class:elm:slideshow:property:transitions:description&nodate&nolink&nouser}}

===== Implemented by =====

  * **Elm.Slideshow.transitions**

