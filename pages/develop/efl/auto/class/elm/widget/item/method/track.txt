<title>Elm.Widget.Item.track</title>
===== Signature =====

<code>
track {
    return: free(Efl.Canvas.Object, efl_del);
}
</code>

===== C signature =====

<code c>
Efl_Canvas_Object *elm_wdg_item_track(Eo *obj);
</code>

===== Description =====

%%This returns track object of the item.%%

%%This gets a rectangle object that represents the object item's internal object. If you want to check the geometry, visibility of the item, you can call the evas apis such as evas_object_geometry_get(), evas_object_visible_get() to the track object. Note that all of the widget items may/may not have the internal object so this api may return %%''NULL''%% if the widget item doesn't have it. Additionally, the widget item is managed/controlled by the widget, the widget item could be changed(moved, resized even deleted) anytime by it's own widget's decision. So please dont' change the track object as well as don't keep the track object in your side as possible but get the track object at the moment you need to refer. Otherwise, you need to add some callbacks to the track object to track it's attributes changes.%%
</note>

%%After use the track object, please call the %%[[:develop:efl:auto:class:elm:widget:item:method:untrack|Elm.Widget.Item.untrack]]%%() paired to elm_object_item_track definitely to free the track object properly. Don't delete the track object.%%
</note>

%%See: %%[[:develop:efl:auto:class:elm:widget:item:method:untrack|Elm.Widget.Item.untrack]]%% See: %%[[:develop:efl:auto:class:elm:widget:item:method:track_get|Elm.Widget.Item.track_get]]%%%%

//Since 1.8//
{{page>:develop:efl:user:class:elm:widget:item:method:track:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Elm.Widget.Item.track**

