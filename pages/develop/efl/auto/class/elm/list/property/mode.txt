<title>Elm.List.mode</title>
===== Signature =====

<code>
@property mode {
    get {
        values {
            mode: Elm.List.Mode (Elm.List.Mode.last);
        }
    }
    set {
        values {
            mode: Elm.List.Mode (Elm.List.Mode.last);
        }
    }
}
</code>

===== C signature =====

<code c>
Elm_List_Mode elm_obj_list_mode_get(const Eo *obj);
void elm_obj_list_mode_set(Eo *obj, Elm_List_Mode mode);
</code>

===== Values =====

  * **mode** - %%One of #Elm_List_Mode: #ELM_LIST_COMPRESS, #ELM_LIST_SCROLL, #ELM_LIST_LIMIT or #ELM_LIST_EXPAND.%%
===== Description =====

%%Control which mode to use for the list object.%%

%%Set list's resize behavior, transverse axis scroll and items cropping. See each mode's description for more details.%%

%%Default value is #ELM_LIST_SCROLL.%%
</note>

%%Only one mode at a time can be set. If a previous one was set, it will be changed by the new mode after this call. Bitmasks won't work here as well.%%

%%This function's behavior will clash with those of elm_scroller_content_min_limit(), so use either one of them, but not both.%%
</note>{{page>:develop:efl:user:class:elm:list:property:mode:description&nouser&nolink&nodate}}


===== Implemented by =====

  * **Elm.List.mode**

