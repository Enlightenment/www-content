<title>Elm.Clock.time</title>
===== Signature =====

<code>
@property time {
    get {
        values {
            hrs: int;
            min: int;
            sec: int;
        }
    }
    set {
        values {
            hrs: int;
            min: int;
            sec: int;
        }
    }
}
</code>

===== C signature =====

<code c>
void elm_obj_clock_time_get(const Eo *obj, int *hrs, int *min, int *sec);
void elm_obj_clock_time_set(Eo *obj, int hrs, int min, int sec);
</code>

===== Values =====

  * **hrs** - %%The hours to set%%
  * **min** - %%The minutes to set%%
  * **sec** - %%The seconds to set%%
===== Description =====

%%Clock widget's time%%

%%Values must be set within 0-23 for hours and 0-59 for minutes and seconds, even if the clock is not in "military" mode.%%

{{page>:docs:efl:user:class:elm:clock:property:time:description&nodate&nolink&nouser}}

==== Getter ====

%%Use %%''null''%% pointers on the time values you're not interested in: they'll be ignored by the function.%%
</note>

{{page>:docs:efl:user:class:elm:clock:property:time:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%The behavior for values set out of those ranges is undefined.%%
</note>{{page>:docs:efl:user:class:elm:clock:property:time:getter_description&nodate&nolink&nouser}}


===== Implemented by =====

  * **Elm.Clock.time**

