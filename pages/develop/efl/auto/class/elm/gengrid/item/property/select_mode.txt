<title>Elm.Gengrid.Item.select_mode</title>
===== Signature =====

<code>
@property select_mode {
    get {
        values {
            mode: Elm.Object.Select_Mode (Elm.Object.Select_Mode.max);
        }
    }
    set {
        values {
            mode: Elm.Object.Select_Mode (Elm.Object.Select_Mode.max);
        }
    }
}
</code>

===== C signature =====

<code c>
Elm_Object_Select_Mode elm_obj_gengrid_item_select_mode_get(const Eo *obj);
void elm_obj_gengrid_item_select_mode_set(Eo *obj, Elm_Object_Select_Mode mode);
</code>

===== Values =====

  * **mode** - %%The selected mode%%
===== Description =====

%%Control the gengrid item's select mode.%%

%%(If getting mode fails, it returns ELM_OBJECT_SELECT_MODE_MAX)%%

%%elm_gengrid_select_mode_set() changes item's select mode. - ELM_OBJECT_SELECT_MODE_DEFAULT : The item will only call their selection func and callback when first becoming selected. Any further clicks will do nothing, unless you set always select mode. - ELM_OBJECT_SELECT_MODE_ALWAYS : This means that, even if selected, every click will make the selected callbacks be called. - ELM_OBJECT_SELECT_MODE_NONE : This will turn off the ability to select the item entirely and they will neither appear selected nor call selected callback functions. - ELM_OBJECT_SELECT_MODE_DISPLAY_ONLY : This will apply no-finger-size rule with ELM_OBJECT_SELECT_MODE_NONE. No-finger-size rule makes an item can be smaller than lower limit. Clickable objects should be bigger than human touch point device (your finger) for some touch or small screen devices. So it is enabled, the item can be shrink than predefined finger-size value. And the item will be updated.%%{{page>:docs:efl:user:class:elm:gengrid:item:property:select_mode:description&nodate&nolink&nouser}}


===== Implemented by =====

  * **Elm.Gengrid.Item.select_mode**

