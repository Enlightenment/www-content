<title>Elm.Naviframe.item_insert_after</title>
===== Signature =====

<code>
item_insert_after {
    params {
        @in after: free(Elm.Widget.Item, efl_del);
        @in title_label: free(string, free) @optional;
        @in prev_btn: free(Efl.Canvas.Object, efl_del) @nullable;
        @in next_btn: free(Efl.Canvas.Object, efl_del) @nullable;
        @in content: free(Efl.Canvas.Object, efl_del);
        @in item_style: free(string, free) @nullable;
    }
    return: free(Elm.Widget.Item, efl_del);
}
</code>

===== C signature =====

<code c>
Elm_Widget_Item *elm_obj_naviframe_item_insert_after(Eo *obj, Elm_Widget_Item *after, const char *title_label, Efl_Canvas_Object *prev_btn, Efl_Canvas_Object *next_btn, Efl_Canvas_Object *content, const char *item_style);
</code>

===== Parameters =====

  * **after** //(in)// - %%The naviframe item to insert after.%%
  * **title_label** //(in)// - %%The label in the title area. The name of the title label part is "elm.text.title"%%
  * **prev_btn** //(in)// - %%The button to go to the previous item. If it is NULL, then naviframe will create a back button automatically. The name of the prev_btn part is "elm.swallow.prev_btn"%%
  * **next_btn** //(in)// - %%The button to go to the next item. Or It could be just an extra function button. The name of the next_btn part is "elm.swallow.next_btn"%%
  * **content** //(in)// - %%The main content object. The name of content part is "elm.swallow.content"%%
  * **item_style** //(in)// - %%The current item style name. %%''NULL''%% would be default.%%

===== Description =====

%%Insert a new item into the naviframe after item %%''after''%%.%%

%%The item is inserted into the naviframe straight away without any transition operations. This item will be deleted when it is popped.%%

%%The following styles are available for this item: "default"%%
{{page>:develop:efl:user:class:elm:naviframe:method:item_insert_after:description&nouser&nolink&nodate}}

===== Implemented by =====

  * **Elm.Naviframe.item_insert_after**

