<title>Elm.Mapbuf.alpha</title>
===== Signature =====

<code>
@property alpha {
    get {
        values {
            alpha: bool;
        }
    }
    set {
        values {
            alpha: bool;
        }
    }
}
</code>

===== C signature =====

<code c>
Eina_Bool elm_private_mapbuf_alpha_get(const Eo *obj);
void elm_private_mapbuf_alpha_set(Eo *obj, Eina_Bool alpha);
</code>

===== Values =====

  * **alpha** - %%The alpha state.%%
===== Description =====



{{page>:docs:efl:user:class:elm:mapbuf:property:alpha:description&nodate&nolink&nouser}}

==== Getter ====

%%Get a value whether alpha blending is enabled or not.%%

{{page>:docs:efl:user:class:elm:mapbuf:property:alpha:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Set or unset alpha flag for map rendering.%%

%%This sets alpha flag for map rendering. If the object is a type that has its own alpha settings, then this will take precedence. Only image objects have this currently. It stops alpha blending of the map area, and is useful if you know the object and/or all sub-objects is 100% solid.%%

%%Alpha is enabled by default.%%{{page>:docs:efl:user:class:elm:mapbuf:property:alpha:getter_description&nodate&nolink&nouser}}


===== Implemented by =====

  * **Elm.Mapbuf.alpha**

