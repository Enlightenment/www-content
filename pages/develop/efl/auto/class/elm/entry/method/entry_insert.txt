<title>Elm.Entry.entry_insert</title>
===== Signature =====

<code>
entry_insert {
    params {
        @in entry: string;
    }
}
</code>

===== C signature =====

<code c>
void elm_obj_entry_insert(Eo *obj, const char *entry);
</code>

===== Parameters =====

  * **entry** //(in)// - %%The text to insert.%%

===== Description =====

%%Inserts the given text into the entry at the current cursor position.%%

%%This inserts text at the cursor position as if it was typed by the user (note that this also allows markup which a user can't just "type" as it would be converted to escaped text, so this call can be used to insert things like emoticon items or bold push/pop tags, other font and color change tags etc.)%%

%%If any selection exists, it will be replaced by the inserted text.%%

%%The inserted text is subject to any filters set for the widget.%%

%%See also %%[[:docs:efl:auto:class:elm:entry:method:markup_filter_append|Elm.Entry.markup_filter_append]]%%.%%
{{page>:docs:efl:user:class:elm:entry:method:entry_insert:description&nodate&nolink&nouser}}

===== Implemented by =====

  * **Elm.Entry.entry_insert**

