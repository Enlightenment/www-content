<title>Elm.Map.zoom_mode</title>
===== Signature =====

<code>
@property zoom_mode {
    get {
        values {
            mode: Elm.Map.Zoom_Mode;
        }
    }
    set {
        values {
            mode: Elm.Map.Zoom_Mode;
        }
    }
}
</code>

===== C signature =====

<code c>
Elm_Map_Zoom_Mode elm_obj_map_zoom_mode_get(const Eo *obj);
void elm_obj_map_zoom_mode_set(Eo *obj, Elm_Map_Zoom_Mode mode);
</code>

===== Values =====

  * **mode** - %%The zoom mode of the map, being it one of #ELM_MAP_ZOOM_MODE_MANUAL (default), #ELM_MAP_ZOOM_MODE_AUTO_FIT, or #ELM_MAP_ZOOM_MODE_AUTO_FILL.%%
===== Description =====



{{page>:docs:efl:user:class:elm:map:property:zoom_mode:description&nodate&nolink&nouser}}

==== Getter ====

%%Get the zoom mode used by the map object.%%

%%This function returns the current zoom mode used by the ma object.%%

{{page>:docs:efl:user:class:elm:map:property:zoom_mode:getter_description&nodate&nolink&nouser}}

==== Setter ====

%%Set the zoom mode used by the map object.%%

%%This sets the zoom mode to manual or one of the automatic levels. Manual (#ELM_MAP_ZOOM_MODE_MANUAL) means that zoom is set manually by %%[[:docs:efl:auto:class:elm:map:property:zoom_mode|Elm.Map.zoom_mode.set]]%% and will stay at that level until changed by code or until zoom mode is changed. This is the default mode.%%

%%The Automatic modes will allow the map object to automatically adjust zoom mode based on properties. #ELM_MAP_ZOOM_MODE_AUTO_FIT will adjust zoom so the map fits inside the scroll frame with no pixels outside this area. #ELM_MAP_ZOOM_MODE_AUTO_FILL will be similar but ensure no pixels within the frame are left unfilled. Do not forget that the valid sizes are 2^zoom, consequently the map may be smaller than the scroller view.%%{{page>:docs:efl:user:class:elm:map:property:zoom_mode:getter_description&nodate&nolink&nouser}}


===== Implemented by =====

  * **Elm.Map.zoom_mode**

