<title>Elm.Spinner.value_and_text</title>
//Overridden from [[:develop:efl:auto:interface:efl:access:value:property:value_and_text|Efl.Access.Value.value_and_text]] **(get, set)**.//===== Signature =====

<code>
@property value_and_text @protected @pure_virtual {
    get {
        values {
            value: double;
            text: free(string, free);
        }
    }
    set {
        values {
            value: double;
            text: free(string, free);
        }
        return: bool;
    }
}
</code>

===== C signature =====

<code c>
void efl_access_value_and_text_get(const Eo *obj, double *value, const char **text);
Eina_Bool efl_access_value_and_text_set(Eo *obj, double value, const char *text);
</code>

===== Values =====

  * **value** - %%Value of widget casted to floating point number.%%
  * **text** - %%string describing value in given context eg. small, enough%%
===== Description =====

%%Value and text property%%

{{page>:develop:efl:user:class:elm:spinner:property:value_and_text:description&nouser&nolink&nodate}}

==== Getter ====

%%Gets value displayed by a accessible widget.%%{{page>:develop:efl:user:class:elm:spinner:property:value_and_text:getter_description&nouser&nolink&nodate}}


===== Implemented by =====

  * [[:develop:efl:auto:interface:efl:access:value:property:value_and_text|Efl.Access.Value.value_and_text]]
  * [[:develop:efl:auto:class:efl:ui:slider:property:value_and_text|Efl.Ui.Slider.value_and_text]]
  * **Elm.Spinner.value_and_text**

