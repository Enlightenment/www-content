=== EFL 1.21.0 alpha 1 ===
  * //2019-03-04 - by Stefan Schmidt//

This alpha release for 1.22 starts the freeze period and stabilization phase for the 1.22 release cycle. There are still problems to fix and we appreciate any tester of this to let us know about problems seen. This goes for packaging, testing with efl based applications, integration into your systems, etc.

For packagers we have one bonus item to test. 1.22 will be the last release using our autotools build system. From 1.23 onwards we will use meson, which is already in place and working well for developers. To ensure early on testing for packagers as well we produced a tarball with meson for this alpha release as well. Find it [[https://download.enlightenment.org/rel/libs/efl/efl-1.22.0-alpha1-meson.tar.xz|here]] ([[https://download.enlightenment.org/rel/libs/efl/efl-1.22.0-alpha1-meson.tar.xz.sha256|sha256 sum]]). The official tarball for 1.22 will still be produced with autotools and the link can be found below.

**Download**

|LINK|	SHA256|
| http://download.enlightenment.org/rel/libs/efl/efl-1.22.0-alpha1.tar.xz | 453fc38a6b0d275cb7a872dbfc3a07feba6869180f0341162c14755c374fa177 |

**Features:**
   * evas textblock: add/apply cursor cluster APIs based on grapheme cluster
   * efl_ui_spin_button: Addded direction feature.
   * scroller: refactory a momentum scroll animator
   * elementary textpath: support legacy APIs
   * elementary transit: add a convenient API.
   * elementary transit: add a new api - elm_transit_progress_value_set()
   * Text: add markup_range_get
   * Canvas layout: support more Efl.Text.* with efl_part
   * efl: Add support to elput for using elogind instead of systemd
   * eina: add locale-independent eina_convert_strtod_c function
   * elm perf tool - bring one back to efl
   * eina: add locale-independent eina_convert_strtod_c function
   * elm perf tool - bring one back to efl
   * efl gfx_path: introduce efl_gfx_path_reserve()
   * efl gfx_path: remove EFL_GFX_PATH_EVENT_CHANGED
   * efl gfx_path: remove EFL_GFX_PATH_EVENT_CHANGED
   * gfx: Add size hint fill (EO) (T3912)
   * efl_app: add "standby" event (T5494)
   * edje_cc: fail upon detecting invalid part description references in programs (T7016)
   * elput: Add API to allow settings tap-to-click on pointer device
   * ecore_drm2: Add API to allow settings tap-to-click on pointer device
   * efl_ui_win: add 'exit_on_all_windows_closed' class property and unit test (T5494)
   * efl_ui_win: add 'exit_on_close' property and unit test (T5494)
   * eo: implement class overriding (+unit tests) (T7516)
   * eolian gen: initial support for reflection api
   * efl_ui_relative_layout: introduce new relative container (T5487)
   * eolian: introduce typed slice types
   * eolian: add support for inlist structs

**Fixes:**
   * ecore_wl2_dmabuf: Link with ecore_wl2 (T7327)
   * ecore_wl2_dmabuf: Depend on ecore_wl2 (T7327)
   * efl selection manager - avoid multiple selection get callbacks for req
   * evas image: fix a bug in image preloading.
   * evas canvas: fix null possibility of evas_object_above_get().
   * edje: Remove hack code
   * efl gfx_path: prevent buffer overflow.
   * ecore_main: fix the invalid return value
   * eina_vpath: fix the memory leak
   * elementary: remove meaningless memory allocation and leaking
   * elementary: fix memory leak from Efl.Ui.Layout.Object
   * evas gl: fix invalid image size.
   * elementary entry: apply scale to all edje objects
   * eina debug: fix a double unlock issue
   * elm_theme: fix return value when default style fallback is done
   * evas vg: fix memory leak.
   * devas vg: return default root node if possible.
   * evas vg: fix memory leak at gradient.
   * evas filter: remove critical messages from Evas Filter
   * elementary transit: fix wrong pausing time calculation.
   * Canvas text: fix line_jump_by logic
   * cxx: explicitly require c++11 and fix tests to conform
   * edje: fix an overflow issue for state values
   * evas textblock: remove white space after line-break by a next item
   * evas ector: fix memory leaks.
   * evas vg: update render properly.
   * ector software: make a pair of ref/unref.
   * evas gl: recover current program state.
   * ecore_evas - fix aninmator based frame render ticking to full framerate
   * ecore evas - buffer - init ecore event evas as many times as shutdown
   * eina: fix a build failure caused by missing 'locale_t' from OSX
   * ecore_con: handle timeout of the attempt to connect.
   * ecore_evas - fix aninmator based frame render ticking to full framerate
   * ecore evas - buffer - init ecore event evas as many times as shutdown
   * eina: fix a build failure caused by missing 'locale_t' from OSX
   * ecore_con: handle timeout of the attempt to connect.
   * evas gl - make GLintptr etc. also ndefed for GL_VERSION_1_5 fix typedef (T7502)
   * ecore-drm2: Fix drmModeSetCrtc call during fb flip
   * textblock: Fix crash with filters
   * edje - stop trying to access ready deleted exrt/group swallow objects
   * evas: remove memory leaks from deleted Textblock objects
   * elm - dnd - restore to working as drop targets
   * elm_config: Free data returned from eet_read
   * ui/flip: fix efl_pack usage
   * elm_entry: make file loading succeed on 0-sized files (T6562)
   * theme: fix odd state setting on some items for list/genlist/gengrid
   * theme: correct part name in program for elm/hover/base/main_menu_submenu/default (T6219)
   * theme: remove a ton of invalid part description references in various programs (T6873)
   * ecore-evas/extn: use evas from events when updating key masks (T5536)
   * edje: apply maps to textblock cursors and backgrounds (T4977)
   * ecore drm2 - work around kms/drm bug seemingly when no flip event comes
   * elm textpath: reduces differences between actual pos and modified pos
   * elm_map: Make more robust elm_map (T7443)

{{:blank.png?nolink&100|}}
~~DISCUSSIONS~~